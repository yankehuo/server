!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTOR	config/config.h	/^	bool ACTOR;$/;"	m	class:Config
ACTOR	version1/config/config.h	/^	bool ACTOR;$/;"	m	class:Config
Add	timer/heaptimer.cpp	/^void HeapTimer::Add(int id, int timeout, const TimeoutCallBack &cb) {$/;"	f	class:HeapTimer
Add	version1/timer/heaptimer.cpp	/^void HeapTimer::Add(int id, int timeout, const TimeoutCallBack &cb) {$/;"	f	class:HeapTimer
AddClient_	server/webserver.cpp	/^void WebServer::AddClient_(int fd, sockaddr_in addr) {$/;"	f	class:WebServer
AddClient_	test.cpp	/^void WebServer::AddClient_(int fd, sockaddr_in addr) {$/;"	f	class:WebServer
AddClient_	version1/server/webserver.cpp	/^void WebServer::AddClient_(int fd, sockaddr_in addr) {$/;"	f	class:WebServer
AddContent_	http/httpresponse.cpp	/^void HttpResponse::AddContent_(Buffer &buff) {$/;"	f	class:HttpResponse
AddContent_	version1/http/httpresponse.cpp	/^void HttpResponse::AddContent_(Buffer &buff) {$/;"	f	class:HttpResponse
AddFd	server/epoller.cpp	/^bool Epoller::AddFd(int fd, uint32_t events) {$/;"	f	class:Epoller
AddFd	version1/server/epoller.cpp	/^bool Epoller::AddFd(int fd, uint32_t events) {$/;"	f	class:Epoller
AddHeader_	http/httpresponse.cpp	/^void HttpResponse::AddHeader_(Buffer &buff) {$/;"	f	class:HttpResponse
AddHeader_	version1/http/httpresponse.cpp	/^void HttpResponse::AddHeader_(Buffer &buff) {$/;"	f	class:HttpResponse
AddStateLine_	http/httpresponse.cpp	/^void HttpResponse::AddStateLine_(Buffer &buff) {$/;"	f	class:HttpResponse
AddStateLine_	version1/http/httpresponse.cpp	/^void HttpResponse::AddStateLine_(Buffer &buff) {$/;"	f	class:HttpResponse
AddTask	threadpool/threadpool.h	/^	void AddTask(T &&task) {$/;"	f	class:ThreadPool
AddTask	version1/test.cpp	/^	void AddTask(T &&task) {$/;"	f	class:ThreadPool
AddTask	version1/test2.cpp	/^	void AddTask(T &&task) {$/;"	f	class:ThreadPool
AddTask	version1/threadpool/threadpool.h	/^	void AddTask(T &&task) {$/;"	f	class:ThreadPool
Adjust	timer/heaptimer.cpp	/^void HeapTimer::Adjust(int id, int timeout) {$/;"	f	class:HeapTimer
Adjust	version1/timer/heaptimer.cpp	/^void HeapTimer::Adjust(int id, int timeout) {$/;"	f	class:HeapTimer
Append	buffer/buffer.cpp	/^void Buffer::Append(const char *str, size_t len) {$/;"	f	class:Buffer
Append	buffer/buffer.cpp	/^void Buffer::Append(const std::string &str) {$/;"	f	class:Buffer
Append	buffer/buffer.cpp	/^void Buffer::Append(const void *data, size_t len) {$/;"	f	class:Buffer
Append	version1/buffer/buffer.cpp	/^void Buffer::Append(const char *str, size_t len) {$/;"	f	class:Buffer
Append	version1/buffer/buffer.cpp	/^void Buffer::Append(const std::string &str) {$/;"	f	class:Buffer
Append	version1/buffer/buffer.cpp	/^void Buffer::Append(const void *data, size_t len) {$/;"	f	class:Buffer
AppendLogLevelTitle_	logbq/log.cpp	/^void Log::AppendLogLevelTitle_(int level) {$/;"	f	class:Log
AppendLogLevelTitle_	version1/logbq/log.cpp	/^void Log::AppendLogLevelTitle_(int level) {$/;"	f	class:Log
AsynWrite_	logbq/log.cpp	/^void Log::AsynWrite_() {$/;"	f	class:Log
AsynWrite_	version1/logbq/log.cpp	/^void Log::AsynWrite_() {$/;"	f	class:Log
BAD_REQUEST	http/httprequest.h	/^		BAD_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
BAD_REQUEST	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
BAD_REQUEST	version1/http/httprequest.h	/^		BAD_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
BAD_REQUEST	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
BAD_REQUEST	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
BLOCKQUEUE_H	logbq/blockqueue.h	2;"	d
BLOCKQUEUE_H	version1/logbq/blockqueue.h	2;"	d
BODY	http/httprequest.h	/^		BODY,$/;"	e	enum:HttpRequest::PARSE_STATE
BODY	version1/http/httprequest.h	/^		BODY,$/;"	e	enum:HttpRequest::PARSE_STATE
BUFFER_EMPTY	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
BUFFER_EMPTY	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
BUFFER_FULL	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
BUFFER_FULL	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
BUFFER_H	buffer/buffer.h	2;"	d
BUFFER_H	version1/buffer/buffer.h	2;"	d
BUFFER_SIZE	learn/11/11-2lst_timer.h	6;"	d
BUFFER_SIZE	learn/11/11-5tw_timer.h	8;"	d
BUFFER_SIZE	learn/11/11-6time_heap.h	9;"	d
BUFFER_SIZE	learn/13/13-4shm_talk_server.cpp	19;"	d	file:
BUFFER_SIZE	learn/15/15-2pool_cgi.cpp	19;"	d	file:
BUFFER_SIZE	learn/15/15_2_learn_processpool_cgi.cpp	/^	static const int BUFFER_SIZE = 1024;$/;"	m	class:cgi_conn	file:
BUFFER_SIZE	learn/5/5-10set_send_buffer.cpp	9;"	d	file:
BUFFER_SIZE	learn/5/5-11set_recv_buffer.cpp	11;"	d	file:
BUFFER_SIZE	learn/6/6-2testwritev.cpp	14;"	d	file:
BUFFER_SIZE	learn/8/8-3httpparser.cpp	12;"	d	file:
BUFFER_SIZE	learn/9/9-3mtlt.cpp	16;"	d	file:
BUFFER_SIZE	learn/9/9-4oneshot.cpp	16;"	d	file:
BUFFER_SIZE	learn/9/9-5unblockconnect.cpp	15;"	d	file:
BUFFER_SIZE	learn/9/9-6mytalk_client.cpp	14;"	d	file:
BUFFER_SIZE	learn/9/9-7mytalk_server.cpp	16;"	d	file:
BUFFER_SIZE	version1/learn/11/11-2lst_timer.h	6;"	d
BUFFER_SIZE	version1/learn/11/11-5tw_timer.h	8;"	d
BUFFER_SIZE	version1/learn/11/11-6time_heap.h	9;"	d
BUFFER_SIZE	version1/learn/13/13-4shm_talk_server.cpp	19;"	d	file:
BUFFER_SIZE	version1/learn/15/15-2pool_cgi.cpp	19;"	d	file:
BUFFER_SIZE	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	static const int BUFFER_SIZE = 1024;$/;"	m	class:cgi_conn	file:
BUFFER_SIZE	version1/learn/5/5-10set_send_buffer.cpp	9;"	d	file:
BUFFER_SIZE	version1/learn/5/5-11set_recv_buffer.cpp	11;"	d	file:
BUFFER_SIZE	version1/learn/6/6-2testwritev.cpp	14;"	d	file:
BUFFER_SIZE	version1/learn/8/8-3httpparser.cpp	12;"	d	file:
BUFFER_SIZE	version1/learn/9/9-3mtlt.cpp	16;"	d	file:
BUFFER_SIZE	version1/learn/9/9-4oneshot.cpp	16;"	d	file:
BUFFER_SIZE	version1/learn/9/9-5unblockconnect.cpp	15;"	d	file:
BUFFER_SIZE	version1/learn/9/9-6mytalk_client.cpp	14;"	d	file:
BUFFER_SIZE	version1/learn/9/9-7mytalk_server.cpp	16;"	d	file:
BUF_SIZE	learn/10/10-3sigurg.cpp	13;"	d	file:
BUF_SIZE	learn/5/5-7oobrecv.cpp	11;"	d	file:
BUF_SIZE	learn/springsnail/conn.h	/^    static const int BUF_SIZE = 2048;$/;"	m	class:conn
BUF_SIZE	version1/learn/10/10-3sigurg.cpp	13;"	d	file:
BUF_SIZE	version1/learn/5/5-7oobrecv.cpp	11;"	d	file:
BUF_SIZE	version1/learn/springsnail/conn.h	/^    static const int BUF_SIZE = 2048;$/;"	m	class:conn
Back	logbq/blockqueue.h	/^T BlockDeque<T>::Back() {$/;"	f	class:BlockDeque
Back	version1/logbq/blockqueue.h	/^T BlockDeque<T>::Back() {$/;"	f	class:BlockDeque
BeginPtr_	buffer/buffer.cpp	/^char *Buffer::BeginPtr_() {$/;"	f	class:Buffer
BeginPtr_	buffer/buffer.cpp	/^const char *Buffer::BeginPtr_() const {$/;"	f	class:Buffer
BeginPtr_	version1/buffer/buffer.cpp	/^char *Buffer::BeginPtr_() {$/;"	f	class:Buffer
BeginPtr_	version1/buffer/buffer.cpp	/^const char *Buffer::BeginPtr_() const {$/;"	f	class:Buffer
BeginWrite	buffer/buffer.cpp	/^char *Buffer::BeginWrite() {$/;"	f	class:Buffer
BeginWrite	version1/buffer/buffer.cpp	/^char *Buffer::BeginWrite() {$/;"	f	class:Buffer
BeginWriteConst	buffer/buffer.cpp	/^const char *Buffer::BeginWriteConst() const {$/;"	f	class:Buffer
BeginWriteConst	version1/buffer/buffer.cpp	/^const char *Buffer::BeginWriteConst() const {$/;"	f	class:Buffer
BlockDeque	logbq/blockqueue.h	/^BlockDeque<T>::BlockDeque(size_t MaxCapacity) : capacity_(MaxCapacity) {$/;"	f	class:BlockDeque
BlockDeque	logbq/blockqueue.h	/^class BlockDeque {$/;"	c
BlockDeque	version1/logbq/blockqueue.h	/^BlockDeque<T>::BlockDeque(size_t MaxCapacity) : capacity_(MaxCapacity) {$/;"	f	class:BlockDeque
BlockDeque	version1/logbq/blockqueue.h	/^class BlockDeque {$/;"	c
Buffer	buffer/buffer.cpp	/^Buffer::Buffer(int initbuffsize) : buffer_(initbuffsize), readpos_(0), writepos_(0) {}$/;"	f	class:Buffer
Buffer	buffer/buffer.h	/^class Buffer {$/;"	c
Buffer	version1/buffer/buffer.cpp	/^Buffer::Buffer(int initbuffsize) : buffer_(initbuffsize), readpos_(0), writepos_(0) {}$/;"	f	class:Buffer
Buffer	version1/buffer/buffer.h	/^class Buffer {$/;"	c
CC	Makefile	/^CC = g++$/;"	m
CC	build/Makefile	/^CC = g++$/;"	m
CC	pressure/webbench-1.5/Makefile	/^CC?=		gcc$/;"	m
CC	version1/Makefile	/^CC = g++$/;"	m
CC	version1/build/Makefile	/^CC = g++$/;"	m
CC	version1/pressure/webbench-1.5/Makefile	/^CC?=		gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -pthread -Wall -std=c++14$/;"	m
CFLAGS	build/Makefile	/^CFLAGS = -g -O2 -pthread -Wall -std=c++14$/;"	m
CFLAGS	pressure/webbench-1.5/Makefile	/^CFLAGS?=	-Wall -ggdb -W -O$/;"	m
CFLAGS	version1/Makefile	/^CFLAGS = -g -O2 -pthread -Wall -std=c++14$/;"	m
CFLAGS	version1/build/Makefile	/^CFLAGS = -g -O2 -pthread -Wall -std=c++14$/;"	m
CFLAGS	version1/pressure/webbench-1.5/Makefile	/^CFLAGS?=	-Wall -ggdb -W -O$/;"	m
CHECK_STATE	learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	class:http_conn
CHECK_STATE	learn/15/15_4_http_conn.h	/^	enum CHECK_STATE {$/;"	g	class:http_conn
CHECK_STATE	learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	class:http_conn
CHECK_STATE	learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	file:
CHECK_STATE	version1/learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	class:http_conn
CHECK_STATE	version1/learn/15/15_4_http_conn.h	/^	enum CHECK_STATE {$/;"	g	class:http_conn
CHECK_STATE	version1/learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	class:http_conn
CHECK_STATE	version1/learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	g	file:
CHECK_STATE_CONTENT	learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CHECK_STATE_CONTENT	version1/learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	version1/learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	version1/learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_CONTENT	version1/learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CHECK_STATE_HEADER	learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CHECK_STATE_HEADER	version1/learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	version1/learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	version1/learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_HEADER	version1/learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CHECK_STATE_REQUESTLINE	learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CHECK_STATE_REQUESTLINE	version1/learn/15/15-4http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	version1/learn/15/15_4_http_conn.h	/^		CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	version1/learn/15/http_conn.h	/^    enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:http_conn::CHECK_STATE
CHECK_STATE_REQUESTLINE	version1/learn/8/8-3httpparser.cpp	/^enum CHECK_STATE { CHECK_STATE_REQUESTLINE = 0, CHECK_STATE_HEADER, CHECK_STATE_CONTENT };$/;"	e	enum:CHECK_STATE	file:
CLOSED	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
CLOSED	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
CLOSED_CONNECTION	http/httprequest.h	/^		CLOSED_CONNECTION,$/;"	e	enum:HttpRequest::HTTP_CODE
CLOSED_CONNECTION	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
CLOSED_CONNECTION	version1/http/httprequest.h	/^		CLOSED_CONNECTION,$/;"	e	enum:HttpRequest::HTTP_CODE
CLOSED_CONNECTION	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
CLOSED_CONNECTION	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
CODE_PATH	http/httpresponse.cpp	/^const std::unordered_map<int, std::string> HttpResponse::CODE_PATH = {$/;"	m	class:HttpResponse	file:
CODE_PATH	http/httpresponse.h	/^	static const std::unordered_map<int, std::string> CODE_PATH;$/;"	m	class:HttpResponse
CODE_PATH	version1/http/httpresponse.cpp	/^const std::unordered_map<int, std::string> HttpResponse::CODE_PATH = {$/;"	m	class:HttpResponse	file:
CODE_PATH	version1/http/httpresponse.h	/^	static const std::unordered_map<int, std::string> CODE_PATH;$/;"	m	class:HttpResponse
CODE_STATUS	http/httpresponse.cpp	/^const std::unordered_map<int, std::string> HttpResponse::CODE_STATUS = {$/;"	m	class:HttpResponse	file:
CODE_STATUS	http/httpresponse.h	/^	static const std::unordered_map<int, std::string> CODE_STATUS;$/;"	m	class:HttpResponse
CODE_STATUS	version1/http/httpresponse.cpp	/^const std::unordered_map<int, std::string> HttpResponse::CODE_STATUS = {$/;"	m	class:HttpResponse	file:
CODE_STATUS	version1/http/httpresponse.h	/^	static const std::unordered_map<int, std::string> CODE_STATUS;$/;"	m	class:HttpResponse
CONFIG_H	config/config.h	2;"	d
CONFIG_H	version1/config/config.h	2;"	d
CONNECT	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
CONNECT	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
CONNECT	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
CONNECT	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
CONNECT	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
CONNECT	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
CONN_H	learn/springsnail/conn.h	2;"	d
CONN_H	version1/learn/springsnail/conn.h	2;"	d
CONTROL_LEN	learn/13/13-5passfd.cpp	/^static const int CONTROL_LEN = CMSG_LEN( sizeof(int) );$/;"	v	file:
CONTROL_LEN	version1/learn/13/13-5passfd.cpp	/^static const int CONTROL_LEN = CMSG_LEN( sizeof(int) );$/;"	v	file:
Capacity	logbq/blockqueue.h	/^size_t BlockDeque<T>::Capacity() {$/;"	f	class:BlockDeque
Capacity	version1/logbq/blockqueue.h	/^size_t BlockDeque<T>::Capacity() {$/;"	f	class:BlockDeque
Clear	logbq/blockqueue.h	/^void BlockDeque<T>::Clear() {$/;"	f	class:BlockDeque
Clear	timer/heaptimer.cpp	/^void HeapTimer::Clear() {$/;"	f	class:HeapTimer
Clear	version1/logbq/blockqueue.h	/^void BlockDeque<T>::Clear() {$/;"	f	class:BlockDeque
Clear	version1/timer/heaptimer.cpp	/^void HeapTimer::Clear() {$/;"	f	class:HeapTimer
Clock	timer/heaptimer.h	/^typedef std::chrono::high_resolution_clock Clock;$/;"	t
Clock	version1/timer/heaptimer.h	/^typedef std::chrono::high_resolution_clock Clock;$/;"	t
Close	http/httpconn.cpp	/^void HttpConn::Close() {$/;"	f	class:HttpConn
Close	logbq/blockqueue.h	/^void BlockDeque<T>::Close() {$/;"	f	class:BlockDeque
Close	version1/http/httpconn.cpp	/^void HttpConn::Close() {$/;"	f	class:HttpConn
Close	version1/logbq/blockqueue.h	/^void BlockDeque<T>::Close() {$/;"	f	class:BlockDeque
CloseConn_	server/webserver.cpp	/^void WebServer::CloseConn_(HttpConn *client) {$/;"	f	class:WebServer
CloseConn_	test.cpp	/^void WebServer::CloseConn_(HttpConn *client) {$/;"	f	class:WebServer
CloseConn_	version1/server/webserver.cpp	/^void WebServer::CloseConn_(HttpConn *client) {$/;"	f	class:WebServer
Code	http/httpresponse.h	/^	int Code() const {$/;"	f	class:HttpResponse
Code	version1/http/httpresponse.h	/^	int Code() const {$/;"	f	class:HttpResponse
Config	config/config.cpp	/^Config::Config() {$/;"	f	class:Config
Config	config/config.h	/^class Config {$/;"	c
Config	version1/config/config.cpp	/^Config::Config() {$/;"	f	class:Config
Config	version1/config/config.h	/^class Config {$/;"	c
DEFAULT_HTML	http/httprequest.h	/^	static const std::unordered_set<std::string> DEFAULT_HTML;$/;"	m	class:HttpRequest
DEFAULT_HTML	version1/http/httprequest.h	/^	static const std::unordered_set<std::string> DEFAULT_HTML;$/;"	m	class:HttpRequest
DELETE	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
DELETE	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
DELETE	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
DELETE	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
DELETE	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
DELETE	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
DealListen_	server/webserver.cpp	/^void WebServer::DealListen_() {$/;"	f	class:WebServer
DealListen_	test.cpp	/^void WebServer::DealListen_() {$/;"	f	class:WebServer
DealListen_	version1/server/webserver.cpp	/^void WebServer::DealListen_() {$/;"	f	class:WebServer
DealRead_	server/webserver.cpp	/^void WebServer::DealRead_(HttpConn *client) {$/;"	f	class:WebServer
DealRead_	test.cpp	/^void WebServer::DealRead_(HttpConn *client) {$/;"	f	class:WebServer
DealRead_	version1/server/webserver.cpp	/^void WebServer::DealRead_(HttpConn *client) {$/;"	f	class:WebServer
DealWrite_	server/webserver.cpp	/^void WebServer::DealWrite_(HttpConn *client) {$/;"	f	class:WebServer
DealWrite_	test.cpp	/^void WebServer::DealWrite_(HttpConn *client) {$/;"	f	class:WebServer
DealWrite_	version1/server/webserver.cpp	/^void WebServer::DealWrite_(HttpConn *client) {$/;"	f	class:WebServer
DelFd	server/epoller.cpp	/^bool Epoller::DelFd(int fd) {$/;"	f	class:Epoller
DelFd	version1/server/epoller.cpp	/^bool Epoller::DelFd(int fd) {$/;"	f	class:Epoller
Del_	timer/heaptimer.cpp	/^void HeapTimer::Del_(size_t index) {$/;"	f	class:HeapTimer
Del_	version1/timer/heaptimer.cpp	/^void HeapTimer::Del_(size_t index) {$/;"	f	class:HeapTimer
DoWork	timer/heaptimer.cpp	/^void HeapTimer::DoWork(int id) {$/;"	f	class:HeapTimer
DoWork	version1/timer/heaptimer.cpp	/^void HeapTimer::DoWork(int id) {$/;"	f	class:HeapTimer
EPOLLER_H	server/epoller.h	2;"	d
EPOLLER_H	version1/server/epoller.h	2;"	d
EPOLL_WAIT_TIME	learn/springsnail/processpool.h	/^static int EPOLL_WAIT_TIME = 5000;$/;"	v
EPOLL_WAIT_TIME	version1/learn/springsnail/processpool.h	/^static int EPOLL_WAIT_TIME = 5000;$/;"	v
ERROR	learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
ERROR	version1/learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
Empty	logbq/blockqueue.h	/^bool BlockDeque<T>::Empty() {$/;"	f	class:BlockDeque
Empty	version1/logbq/blockqueue.h	/^bool BlockDeque<T>::Empty() {$/;"	f	class:BlockDeque
EnsureWritable	buffer/buffer.cpp	/^void Buffer::EnsureWritable(size_t len) {$/;"	f	class:Buffer
EnsureWritable	version1/buffer/buffer.cpp	/^void Buffer::EnsureWritable(size_t len) {$/;"	f	class:Buffer
Epoller	server/epoller.cpp	/^Epoller::Epoller(int maxevent) : epollfd_(epoll_create(512)), events_(maxevent) {$/;"	f	class:Epoller
Epoller	server/epoller.h	/^class Epoller {$/;"	c
Epoller	version1/server/epoller.cpp	/^Epoller::Epoller(int maxevent) : epollfd_(epoll_create(512)), events_(maxevent) {$/;"	f	class:Epoller
Epoller	version1/server/epoller.h	/^class Epoller {$/;"	c
ErrorContent	http/httpresponse.cpp	/^void HttpResponse::ErrorContent(Buffer &buff, std::string message) {$/;"	f	class:HttpResponse
ErrorContent	version1/http/httpresponse.cpp	/^void HttpResponse::ErrorContent(Buffer &buff, std::string message) {$/;"	f	class:HttpResponse
ErrorHtml_	http/httpresponse.cpp	/^void HttpResponse::ErrorHtml_() {$/;"	f	class:HttpResponse
ErrorHtml_	version1/http/httpresponse.cpp	/^void HttpResponse::ErrorHtml_() {$/;"	f	class:HttpResponse
ExtentTime_	server/webserver.cpp	/^void WebServer::ExtentTime_(HttpConn *client) {$/;"	f	class:WebServer
ExtentTime_	test.cpp	/^void WebServer::ExtentTime_(HttpConn *client) {$/;"	f	class:WebServer
ExtentTime_	version1/server/webserver.cpp	/^void WebServer::ExtentTime_(HttpConn *client) {$/;"	f	class:WebServer
FDWRAPPER_H	learn/springsnail/fdwrapper.cpp	2;"	d	file:
FDWRAPPER_H	learn/springsnail/fdwrapper.h	2;"	d
FDWRAPPER_H	version1/learn/springsnail/fdwrapper.cpp	2;"	d	file:
FDWRAPPER_H	version1/learn/springsnail/fdwrapper.h	2;"	d
FD_LIMIT	learn/11/11-3nonactive_conn.cpp	17;"	d	file:
FD_LIMIT	learn/13/13-4shm_talk_server.cpp	20;"	d	file:
FD_LIMIT	learn/9/9-7mytalk_server.cpp	17;"	d	file:
FD_LIMIT	version1/learn/11/11-3nonactive_conn.cpp	17;"	d	file:
FD_LIMIT	version1/learn/13/13-4shm_talk_server.cpp	20;"	d	file:
FD_LIMIT	version1/learn/9/9-7mytalk_server.cpp	17;"	d	file:
FILENAME_LEN	learn/15/15-4http_conn.h	/^    static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILENAME_LEN	learn/15/15_4_http_conn.h	/^	static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILENAME_LEN	learn/15/http_conn.h	/^    static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILENAME_LEN	version1/learn/15/15-4http_conn.h	/^    static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILENAME_LEN	version1/learn/15/15_4_http_conn.h	/^	static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILENAME_LEN	version1/learn/15/http_conn.h	/^    static const int FILENAME_LEN = 200;$/;"	m	class:http_conn
FILE_REQUEST	http/httprequest.h	/^		FILE_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
FILE_REQUEST	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FILE_REQUEST	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
FILE_REQUEST	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FILE_REQUEST	version1/http/httprequest.h	/^		FILE_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
FILE_REQUEST	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FILE_REQUEST	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
FILE_REQUEST	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FINISH	http/httprequest.h	/^		FINISH,$/;"	e	enum:HttpRequest::PARSE_STATE
FINISH	version1/http/httprequest.h	/^		FINISH,$/;"	e	enum:HttpRequest::PARSE_STATE
FORBIDDENT_REQUEST	http/httprequest.h	/^		FORBIDDENT_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
FORBIDDENT_REQUEST	version1/http/httprequest.h	/^		FORBIDDENT_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
FORBIDDEN_REQUEST	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
FORBIDDEN_REQUEST	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
FORBIDDEN_REQUEST	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
File	http/httpresponse.cpp	/^char *HttpResponse::File() {$/;"	f	class:HttpResponse
File	version1/http/httpresponse.cpp	/^char *HttpResponse::File() {$/;"	f	class:HttpResponse
FileLen	http/httpresponse.cpp	/^size_t HttpResponse::FileLen() const {$/;"	f	class:HttpResponse
FileLen	version1/http/httpresponse.cpp	/^size_t HttpResponse::FileLen() const {$/;"	f	class:HttpResponse
Flush	logbq/blockqueue.h	/^void BlockDeque<T>::Flush() {$/;"	f	class:BlockDeque
Flush	logbq/log.cpp	/^void Log::Flush() {$/;"	f	class:Log
Flush	version1/logbq/blockqueue.h	/^void BlockDeque<T>::Flush() {$/;"	f	class:BlockDeque
Flush	version1/logbq/log.cpp	/^void Log::Flush() {$/;"	f	class:Log
FlushLogThread	logbq/log.cpp	/^void Log::FlushLogThread() {$/;"	f	class:Log
FlushLogThread	version1/logbq/log.cpp	/^void Log::FlushLogThread() {$/;"	f	class:Log
Front	logbq/blockqueue.h	/^T BlockDeque<T>::Front() {$/;"	f	class:BlockDeque
Front	version1/logbq/blockqueue.h	/^T BlockDeque<T>::Front() {$/;"	f	class:BlockDeque
Full	logbq/blockqueue.h	/^bool BlockDeque<T>::Full() {$/;"	f	class:BlockDeque
Full	version1/logbq/blockqueue.h	/^bool BlockDeque<T>::Full() {$/;"	f	class:BlockDeque
GET	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
GET	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
GET	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
GET	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
GET	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
GET	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
GET_REQUEST	http/httprequest.h	/^		GET_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
GET_REQUEST	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
GET_REQUEST	version1/http/httprequest.h	/^		GET_REQUEST,$/;"	e	enum:HttpRequest::HTTP_CODE
GET_REQUEST	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
GET_REQUEST	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
GetAddr	http/httpconn.cpp	/^struct sockaddr_in HttpConn::GetAddr() const {$/;"	f	class:HttpConn
GetAddr	version1/http/httpconn.cpp	/^struct sockaddr_in HttpConn::GetAddr() const {$/;"	f	class:HttpConn
GetEventFd	server/epoller.cpp	/^int Epoller::GetEventFd(size_t i) const {$/;"	f	class:Epoller
GetEventFd	version1/server/epoller.cpp	/^int Epoller::GetEventFd(size_t i) const {$/;"	f	class:Epoller
GetEvents	server/epoller.cpp	/^uint32_t Epoller::GetEvents(size_t i) const {$/;"	f	class:Epoller
GetEvents	version1/server/epoller.cpp	/^uint32_t Epoller::GetEvents(size_t i) const {$/;"	f	class:Epoller
GetFd	http/httpconn.cpp	/^int HttpConn::GetFd() const {$/;"	f	class:HttpConn
GetFd	version1/http/httpconn.cpp	/^int HttpConn::GetFd() const {$/;"	f	class:HttpConn
GetFileType_	http/httpresponse.cpp	/^std::string HttpResponse::GetFileType_() {$/;"	f	class:HttpResponse
GetFileType_	version1/http/httpresponse.cpp	/^std::string HttpResponse::GetFileType_() {$/;"	f	class:HttpResponse
GetIP	http/httpconn.cpp	/^const char *HttpConn::GetIP() const {$/;"	f	class:HttpConn
GetIP	version1/http/httpconn.cpp	/^const char *HttpConn::GetIP() const {$/;"	f	class:HttpConn
GetLevel	logbq/log.cpp	/^int Log::GetLevel() {$/;"	f	class:Log
GetLevel	version1/logbq/log.cpp	/^int Log::GetLevel() {$/;"	f	class:Log
GetNextTick	timer/heaptimer.cpp	/^int HeapTimer::GetNextTick() {$/;"	f	class:HeapTimer
GetNextTick	version1/timer/heaptimer.cpp	/^int HeapTimer::GetNextTick() {$/;"	f	class:HeapTimer
GetPort	http/httpconn.cpp	/^int HttpConn::GetPort() const {$/;"	f	class:HttpConn
GetPort	version1/http/httpconn.cpp	/^int HttpConn::GetPort() const {$/;"	f	class:HttpConn
HEAD	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
HEAD	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
HEAD	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
HEAD	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
HEAD	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
HEAD	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
HEADERS	http/httprequest.h	/^		HEADERS,$/;"	e	enum:HttpRequest::PARSE_STATE
HEADERS	version1/http/httprequest.h	/^		HEADERS,$/;"	e	enum:HttpRequest::PARSE_STATE
HEAP_TIME_H	timer/heaptimer.h	2;"	d
HEAP_TIME_H	version1/timer/heaptimer.h	2;"	d
HTTPCONNECTION_H	learn/15/15-4http_conn.h	2;"	d
HTTPCONNECTION_H	learn/15/15_4_http_conn.h	2;"	d
HTTPCONNECTION_H	learn/15/http_conn.h	2;"	d
HTTPCONNECTION_H	version1/learn/15/15-4http_conn.h	2;"	d
HTTPCONNECTION_H	version1/learn/15/15_4_http_conn.h	2;"	d
HTTPCONNECTION_H	version1/learn/15/http_conn.h	2;"	d
HTTP_CODE	http/httprequest.h	/^	enum HTTP_CODE {$/;"	g	class:HttpRequest
HTTP_CODE	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	class:http_conn
HTTP_CODE	learn/15/15_4_http_conn.h	/^	enum HTTP_CODE {$/;"	g	class:http_conn
HTTP_CODE	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	class:http_conn
HTTP_CODE	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	file:
HTTP_CODE	version1/http/httprequest.h	/^	enum HTTP_CODE {$/;"	g	class:HttpRequest
HTTP_CODE	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	class:http_conn
HTTP_CODE	version1/learn/15/15_4_http_conn.h	/^	enum HTTP_CODE {$/;"	g	class:http_conn
HTTP_CODE	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	class:http_conn
HTTP_CODE	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	g	file:
HTTP_CONN_h	http/httpconn.h	2;"	d
HTTP_CONN_h	version1/http/httpconn.h	2;"	d
HTTP_REQUEST_H	http/httprequest.h	2;"	d
HTTP_REQUEST_H	version1/http/httprequest.h	2;"	d
HTTP_RESPONSE_H	http/httpresponse.h	2;"	d
HTTP_RESPONSE_H	version1/http/httpresponse.h	2;"	d
HasWritten	buffer/buffer.cpp	/^void Buffer::HasWritten(size_t len) {$/;"	f	class:Buffer
HasWritten	version1/buffer/buffer.cpp	/^void Buffer::HasWritten(size_t len) {$/;"	f	class:Buffer
HeapTimer	timer/heaptimer.h	/^	HeapTimer() {$/;"	f	class:HeapTimer
HeapTimer	timer/heaptimer.h	/^class HeapTimer {$/;"	c
HeapTimer	version1/timer/heaptimer.h	/^	HeapTimer() {$/;"	f	class:HeapTimer
HeapTimer	version1/timer/heaptimer.h	/^class HeapTimer {$/;"	c
HttpConn	http/httpconn.cpp	/^HttpConn::HttpConn() {$/;"	f	class:HttpConn
HttpConn	http/httpconn.h	/^class HttpConn {$/;"	c
HttpConn	version1/http/httpconn.cpp	/^HttpConn::HttpConn() {$/;"	f	class:HttpConn
HttpConn	version1/http/httpconn.h	/^class HttpConn {$/;"	c
HttpRequest	http/httprequest.h	/^	HttpRequest() {$/;"	f	class:HttpRequest
HttpRequest	http/httprequest.h	/^class HttpRequest {$/;"	c
HttpRequest	version1/http/httprequest.h	/^	HttpRequest() {$/;"	f	class:HttpRequest
HttpRequest	version1/http/httprequest.h	/^class HttpRequest {$/;"	c
HttpResponse	http/httpresponse.cpp	/^HttpResponse::HttpResponse() {$/;"	f	class:HttpResponse
HttpResponse	http/httpresponse.h	/^class HttpResponse {$/;"	c
HttpResponse	version1/http/httpresponse.cpp	/^HttpResponse::HttpResponse() {$/;"	f	class:HttpResponse
HttpResponse	version1/http/httpresponse.h	/^class HttpResponse {$/;"	c
INTERNAL_ERROR	http/httprequest.h	/^		INTERNAL_ERROR,$/;"	e	enum:HttpRequest::HTTP_CODE
INTERNAL_ERROR	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
INTERNAL_ERROR	version1/http/httprequest.h	/^		INTERNAL_ERROR,$/;"	e	enum:HttpRequest::HTTP_CODE
INTERNAL_ERROR	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
INTERNAL_ERROR	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
IOERR	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
IOERR	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
Init	http/httpconn.cpp	/^void HttpConn::Init(int fd, const sockaddr_in &addr) {$/;"	f	class:HttpConn
Init	http/httprequest.cpp	/^void HttpRequest::Init() {$/;"	f	class:HttpRequest
Init	http/httpresponse.cpp	/^void HttpResponse::Init(const std::string &srcdir, std::string &path, bool iskeepalive, int code) {$/;"	f	class:HttpResponse
Init	logbq/log.cpp	/^void Log::Init(int level = 1, const char *path, const char *suffix, int maxQueueSize) {$/;"	f	class:Log
Init	version1/http/httpconn.cpp	/^void HttpConn::Init(int fd, const sockaddr_in &addr) {$/;"	f	class:HttpConn
Init	version1/http/httprequest.cpp	/^void HttpRequest::Init() {$/;"	f	class:HttpRequest
Init	version1/http/httpresponse.cpp	/^void HttpResponse::Init(const std::string &srcdir, std::string &path, bool iskeepalive, int code) {$/;"	f	class:HttpResponse
Init	version1/logbq/log.cpp	/^void Log::Init(int level = 1, const char *path, const char *suffix, int maxQueueSize) {$/;"	f	class:Log
InitEventMode_	server/webserver.cpp	/^void WebServer::InitEventMode_(int trigmode) {$/;"	f	class:WebServer
InitEventMode_	test.cpp	/^void WebServer::InitEventMode_(int trigmode) {$/;"	f	class:WebServer
InitEventMode_	version1/server/webserver.cpp	/^void WebServer::InitEventMode_(int trigmode) {$/;"	f	class:WebServer
InitSocket_	server/webserver.cpp	/^bool WebServer::InitSocket_() {$/;"	f	class:WebServer
InitSocket_	test.cpp	/^bool WebServer::InitSocket_() {$/;"	f	class:WebServer
InitSocket_	version1/server/webserver.cpp	/^bool WebServer::InitSocket_() {$/;"	f	class:WebServer
Instance	logbq/log.h	/^	static Log *Instance() {$/;"	f	class:Log
Instance	version1/logbq/log.h	/^	static Log *Instance() {$/;"	f	class:Log
IsKeepAlive	http/httpconn.h	/^	bool IsKeepAlive() const {$/;"	f	class:HttpConn
IsKeepAlive	http/httprequest.cpp	/^bool HttpRequest::IsKeepAlive() const {$/;"	f	class:HttpRequest
IsKeepAlive	version1/http/httpconn.h	/^	bool IsKeepAlive() const {$/;"	f	class:HttpConn
IsKeepAlive	version1/http/httprequest.cpp	/^bool HttpRequest::IsKeepAlive() const {$/;"	f	class:HttpRequest
IsOpen	logbq/log.h	/^	bool IsOpen() {$/;"	f	class:Log
IsOpen	version1/logbq/log.h	/^	bool IsOpen() {$/;"	f	class:Log
LDFLAGS	pressure/webbench-1.5/Makefile	/^LDFLAGS?=$/;"	m
LDFLAGS	version1/pressure/webbench-1.5/Makefile	/^LDFLAGS?=$/;"	m
LIBS	pressure/webbench-1.5/Makefile	/^LIBS?=$/;"	m
LIBS	version1/pressure/webbench-1.5/Makefile	/^LIBS?=$/;"	m
LINE_BAD	learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_BAD	version1/learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	version1/learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	version1/learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_BAD	version1/learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_OK	learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_OK	version1/learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	version1/learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	version1/learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OK	version1/learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_OPEN	learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_OPEN	version1/learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	version1/learn/15/15_4_http_conn.h	/^		LINE_OK = 0, LINE_BAD, LINE_OPEN$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	version1/learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:http_conn::LINE_STATUS
LINE_OPEN	version1/learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	e	enum:LINE_STATUS	file:
LINE_STATUS	learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	class:http_conn
LINE_STATUS	learn/15/15_4_http_conn.h	/^	enum LINE_STATUS {$/;"	g	class:http_conn
LINE_STATUS	learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	class:http_conn
LINE_STATUS	learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	file:
LINE_STATUS	version1/learn/15/15-4http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	class:http_conn
LINE_STATUS	version1/learn/15/15_4_http_conn.h	/^	enum LINE_STATUS {$/;"	g	class:http_conn
LINE_STATUS	version1/learn/15/http_conn.h	/^    enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	class:http_conn
LINE_STATUS	version1/learn/8/8-3httpparser.cpp	/^enum LINE_STATUS { LINE_OK = 0, LINE_BAD, LINE_OPEN };$/;"	g	file:
LOCKER_H	learn/14/14-2locker.h	2;"	d
LOCKER_H	learn/15/14-2locker.h	2;"	d
LOCKER_H	learn/15/locker.h	2;"	d
LOCKER_H	version1/learn/14/14-2locker.h	2;"	d
LOCKER_H	version1/learn/15/14-2locker.h	2;"	d
LOCKER_H	version1/learn/15/locker.h	2;"	d
LOGLEVEL	config/config.h	/^	int LOGLEVEL; \/\/ 1$/;"	m	class:Config
LOGLEVEL	version1/config/config.h	/^	int LOGLEVEL; \/\/ 1$/;"	m	class:Config
LOGQUESIZE	config/config.h	/^	int LOGQUESIZE; \/\/ 1024 --> log queue size$/;"	m	class:Config
LOGQUESIZE	version1/config/config.h	/^	int LOGQUESIZE; \/\/ 1024 --> log queue size$/;"	m	class:Config
LOG_BASE	logbq/log.h	67;"	d
LOG_BASE	version1/logbq/log.h	67;"	d
LOG_BUFFER_SIZE	learn/springsnail/log.cpp	/^static int LOG_BUFFER_SIZE = 2048;$/;"	v	file:
LOG_BUFFER_SIZE	version1/learn/springsnail/log.cpp	/^static int LOG_BUFFER_SIZE = 2048;$/;"	v	file:
LOG_DEBUG	logbq/log.h	75;"	d
LOG_DEBUG	version1/logbq/log.h	75;"	d
LOG_ERROR	logbq/log.h	78;"	d
LOG_ERROR	version1/logbq/log.h	78;"	d
LOG_H	learn/springsnail/log.h	2;"	d
LOG_H	logbq/log.h	2;"	d
LOG_H	version1/learn/springsnail/log.h	2;"	d
LOG_H	version1/logbq/log.h	2;"	d
LOG_INFO	logbq/log.h	76;"	d
LOG_INFO	version1/logbq/log.h	76;"	d
LOG_NAME_LEN	logbq/log.h	/^	static const int LOG_NAME_LEN = 256;$/;"	m	class:Log
LOG_NAME_LEN	version1/logbq/log.h	/^	static const int LOG_NAME_LEN = 256;$/;"	m	class:Log
LOG_PATH_LEN	logbq/log.h	/^	static const int LOG_PATH_LEN = 256;$/;"	m	class:Log
LOG_PATH_LEN	version1/logbq/log.h	/^	static const int LOG_PATH_LEN = 256;$/;"	m	class:Log
LOG_WARN	logbq/log.h	77;"	d
LOG_WARN	version1/logbq/log.h	77;"	d
LST_TIMER	learn/11/11-2lst_timer.h	2;"	d
LST_TIMER	version1/learn/11/11-2lst_timer.h	2;"	d
Log	logbq/log.cpp	/^Log::Log() {$/;"	f	class:Log
Log	logbq/log.h	/^class Log {$/;"	c
Log	version1/logbq/log.cpp	/^Log::Log() {$/;"	f	class:Log
Log	version1/logbq/log.h	/^class Log {$/;"	c
MAX_EVENT_NUMBER	learn/10/10-1unievent.cpp	16;"	d	file:
MAX_EVENT_NUMBER	learn/11/11-3nonactive_conn.cpp	18;"	d	file:
MAX_EVENT_NUMBER	learn/13/13-4shm_talk_server.cpp	21;"	d	file:
MAX_EVENT_NUMBER	learn/15/15-1processpool.h	/^    static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_EVENT_NUMBER	learn/15/15-2pool_cgi.cpp	20;"	d	file:
MAX_EVENT_NUMBER	learn/15/15-6main.cpp	18;"	d	file:
MAX_EVENT_NUMBER	learn/15/15_1_learn_processpool.h	/^	static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_EVENT_NUMBER	learn/15/15_6_main.cpp	20;"	d	file:
MAX_EVENT_NUMBER	learn/9/9-3mtlt.cpp	15;"	d	file:
MAX_EVENT_NUMBER	learn/9/9-4oneshot.cpp	15;"	d	file:
MAX_EVENT_NUMBER	learn/9/9-8multi_port.cpp	15;"	d	file:
MAX_EVENT_NUMBER	learn/springsnail/processpool.h	/^    static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_EVENT_NUMBER	version1/learn/10/10-1unievent.cpp	16;"	d	file:
MAX_EVENT_NUMBER	version1/learn/11/11-3nonactive_conn.cpp	18;"	d	file:
MAX_EVENT_NUMBER	version1/learn/13/13-4shm_talk_server.cpp	21;"	d	file:
MAX_EVENT_NUMBER	version1/learn/15/15-1processpool.h	/^    static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_EVENT_NUMBER	version1/learn/15/15-2pool_cgi.cpp	20;"	d	file:
MAX_EVENT_NUMBER	version1/learn/15/15-6main.cpp	18;"	d	file:
MAX_EVENT_NUMBER	version1/learn/15/15_1_learn_processpool.h	/^	static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_EVENT_NUMBER	version1/learn/15/15_6_main.cpp	20;"	d	file:
MAX_EVENT_NUMBER	version1/learn/9/9-3mtlt.cpp	15;"	d	file:
MAX_EVENT_NUMBER	version1/learn/9/9-4oneshot.cpp	15;"	d	file:
MAX_EVENT_NUMBER	version1/learn/9/9-8multi_port.cpp	15;"	d	file:
MAX_EVENT_NUMBER	version1/learn/springsnail/processpool.h	/^    static const int MAX_EVENT_NUMBER = 10000;$/;"	m	class:processpool
MAX_FD	learn/15/15-6main.cpp	17;"	d	file:
MAX_FD	learn/15/15_6_main.cpp	19;"	d	file:
MAX_FD	server/webserver.h	/^	static const int MAX_FD = 65536;$/;"	m	class:WebServer
MAX_FD	version1/learn/15/15-6main.cpp	17;"	d	file:
MAX_FD	version1/learn/15/15_6_main.cpp	19;"	d	file:
MAX_FD	version1/server/webserver.h	/^	static const int MAX_FD = 65536;$/;"	m	class:WebServer
MAX_LINES	logbq/log.h	/^	static const int MAX_LINES = 50000;$/;"	m	class:Log
MAX_LINES	version1/logbq/log.h	/^	static const int MAX_LINES = 50000;$/;"	m	class:Log
MAX_PROCESS_NUMBER	learn/15/15-1processpool.h	/^    static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
MAX_PROCESS_NUMBER	learn/15/15_1_learn_processpool.h	/^	static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
MAX_PROCESS_NUMBER	learn/springsnail/processpool.h	/^    static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
MAX_PROCESS_NUMBER	version1/learn/15/15-1processpool.h	/^    static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
MAX_PROCESS_NUMBER	version1/learn/15/15_1_learn_processpool.h	/^	static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
MAX_PROCESS_NUMBER	version1/learn/springsnail/processpool.h	/^    static const int MAX_PROCESS_NUMBER = 16;$/;"	m	class:processpool
METHOD	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	g	class:http_conn
METHOD	learn/15/15_4_http_conn.h	/^	enum METHOD {$/;"	g	class:http_conn
METHOD	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	g	class:http_conn
METHOD	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	g	class:http_conn
METHOD	version1/learn/15/15_4_http_conn.h	/^	enum METHOD {$/;"	g	class:http_conn
METHOD	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	g	class:http_conn
METHOD_GET	pressure/webbench-1.5/webbench.c	35;"	d	file:
METHOD_GET	version1/pressure/webbench-1.5/webbench.c	35;"	d	file:
METHOD_HEAD	pressure/webbench-1.5/webbench.c	36;"	d	file:
METHOD_HEAD	version1/pressure/webbench-1.5/webbench.c	36;"	d	file:
METHOD_OPTIONS	pressure/webbench-1.5/webbench.c	37;"	d	file:
METHOD_OPTIONS	version1/pressure/webbench-1.5/webbench.c	37;"	d	file:
METHOD_TRACE	pressure/webbench-1.5/webbench.c	38;"	d	file:
METHOD_TRACE	version1/pressure/webbench-1.5/webbench.c	38;"	d	file:
MS	timer/heaptimer.h	/^typedef std::chrono::milliseconds MS;$/;"	t
MS	version1/timer/heaptimer.h	/^typedef std::chrono::milliseconds MS;$/;"	t
MakeResponse	http/httpresponse.cpp	/^void HttpResponse::MakeResponse(Buffer &buff) {$/;"	f	class:HttpResponse
MakeResponse	version1/http/httpresponse.cpp	/^void HttpResponse::MakeResponse(Buffer &buff) {$/;"	f	class:HttpResponse
MakeSpace_	buffer/buffer.cpp	/^void Buffer::MakeSpace_(size_t len) {$/;"	f	class:Buffer
MakeSpace_	version1/buffer/buffer.cpp	/^void Buffer::MakeSpace_(size_t len) {$/;"	f	class:Buffer
Method	http/httprequest.cpp	/^std::string HttpRequest::Method() const {$/;"	f	class:HttpRequest
Method	version1/http/httprequest.cpp	/^std::string HttpRequest::Method() const {$/;"	f	class:HttpRequest
ModFd	server/epoller.cpp	/^bool Epoller::ModFd(int fd, uint32_t events) {$/;"	f	class:Epoller
ModFd	version1/server/epoller.cpp	/^bool Epoller::ModFd(int fd, uint32_t events) {$/;"	f	class:Epoller
N	learn/11/11-5tw_timer.h	/^    static const int N = 60;$/;"	m	class:time_wheel
N	version1/learn/11/11-5tw_timer.h	/^    static const int N = 60;$/;"	m	class:time_wheel
NOTHING	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
NOTHING	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
NO_REQUEST	http/httprequest.h	/^		NO_REQUEST = 0,$/;"	e	enum:HttpRequest::HTTP_CODE
NO_REQUEST	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
NO_REQUEST	version1/http/httprequest.h	/^		NO_REQUEST = 0,$/;"	e	enum:HttpRequest::HTTP_CODE
NO_REQUEST	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_REQUEST	version1/learn/8/8-3httpparser.cpp	/^enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, FORBIDDEN_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:HTTP_CODE	file:
NO_RESOURCE	http/httprequest.h	/^		NO_RESOURCE,$/;"	e	enum:HttpRequest::HTTP_CODE
NO_RESOURCE	learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_RESOURCE	learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
NO_RESOURCE	learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_RESOURCE	version1/http/httprequest.h	/^		NO_RESOURCE,$/;"	e	enum:HttpRequest::HTTP_CODE
NO_RESOURCE	version1/learn/15/15-4http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
NO_RESOURCE	version1/learn/15/15_4_http_conn.h	/^		NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION$/;"	e	enum:http_conn::HTTP_CODE
NO_RESOURCE	version1/learn/15/http_conn.h	/^    enum HTTP_CODE { NO_REQUEST, GET_REQUEST, BAD_REQUEST, NO_RESOURCE, FORBIDDEN_REQUEST, FILE_REQUEST, INTERNAL_ERROR, CLOSED_CONNECTION };$/;"	e	enum:http_conn::HTTP_CODE
OBJ	Makefile	/^OBJ = threadpool\/threadpool.h \\$/;"	m
OBJ	build/Makefile	/^OBJ = threadpool\/threadpool.h \\$/;"	m
OBJ	version1/Makefile	/^OBJ = threadpool\/threadpool.h \\$/;"	m
OBJ	version1/build/Makefile	/^OBJ = threadpool\/threadpool.h \\$/;"	m
OK	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
OK	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
OPENLINGER	config/config.h	/^	bool OPENLINGER; \/\/ false --> elegant exit$/;"	m	class:Config
OPENLINGER	version1/config/config.h	/^	bool OPENLINGER; \/\/ false --> elegant exit$/;"	m	class:Config
OPENLOG	config/config.h	/^	bool OPENLOG; \/\/ true$/;"	m	class:Config
OPENLOG	version1/config/config.h	/^	bool OPENLOG; \/\/ true$/;"	m	class:Config
OPTIONS	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
OPTIONS	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
OPTIONS	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
OPTIONS	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
OPTIONS	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
OPTIONS	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
OP_TYPE	learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	g
OP_TYPE	version1/learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	g
OnProcess_	server/webserver.cpp	/^void WebServer::OnProcess_(HttpConn *client) {$/;"	f	class:WebServer
OnProcess_	test.cpp	/^void WebServer::OnProcess_(HttpConn *client) {$/;"	f	class:WebServer
OnProcess_	version1/server/webserver.cpp	/^void WebServer::OnProcess_(HttpConn *client) {$/;"	f	class:WebServer
OnRead_	server/webserver.cpp	/^void WebServer::OnRead_(HttpConn *client) {$/;"	f	class:WebServer
OnRead_	test.cpp	/^void WebServer::OnRead_(HttpConn *client) {$/;"	f	class:WebServer
OnRead_	version1/server/webserver.cpp	/^void WebServer::OnRead_(HttpConn *client) {$/;"	f	class:WebServer
OnWrite_	server/webserver.cpp	/^void WebServer::OnWrite_(HttpConn *client) {$/;"	f	class:WebServer
OnWrite_	test.cpp	/^void WebServer::OnWrite_(HttpConn *client) {$/;"	f	class:WebServer
OnWrite_	version1/server/webserver.cpp	/^void WebServer::OnWrite_(HttpConn *client) {$/;"	f	class:WebServer
PARSE_STATE	http/httprequest.h	/^	enum PARSE_STATE {$/;"	g	class:HttpRequest
PARSE_STATE	version1/http/httprequest.h	/^	enum PARSE_STATE {$/;"	g	class:HttpRequest
PATCH	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PATCH	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
PATCH	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PATCH	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PATCH	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
PATCH	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PORT	config/config.h	/^	int PORT; \/\/ 6666$/;"	m	class:Config
PORT	version1/config/config.h	/^	int PORT; \/\/ 6666$/;"	m	class:Config
POST	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
POST	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
POST	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
POST	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
POST	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
POST	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PREFIX	pressure/webbench-1.5/Makefile	/^PREFIX?=	\/usr\/local$/;"	m
PREFIX	version1/pressure/webbench-1.5/Makefile	/^PREFIX?=	\/usr\/local$/;"	m
PROCESSPOLL_H	learn/15/15_1_learn_processpool.h	2;"	d
PROCESSPOLL_H	version1/learn/15/15_1_learn_processpool.h	2;"	d
PROCESSPOOL_H	learn/15/15-1processpool.h	2;"	d
PROCESSPOOL_H	learn/springsnail/processpool.h	2;"	d
PROCESSPOOL_H	version1/learn/15/15-1processpool.h	2;"	d
PROCESSPOOL_H	version1/learn/springsnail/processpool.h	2;"	d
PROCESS_COUNT	learn/15/15-2pool_cgi.cpp	21;"	d	file:
PROCESS_COUNT	version1/learn/15/15-2pool_cgi.cpp	21;"	d	file:
PROCESS_LIMIT	learn/13/13-4shm_talk_server.cpp	22;"	d	file:
PROCESS_LIMIT	version1/learn/13/13-4shm_talk_server.cpp	22;"	d	file:
PROGRAM_VERSION	pressure/webbench-1.5/webbench.c	39;"	d	file:
PROGRAM_VERSION	version1/pressure/webbench-1.5/webbench.c	39;"	d	file:
PUT	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PUT	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
PUT	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PUT	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
PUT	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
PUT	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
Parse	http/httprequest.cpp	/^bool HttpRequest::Parse(Buffer &buff) {$/;"	f	class:HttpRequest
Parse	version1/http/httprequest.cpp	/^bool HttpRequest::Parse(Buffer &buff) {$/;"	f	class:HttpRequest
ParseBody_	http/httprequest.cpp	/^void HttpRequest::ParseBody_(const std::string &line) {$/;"	f	class:HttpRequest
ParseBody_	version1/http/httprequest.cpp	/^void HttpRequest::ParseBody_(const std::string &line) {$/;"	f	class:HttpRequest
ParseHeader_	http/httprequest.cpp	/^void HttpRequest::ParseHeader_(const std::string &line) {$/;"	f	class:HttpRequest
ParseHeader_	version1/http/httprequest.cpp	/^void HttpRequest::ParseHeader_(const std::string &line) {$/;"	f	class:HttpRequest
ParsePath_	http/httprequest.cpp	/^void HttpRequest::ParsePath_() {$/;"	f	class:HttpRequest
ParsePath_	version1/http/httprequest.cpp	/^void HttpRequest::ParsePath_() {$/;"	f	class:HttpRequest
ParseRequestLine_	http/httprequest.cpp	/^bool HttpRequest::ParseRequestLine_(const std::string &line) {$/;"	f	class:HttpRequest
ParseRequestLine_	version1/http/httprequest.cpp	/^bool HttpRequest::ParseRequestLine_(const std::string &line) {$/;"	f	class:HttpRequest
Path	http/httprequest.cpp	/^std::string &HttpRequest::Path() {$/;"	f	class:HttpRequest
Path	http/httprequest.cpp	/^std::string HttpRequest::Path() const {$/;"	f	class:HttpRequest
Path	version1/http/httprequest.cpp	/^std::string &HttpRequest::Path() {$/;"	f	class:HttpRequest
Path	version1/http/httprequest.cpp	/^std::string HttpRequest::Path() const {$/;"	f	class:HttpRequest
Peek	buffer/buffer.cpp	/^const char *Buffer::Peek() const {$/;"	f	class:Buffer
Peek	version1/buffer/buffer.cpp	/^const char *Buffer::Peek() const {$/;"	f	class:Buffer
Pool	threadpool/threadpool.h	/^	struct Pool {$/;"	s	class:ThreadPool
Pool	version1/test.cpp	/^	struct Pool {$/;"	s	class:ThreadPool	file:
Pool	version1/test2.cpp	/^	struct Pool {$/;"	s	class:ThreadPool	file:
Pool	version1/threadpool/threadpool.h	/^	struct Pool {$/;"	s	class:ThreadPool
Pop	logbq/blockqueue.h	/^bool BlockDeque<T>::Pop(T &item) {$/;"	f	class:BlockDeque
Pop	logbq/blockqueue.h	/^bool BlockDeque<T>::Pop(T &item, int timeout) {$/;"	f	class:BlockDeque
Pop	timer/heaptimer.cpp	/^void HeapTimer::Pop() {$/;"	f	class:HeapTimer
Pop	version1/logbq/blockqueue.h	/^bool BlockDeque<T>::Pop(T &item) {$/;"	f	class:BlockDeque
Pop	version1/logbq/blockqueue.h	/^bool BlockDeque<T>::Pop(T &item, int timeout) {$/;"	f	class:BlockDeque
Pop	version1/timer/heaptimer.cpp	/^void HeapTimer::Pop() {$/;"	f	class:HeapTimer
PrependableBytes	buffer/buffer.cpp	/^size_t Buffer::PrependableBytes() const {$/;"	f	class:Buffer
PrependableBytes	version1/buffer/buffer.cpp	/^size_t Buffer::PrependableBytes() const {$/;"	f	class:Buffer
ProRead_	test.cpp	/^void WebServer::ProRead_(HttpConn *client, int ret, int readerrno) {$/;"	f	class:WebServer
ProRead_	version1/server/webserver.cpp	/^void WebServer::ProRead_(HttpConn *client, int ret, int readerrno) {$/;"	f	class:WebServer
ProWrite_	test.cpp	/^void WebServer::ProWrite_(HttpConn *client, int ret, int writeerrno) {$/;"	f	class:WebServer
ProWrite_	version1/server/webserver.cpp	/^void WebServer::ProWrite_(HttpConn *client, int ret, int writeerrno) {$/;"	f	class:WebServer
Process	http/httpconn.cpp	/^bool HttpConn::Process() {$/;"	f	class:HttpConn
Process	version1/http/httpconn.cpp	/^bool HttpConn::Process() {$/;"	f	class:HttpConn
PushBack	logbq/blockqueue.h	/^void BlockDeque<T>::PushBack(const T &item) {$/;"	f	class:BlockDeque
PushBack	version1/logbq/blockqueue.h	/^void BlockDeque<T>::PushBack(const T &item) {$/;"	f	class:BlockDeque
PushFront	logbq/blockqueue.h	/^void BlockDeque<T>::PushFront(const T &item) {$/;"	f	class:BlockDeque
PushFront	version1/logbq/blockqueue.h	/^void BlockDeque<T>::PushFront(const T &item) {$/;"	f	class:BlockDeque
READ	learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
READ	version1/learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
READ_BUFFER_SIZE	learn/15/15-4http_conn.h	/^    static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
READ_BUFFER_SIZE	learn/15/15_4_http_conn.h	/^	static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
READ_BUFFER_SIZE	learn/15/http_conn.h	/^    static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
READ_BUFFER_SIZE	version1/learn/15/15-4http_conn.h	/^    static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
READ_BUFFER_SIZE	version1/learn/15/15_4_http_conn.h	/^	static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
READ_BUFFER_SIZE	version1/learn/15/http_conn.h	/^    static const int READ_BUFFER_SIZE = 2048;$/;"	m	class:http_conn
REQUEST_LINE	http/httprequest.h	/^		REQUEST_LINE = 0,$/;"	e	enum:HttpRequest::PARSE_STATE
REQUEST_LINE	version1/http/httprequest.h	/^		REQUEST_LINE = 0,$/;"	e	enum:HttpRequest::PARSE_STATE
REQUEST_SIZE	pressure/webbench-1.5/webbench.c	50;"	d	file:
REQUEST_SIZE	version1/pressure/webbench-1.5/webbench.c	50;"	d	file:
RET_CODE	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	g
RET_CODE	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	g
Read	http/httpconn.cpp	/^ssize_t HttpConn::Read(int *saveerrno) {$/;"	f	class:HttpConn
Read	version1/http/httpconn.cpp	/^ssize_t HttpConn::Read(int *saveerrno) {$/;"	f	class:HttpConn
ReadFd	buffer/buffer.cpp	/^ssize_t Buffer::ReadFd(int fd, int *saveErrno) {$/;"	f	class:Buffer
ReadFd	version1/buffer/buffer.cpp	/^ssize_t Buffer::ReadFd(int fd, int *saveErrno) {$/;"	f	class:Buffer
ReadableBytes	buffer/buffer.cpp	/^size_t Buffer::ReadableBytes() const {$/;"	f	class:Buffer
ReadableBytes	version1/buffer/buffer.cpp	/^size_t Buffer::ReadableBytes() const {$/;"	f	class:Buffer
Retrieve	buffer/buffer.cpp	/^void Buffer::Retrieve(size_t len) {$/;"	f	class:Buffer
Retrieve	version1/buffer/buffer.cpp	/^void Buffer::Retrieve(size_t len) {$/;"	f	class:Buffer
RetrieveAll	buffer/buffer.cpp	/^void Buffer::RetrieveAll() {$/;"	f	class:Buffer
RetrieveAll	version1/buffer/buffer.cpp	/^void Buffer::RetrieveAll() {$/;"	f	class:Buffer
RetrieveAllToStr	buffer/buffer.cpp	/^std::string Buffer::RetrieveAllToStr() {$/;"	f	class:Buffer
RetrieveAllToStr	version1/buffer/buffer.cpp	/^std::string Buffer::RetrieveAllToStr() {$/;"	f	class:Buffer
RetrieveUntil	buffer/buffer.cpp	/^void Buffer::RetrieveUntil(const char *end) {$/;"	f	class:Buffer
RetrieveUntil	version1/buffer/buffer.cpp	/^void Buffer::RetrieveUntil(const char *end) {$/;"	f	class:Buffer
SRVMGR_H	learn/springsnail/mgr.h	2;"	d
SRVMGR_H	version1/learn/springsnail/mgr.h	2;"	d
SUFFIX_TYPE	http/httpresponse.cpp	/^const std::unordered_map<std::string, std::string> HttpResponse::SUFFIX_TYPE = {$/;"	m	class:HttpResponse	file:
SUFFIX_TYPE	http/httpresponse.h	/^	static const std::unordered_map<std::string, std::string> SUFFIX_TYPE;$/;"	m	class:HttpResponse
SUFFIX_TYPE	version1/http/httpresponse.cpp	/^const std::unordered_map<std::string, std::string> HttpResponse::SUFFIX_TYPE = {$/;"	m	class:HttpResponse	file:
SUFFIX_TYPE	version1/http/httpresponse.h	/^	static const std::unordered_map<std::string, std::string> SUFFIX_TYPE;$/;"	m	class:HttpResponse
SendError_	server/webserver.cpp	/^void WebServer::SendError_(int fd, const char *info) {$/;"	f	class:WebServer
SendError_	test.cpp	/^void WebServer::SendError_(int fd, const char *info) {$/;"	f	class:WebServer
SendError_	version1/server/webserver.cpp	/^void WebServer::SendError_(int fd, const char *info) {$/;"	f	class:WebServer
SetFdNonblock	server/webserver.cpp	/^int WebServer::SetFdNonblock(int fd) {$/;"	f	class:WebServer
SetFdNonblock	test.cpp	/^int WebServer::SetFdNonblock(int fd) {$/;"	f	class:WebServer
SetFdNonblock	version1/server/webserver.cpp	/^int WebServer::SetFdNonblock(int fd) {$/;"	f	class:WebServer
SetLevel	logbq/log.cpp	/^void Log::SetLevel(int level) {$/;"	f	class:Log
SetLevel	version1/logbq/log.cpp	/^void Log::SetLevel(int level) {$/;"	f	class:Log
SiftDown_	timer/heaptimer.cpp	/^bool HeapTimer::SiftDown_(size_t index, size_t n) {$/;"	f	class:HeapTimer
SiftDown_	version1/timer/heaptimer.cpp	/^bool HeapTimer::SiftDown_(size_t index, size_t n) {$/;"	f	class:HeapTimer
SiftUp_	timer/heaptimer.cpp	/^void HeapTimer::SiftUp_(size_t i) {$/;"	f	class:HeapTimer
SiftUp_	version1/timer/heaptimer.cpp	/^void HeapTimer::SiftUp_(size_t i) {$/;"	f	class:HeapTimer
Size	logbq/blockqueue.h	/^size_t BlockDeque<T>::Size() {$/;"	f	class:BlockDeque
Size	version1/logbq/blockqueue.h	/^size_t BlockDeque<T>::Size() {$/;"	f	class:BlockDeque
Socket	pressure/webbench-1.5/socket.c	/^int Socket(const char *host, int clientPort)$/;"	f
Socket	version1/pressure/webbench-1.5/socket.c	/^int Socket(const char *host, int clientPort)$/;"	f
Start	server/webserver.cpp	/^void WebServer::Start() {$/;"	f	class:WebServer
Start	test.cpp	/^void WebServer::Start() {$/;"	f	class:WebServer
Start	version1/server/webserver.cpp	/^void WebServer::Start() {$/;"	f	class:WebServer
SwapNode_	timer/heaptimer.cpp	/^void HeapTimer::SwapNode_(size_t i, size_t j) {$/;"	f	class:HeapTimer
SwapNode_	version1/timer/heaptimer.cpp	/^void HeapTimer::SwapNode_(size_t i, size_t j) {$/;"	f	class:HeapTimer
TARGET	Makefile	/^TARGET = tinyserver $/;"	m
TARGET	build/Makefile	/^TARGET = server $/;"	m
TARGET	version1/Makefile	/^TARGET = tinyserver $/;"	m
TARGET	version1/build/Makefile	/^TARGET = server $/;"	m
TCP_BUFFER_SIZE	learn/9/9-8multi_port.cpp	16;"	d	file:
TCP_BUFFER_SIZE	version1/learn/9/9-8multi_port.cpp	16;"	d	file:
THREADNUM	config/config.h	/^	int THREADNUM; \/\/ 8$/;"	m	class:Config
THREADNUM	version1/config/config.h	/^	int THREADNUM; \/\/ 8$/;"	m	class:Config
THREADPOOL_H	learn/15/15-3threadpool.h	2;"	d
THREADPOOL_H	learn/15/15_3_threadpool.h	2;"	d
THREADPOOL_H	learn/15/threadpool.h	2;"	d
THREADPOOL_H	threadpool/threadpool.h	2;"	d
THREADPOOL_H	version1/learn/15/15-3threadpool.h	2;"	d
THREADPOOL_H	version1/learn/15/15_3_threadpool.h	2;"	d
THREADPOOL_H	version1/learn/15/threadpool.h	2;"	d
THREADPOOL_H	version1/test.cpp	2;"	d	file:
THREADPOOL_H	version1/test2.cpp	2;"	d	file:
THREADPOOL_H	version1/threadpool/threadpool.h	2;"	d
TI	learn/11/11-5tw_timer.h	/^    static const int TI = 1; $/;"	m	class:time_wheel
TI	version1/learn/11/11-5tw_timer.h	/^    static const int TI = 1; $/;"	m	class:time_wheel
TIMEOUT	learn/11/11-4io_timer.cpp	1;"	d	file:
TIMEOUT	version1/learn/11/11-4io_timer.cpp	1;"	d	file:
TIMEOUTMS	config/config.h	/^	int TIMEOUTMS; \/\/ 60000 ms$/;"	m	class:Config
TIMEOUTMS	version1/config/config.h	/^	int TIMEOUTMS; \/\/ 60000 ms$/;"	m	class:Config
TIMESLOT	learn/11/11-3nonactive_conn.cpp	19;"	d	file:
TIMESLOT	version1/learn/11/11-3nonactive_conn.cpp	19;"	d	file:
TIME_WHEEL_TIMER	learn/11/11-5tw_timer.h	2;"	d
TIME_WHEEL_TIMER	version1/learn/11/11-5tw_timer.h	2;"	d
TMPDIR	pressure/webbench-1.5/Makefile	/^TMPDIR=\/tmp\/webbench-$(VERSION)$/;"	m
TMPDIR	version1/pressure/webbench-1.5/Makefile	/^TMPDIR=\/tmp\/webbench-$(VERSION)$/;"	m
TRACE	learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
TRACE	learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
TRACE	learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
TRACE	version1/learn/15/15-4http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
TRACE	version1/learn/15/15_4_http_conn.h	/^		GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH$/;"	e	enum:http_conn::METHOD
TRACE	version1/learn/15/http_conn.h	/^    enum METHOD { GET = 0, POST, HEAD, PUT, DELETE, TRACE, OPTIONS, CONNECT, PATCH };$/;"	e	enum:http_conn::METHOD
TRIGMODE	config/config.h	/^	int TRIGMODE; \/\/ 3 --> ET $/;"	m	class:Config
TRIGMODE	version1/config/config.h	/^	int TRIGMODE; \/\/ 3 --> ET $/;"	m	class:Config
TRY_AGAIN	learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
TRY_AGAIN	version1/learn/springsnail/fdwrapper.h	/^enum RET_CODE { OK = 0, NOTHING = 1, IOERR = -1, CLOSED = -2, BUFFER_FULL = -3, BUFFER_EMPTY = -4, TRY_AGAIN };$/;"	e	enum:RET_CODE
ThreadPool	threadpool/threadpool.h	/^	explicit ThreadPool(size_t threadcount = 8) : pool_(std::make_shared<Pool>()) {$/;"	f	class:ThreadPool
ThreadPool	threadpool/threadpool.h	/^class ThreadPool {$/;"	c
ThreadPool	version1/test.cpp	/^	explicit ThreadPool(size_t threadcount = 8) : pool_(std::make_shared<Pool>()) {$/;"	f	class:ThreadPool
ThreadPool	version1/test.cpp	/^class ThreadPool {$/;"	c	file:
ThreadPool	version1/test2.cpp	/^	explicit ThreadPool(size_t threadcount = 8) : pool_(std::make_shared<Pool>()) {$/;"	f	class:ThreadPool
ThreadPool	version1/test2.cpp	/^class ThreadPool {$/;"	c	file:
ThreadPool	version1/threadpool/threadpool.h	/^	explicit ThreadPool(size_t threadcount = 8) : pool_(std::make_shared<Pool>()) {$/;"	f	class:ThreadPool
ThreadPool	version1/threadpool/threadpool.h	/^class ThreadPool {$/;"	c
Tick	timer/heaptimer.cpp	/^void HeapTimer::Tick() {$/;"	f	class:HeapTimer
Tick	version1/timer/heaptimer.cpp	/^void HeapTimer::Tick() {$/;"	f	class:HeapTimer
TimeStamp	timer/heaptimer.h	/^typedef Clock::time_point TimeStamp;$/;"	t
TimeStamp	version1/timer/heaptimer.h	/^typedef Clock::time_point TimeStamp;$/;"	t
TimeoutCallBack	timer/heaptimer.h	/^typedef std::function<void()> TimeoutCallBack;$/;"	t
TimeoutCallBack	version1/timer/heaptimer.h	/^typedef std::function<void()> TimeoutCallBack;$/;"	t
TimerNode	timer/heaptimer.h	/^struct TimerNode {$/;"	s
TimerNode	version1/timer/heaptimer.h	/^struct TimerNode {$/;"	s
ToWriteBytes	http/httpconn.h	/^	int ToWriteBytes() {$/;"	f	class:HttpConn
ToWriteBytes	version1/http/httpconn.h	/^	int ToWriteBytes() {$/;"	f	class:HttpConn
UDP_BUFFER_SIZE	learn/9/9-8multi_port.cpp	17;"	d	file:
UDP_BUFFER_SIZE	version1/learn/9/9-8multi_port.cpp	17;"	d	file:
USER_LIMIT	learn/13/13-4shm_talk_server.cpp	18;"	d	file:
USER_LIMIT	learn/9/9-7mytalk_server.cpp	15;"	d	file:
USER_LIMIT	version1/learn/13/13-4shm_talk_server.cpp	18;"	d	file:
USER_LIMIT	version1/learn/9/9-7mytalk_server.cpp	15;"	d	file:
USER_PER_PROCESS	learn/15/15-1processpool.h	/^    static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
USER_PER_PROCESS	learn/15/15-2pool_cgi.cpp	22;"	d	file:
USER_PER_PROCESS	learn/15/15_1_learn_processpool.h	/^	static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
USER_PER_PROCESS	learn/springsnail/processpool.h	/^    static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
USER_PER_PROCESS	version1/learn/15/15-1processpool.h	/^    static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
USER_PER_PROCESS	version1/learn/15/15-2pool_cgi.cpp	22;"	d	file:
USER_PER_PROCESS	version1/learn/15/15_1_learn_processpool.h	/^	static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
USER_PER_PROCESS	version1/learn/springsnail/processpool.h	/^    static const int USER_PER_PROCESS = 65536;$/;"	m	class:processpool
UnmapFile	http/httpresponse.cpp	/^void HttpResponse::UnmapFile() {$/;"	f	class:HttpResponse
UnmapFile	version1/http/httpresponse.cpp	/^void HttpResponse::UnmapFile() {$/;"	f	class:HttpResponse
VERSION	pressure/webbench-1.5/Makefile	/^VERSION=1.5$/;"	m
VERSION	version1/pressure/webbench-1.5/Makefile	/^VERSION=1.5$/;"	m
Version	http/httprequest.cpp	/^std::string HttpRequest::Version() const {$/;"	f	class:HttpRequest
Version	version1/http/httprequest.cpp	/^std::string HttpRequest::Version() const {$/;"	f	class:HttpRequest
WEBSERVER_H	server/webserver.h	2;"	d
WEBSERVER_H	version1/server/webserver.h	2;"	d
WRITE	learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
WRITE	version1/learn/springsnail/fdwrapper.h	/^enum OP_TYPE { READ = 0, WRITE, ERROR };$/;"	e	enum:OP_TYPE
WRITE_BUFFER_SIZE	learn/15/15-4http_conn.h	/^    static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
WRITE_BUFFER_SIZE	learn/15/15_4_http_conn.h	/^	static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
WRITE_BUFFER_SIZE	learn/15/http_conn.h	/^    static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
WRITE_BUFFER_SIZE	version1/learn/15/15-4http_conn.h	/^    static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
WRITE_BUFFER_SIZE	version1/learn/15/15_4_http_conn.h	/^	static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
WRITE_BUFFER_SIZE	version1/learn/15/http_conn.h	/^    static const int WRITE_BUFFER_SIZE = 1024;$/;"	m	class:http_conn
Wait	server/epoller.cpp	/^int Epoller::Wait(int timeoutms) {$/;"	f	class:Epoller
Wait	version1/server/epoller.cpp	/^int Epoller::Wait(int timeoutms) {$/;"	f	class:Epoller
WebServer	server/webserver.cpp	/^WebServer::WebServer(int port, int trigmode, int timeoutms, bool openlinger, int threadnum, bool openlog, int loglevel, int logquesize, int actor) : $/;"	f	class:WebServer
WebServer	server/webserver.h	/^class WebServer {$/;"	c
WebServer	test.cpp	/^WebServer::WebServer(int port, int trigmode, int timeoutms, bool openlinger, int threadnum, bool openlog, int loglevel, int logquesize, int actor) : $/;"	f	class:WebServer
WebServer	version1/server/webserver.cpp	/^WebServer::WebServer(int port, int trigmode, int timeoutms, bool openlinger, int threadnum, bool openlog, int loglevel, int logquesize, int actor) : $/;"	f	class:WebServer
WebServer	version1/server/webserver.h	/^class WebServer {$/;"	c
WritableBytes	buffer/buffer.cpp	/^size_t Buffer::WritableBytes() const {$/;"	f	class:Buffer
WritableBytes	version1/buffer/buffer.cpp	/^size_t Buffer::WritableBytes() const {$/;"	f	class:Buffer
Write	http/httpconn.cpp	/^ssize_t HttpConn::Write(int *saveerrno) {$/;"	f	class:HttpConn
Write	logbq/log.cpp	/^void Log::Write(int level, const char *format, ...) {$/;"	f	class:Log
Write	version1/http/httpconn.cpp	/^ssize_t HttpConn::Write(int *saveerrno) {$/;"	f	class:HttpConn
Write	version1/logbq/log.cpp	/^void Log::Write(int level, const char *format, ...) {$/;"	f	class:Log
WriteFd	buffer/buffer.cpp	/^ssize_t Buffer::WriteFd(int fd, int *saveErrno) {$/;"	f	class:Buffer
WriteFd	version1/buffer/buffer.cpp	/^ssize_t Buffer::WriteFd(int fd, int *saveErrno) {$/;"	f	class:Buffer
_GNU_SOURCE	learn/9/9-6mytalk_client.cpp	1;"	d	file:
_GNU_SOURCE	learn/9/9-7mytalk_server.cpp	1;"	d	file:
_GNU_SOURCE	version1/learn/9/9-6mytalk_client.cpp	1;"	d	file:
_GNU_SOURCE	version1/learn/9/9-7mytalk_server.cpp	1;"	d	file:
__buf	learn/13/13-3sem.cpp	/^     struct seminfo* __buf;    $/;"	m	union:semun	typeref:struct:semun::seminfo	file:
__buf	version1/learn/13/13-3sem.cpp	/^     struct seminfo* __buf;    $/;"	m	union:semun	typeref:struct:semun::seminfo	file:
a	learn/14/14-1mutual_lock.c	/^int a = 0;$/;"	v
a	version1/learn/14/14-1mutual_lock.c	/^int a = 0;$/;"	v
actor_	server/webserver.h	/^	bool actor_;$/;"	m	class:WebServer
actor_	version1/server/webserver.h	/^	bool actor_;$/;"	m	class:WebServer
add_blank_line	learn/15/15-5http_conn.cpp	/^bool http_conn::add_blank_line()$/;"	f	class:http_conn
add_blank_line	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_blank_line() {$/;"	f	class:http_conn
add_blank_line	learn/15/http_conn.cpp	/^bool http_conn::add_blank_line()$/;"	f	class:http_conn
add_blank_line	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_blank_line()$/;"	f	class:http_conn
add_blank_line	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_blank_line() {$/;"	f	class:http_conn
add_blank_line	version1/learn/15/http_conn.cpp	/^bool http_conn::add_blank_line()$/;"	f	class:http_conn
add_content	learn/15/15-5http_conn.cpp	/^bool http_conn::add_content( const char* content )$/;"	f	class:http_conn
add_content	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_content(const char *content) {$/;"	f	class:http_conn
add_content	learn/15/http_conn.cpp	/^bool http_conn::add_content( const char* content )$/;"	f	class:http_conn
add_content	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_content( const char* content )$/;"	f	class:http_conn
add_content	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_content(const char *content) {$/;"	f	class:http_conn
add_content	version1/learn/15/http_conn.cpp	/^bool http_conn::add_content( const char* content )$/;"	f	class:http_conn
add_content_length	learn/15/15-5http_conn.cpp	/^bool http_conn::add_content_length( int content_len )$/;"	f	class:http_conn
add_content_length	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_content_length(int content_len) {$/;"	f	class:http_conn
add_content_length	learn/15/http_conn.cpp	/^bool http_conn::add_content_length( int content_len )$/;"	f	class:http_conn
add_content_length	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_content_length( int content_len )$/;"	f	class:http_conn
add_content_length	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_content_length(int content_len) {$/;"	f	class:http_conn
add_content_length	version1/learn/15/http_conn.cpp	/^bool http_conn::add_content_length( int content_len )$/;"	f	class:http_conn
add_headers	learn/15/15-5http_conn.cpp	/^bool http_conn::add_headers( int content_len )$/;"	f	class:http_conn
add_headers	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_headers(int content_len) {$/;"	f	class:http_conn
add_headers	learn/15/http_conn.cpp	/^bool http_conn::add_headers( int content_len )$/;"	f	class:http_conn
add_headers	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_headers( int content_len )$/;"	f	class:http_conn
add_headers	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_headers(int content_len) {$/;"	f	class:http_conn
add_headers	version1/learn/15/http_conn.cpp	/^bool http_conn::add_headers( int content_len )$/;"	f	class:http_conn
add_linger	learn/15/15-5http_conn.cpp	/^bool http_conn::add_linger()$/;"	f	class:http_conn
add_linger	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_linger() {$/;"	f	class:http_conn
add_linger	learn/15/http_conn.cpp	/^bool http_conn::add_linger()$/;"	f	class:http_conn
add_linger	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_linger()$/;"	f	class:http_conn
add_linger	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_linger() {$/;"	f	class:http_conn
add_linger	version1/learn/15/http_conn.cpp	/^bool http_conn::add_linger()$/;"	f	class:http_conn
add_read_fd	learn/springsnail/fdwrapper.cpp	/^void add_read_fd( int epollfd, int fd )$/;"	f
add_read_fd	version1/learn/springsnail/fdwrapper.cpp	/^void add_read_fd( int epollfd, int fd )$/;"	f
add_response	learn/15/15-5http_conn.cpp	/^bool http_conn::add_response( const char* format, ... )$/;"	f	class:http_conn
add_response	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_response(const char *format, ...) {$/;"	f	class:http_conn
add_response	learn/15/http_conn.cpp	/^bool http_conn::add_response( const char* format, ... )$/;"	f	class:http_conn
add_response	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_response( const char* format, ... )$/;"	f	class:http_conn
add_response	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_response(const char *format, ...) {$/;"	f	class:http_conn
add_response	version1/learn/15/http_conn.cpp	/^bool http_conn::add_response( const char* format, ... )$/;"	f	class:http_conn
add_status_line	learn/15/15-5http_conn.cpp	/^bool http_conn::add_status_line( int status, const char* title )$/;"	f	class:http_conn
add_status_line	learn/15/15_5_http_conn.cpp	/^bool http_conn::add_status_line(int status, const char *title) {$/;"	f	class:http_conn
add_status_line	learn/15/http_conn.cpp	/^bool http_conn::add_status_line( int status, const char* title )$/;"	f	class:http_conn
add_status_line	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::add_status_line( int status, const char* title )$/;"	f	class:http_conn
add_status_line	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::add_status_line(int status, const char *title) {$/;"	f	class:http_conn
add_status_line	version1/learn/15/http_conn.cpp	/^bool http_conn::add_status_line( int status, const char* title )$/;"	f	class:http_conn
add_timer	learn/11/11-2lst_timer.h	/^    void add_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
add_timer	learn/11/11-2lst_timer.h	/^    void add_timer( util_timer* timer, util_timer* lst_head )$/;"	f	class:sort_timer_lst
add_timer	learn/11/11-5tw_timer.h	/^    tw_timer* add_timer( int timeout )$/;"	f	class:time_wheel
add_timer	learn/11/11-6time_heap.h	/^    void add_timer( heap_timer* timer ) throw ( std::exception )$/;"	f	class:time_heap
add_timer	version1/learn/11/11-2lst_timer.h	/^    void add_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
add_timer	version1/learn/11/11-2lst_timer.h	/^    void add_timer( util_timer* timer, util_timer* lst_head )$/;"	f	class:sort_timer_lst
add_timer	version1/learn/11/11-5tw_timer.h	/^    tw_timer* add_timer( int timeout )$/;"	f	class:time_wheel
add_timer	version1/learn/11/11-6time_heap.h	/^    void add_timer( heap_timer* timer ) throw ( std::exception )$/;"	f	class:time_heap
add_write_fd	learn/springsnail/fdwrapper.cpp	/^void add_write_fd( int epollfd, int fd )$/;"	f
add_write_fd	version1/learn/springsnail/fdwrapper.cpp	/^void add_write_fd( int epollfd, int fd )$/;"	f
addfd	learn/10/10-1unievent.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	learn/11/11-3nonactive_conn.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	learn/13/13-4shm_talk_server.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	learn/15/15-1processpool.h	/^static void addfd( int epollfd, int fd )$/;"	f
addfd	learn/15/15-2pool_cgi.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	learn/15/15-5http_conn.cpp	/^void addfd( int epollfd, int fd, bool one_shot )$/;"	f
addfd	learn/15/15_1_learn_processpool.h	/^static void addfd(int epollfd, int fd) {$/;"	f
addfd	learn/15/15_5_http_conn.cpp	/^void addfd(int epollfd, int fd, bool one_shot) {$/;"	f
addfd	learn/15/http_conn.cpp	/^void addfd( int epollfd, int fd, bool one_shot )$/;"	f
addfd	learn/16/16-4stress_client.cpp	/^void addfd( int epoll_fd, int fd )$/;"	f
addfd	learn/9/9-3mtlt.cpp	/^void addfd( int epollfd, int fd, bool enable_et )$/;"	f
addfd	learn/9/9-4oneshot.cpp	/^void addfd( int epollfd, int fd, bool oneshot )$/;"	f
addfd	learn/9/9-8multi_port.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/10/10-1unievent.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/11/11-3nonactive_conn.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/13/13-4shm_talk_server.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/15/15-1processpool.h	/^static void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/15/15-2pool_cgi.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addfd	version1/learn/15/15-5http_conn.cpp	/^void addfd( int epollfd, int fd, bool one_shot )$/;"	f
addfd	version1/learn/15/15_1_learn_processpool.h	/^static void addfd(int epollfd, int fd) {$/;"	f
addfd	version1/learn/15/15_5_http_conn.cpp	/^void addfd(int epollfd, int fd, bool one_shot) {$/;"	f
addfd	version1/learn/15/http_conn.cpp	/^void addfd( int epollfd, int fd, bool one_shot )$/;"	f
addfd	version1/learn/16/16-4stress_client.cpp	/^void addfd( int epoll_fd, int fd )$/;"	f
addfd	version1/learn/9/9-3mtlt.cpp	/^void addfd( int epollfd, int fd, bool enable_et )$/;"	f
addfd	version1/learn/9/9-4oneshot.cpp	/^void addfd( int epollfd, int fd, bool oneshot )$/;"	f
addfd	version1/learn/9/9-8multi_port.cpp	/^void addfd( int epollfd, int fd )$/;"	f
addr_	http/httpconn.h	/^	struct sockaddr_in addr_;$/;"	m	class:HttpConn	typeref:struct:HttpConn::sockaddr_in
addr_	version1/http/httpconn.h	/^	struct sockaddr_in addr_;$/;"	m	class:HttpConn	typeref:struct:HttpConn::sockaddr_in
address	learn/11/11-2lst_timer.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	learn/11/11-5tw_timer.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	learn/11/11-6time_heap.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	learn/13/13-4shm_talk_server.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
address	learn/15/15-2pool_cgi.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
address	learn/9/9-7mytalk_server.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
address	version1/learn/11/11-2lst_timer.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	version1/learn/11/11-5tw_timer.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	version1/learn/11/11-6time_heap.h	/^    sockaddr_in address;$/;"	m	struct:client_data
address	version1/learn/13/13-4shm_talk_server.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
address	version1/learn/15/15-2pool_cgi.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
address	version1/learn/9/9-7mytalk_server.cpp	/^    sockaddr_in address;$/;"	m	struct:client_data	file:
addsig	learn/10/10-1unievent.cpp	/^void addsig( int sig )$/;"	f
addsig	learn/10/10-3sigurg.cpp	/^void addsig( int sig, void ( *sig_handler )( int ) )$/;"	f
addsig	learn/11/11-3nonactive_conn.cpp	/^void addsig( int sig )$/;"	f
addsig	learn/13/13-4shm_talk_server.cpp	/^void addsig( int sig, void(*handler)(int), bool restart = true )$/;"	f
addsig	learn/15/15-1processpool.h	/^static void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
addsig	learn/15/15-2pool_cgi.cpp	/^void addsig( int sig, void(*handler)(int), bool restart = true )$/;"	f
addsig	learn/15/15-6main.cpp	/^void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
addsig	learn/15/15_1_learn_processpool.h	/^static void addsig(int sig, void(handler)(int), bool restart = true) {$/;"	f
addsig	learn/15/15_6_main.cpp	/^void addsig(int sig, void(handler)(int), bool restart = true) {$/;"	f
addsig	learn/springsnail/processpool.h	/^static void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
addsig	version1/learn/10/10-1unievent.cpp	/^void addsig( int sig )$/;"	f
addsig	version1/learn/10/10-3sigurg.cpp	/^void addsig( int sig, void ( *sig_handler )( int ) )$/;"	f
addsig	version1/learn/11/11-3nonactive_conn.cpp	/^void addsig( int sig )$/;"	f
addsig	version1/learn/13/13-4shm_talk_server.cpp	/^void addsig( int sig, void(*handler)(int), bool restart = true )$/;"	f
addsig	version1/learn/15/15-1processpool.h	/^static void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
addsig	version1/learn/15/15-2pool_cgi.cpp	/^void addsig( int sig, void(*handler)(int), bool restart = true )$/;"	f
addsig	version1/learn/15/15-6main.cpp	/^void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
addsig	version1/learn/15/15_1_learn_processpool.h	/^static void addsig(int sig, void(handler)(int), bool restart = true) {$/;"	f
addsig	version1/learn/15/15_6_main.cpp	/^void addsig(int sig, void(handler)(int), bool restart = true) {$/;"	f
addsig	version1/learn/springsnail/processpool.h	/^static void addsig( int sig, void( handler )(int), bool restart = true )$/;"	f
adjust_timer	learn/11/11-2lst_timer.h	/^    void adjust_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
adjust_timer	version1/learn/11/11-2lst_timer.h	/^    void adjust_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
alarm_handler	pressure/webbench-1.5/webbench.c	/^static void alarm_handler(int signal)$/;"	f	file:
alarm_handler	version1/pressure/webbench-1.5/webbench.c	/^static void alarm_handler(int signal)$/;"	f	file:
another	learn/14/14-1mutual_lock.c	/^void* another( void* arg )$/;"	f
another	learn/14/14-3thread_atfork.c	/^void* another( void* arg )$/;"	f
another	version1/learn/14/14-1mutual_lock.c	/^void* another( void* arg )$/;"	f
another	version1/learn/14/14-3thread_atfork.c	/^void* another( void* arg )$/;"	f
append	learn/15/15-3threadpool.h	/^bool threadpool< T >::append( T* request )$/;"	f	class:threadpool
append	learn/15/15_3_threadpool.h	/^bool threadpool<T>::append(T *request) {$/;"	f	class:threadpool
append	learn/15/threadpool.h	/^bool threadpool< T >::append( T* request )$/;"	f	class:threadpool
append	version1/learn/15/15-3threadpool.h	/^bool threadpool< T >::append( T* request )$/;"	f	class:threadpool
append	version1/learn/15/15_3_threadpool.h	/^bool threadpool<T>::append(T *request) {$/;"	f	class:threadpool
append	version1/learn/15/threadpool.h	/^bool threadpool< T >::append( T* request )$/;"	f	class:threadpool
array	learn/11/11-6time_heap.h	/^    heap_timer** array;$/;"	m	class:time_heap
array	learn/13/13-3sem.cpp	/^     unsigned short int* array;$/;"	m	union:semun	file:
array	version1/learn/11/11-6time_heap.h	/^    heap_timer** array;$/;"	m	class:time_heap
array	version1/learn/13/13-3sem.cpp	/^     unsigned short int* array;$/;"	m	union:semun	file:
b	learn/14/14-1mutual_lock.c	/^int b = 0;$/;"	v
b	version1/learn/14/14-1mutual_lock.c	/^int b = 0;$/;"	v
bench	pressure/webbench-1.5/webbench.c	/^static int bench(void)$/;"	f	file:
bench	version1/pressure/webbench-1.5/webbench.c	/^static int bench(void)$/;"	f	file:
benchcore	pressure/webbench-1.5/webbench.c	/^void benchcore(const char *host,const int port,const char *req)$/;"	f
benchcore	version1/pressure/webbench-1.5/webbench.c	/^void benchcore(const char *host,const int port,const char *req)$/;"	f
benchtime	pressure/webbench-1.5/webbench.c	/^int benchtime=30;$/;"	v
benchtime	version1/pressure/webbench-1.5/webbench.c	/^int benchtime=30;$/;"	v
body_	http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
body_	version1/http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
buf	learn/11/11-2lst_timer.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	learn/11/11-5tw_timer.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	learn/11/11-6time_heap.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	learn/13/13-3sem.cpp	/^     struct semid_ds* buf;     $/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	learn/15/15-2pool_cgi.cpp	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data	file:
buf	learn/9/9-7mytalk_server.cpp	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data	file:
buf	version1/learn/11/11-2lst_timer.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	version1/learn/11/11-5tw_timer.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	version1/learn/11/11-6time_heap.h	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data
buf	version1/learn/13/13-3sem.cpp	/^     struct semid_ds* buf;     $/;"	m	union:semun	typeref:struct:semun::semid_ds	file:
buf	version1/learn/15/15-2pool_cgi.cpp	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data	file:
buf	version1/learn/9/9-7mytalk_server.cpp	/^    char buf[ BUFFER_SIZE ];$/;"	m	struct:client_data	file:
buff_	logbq/log.h	/^	Buffer buff_;$/;"	m	class:Log
buff_	version1/logbq/log.h	/^	Buffer buff_;$/;"	m	class:Log
buffer_	buffer/buffer.h	/^	std::vector<char> buffer_;$/;"	m	class:Buffer
buffer_	version1/buffer/buffer.h	/^	std::vector<char> buffer_;$/;"	m	class:Buffer
build_request	pressure/webbench-1.5/webbench.c	/^void build_request(const char *url)$/;"	f
build_request	version1/pressure/webbench-1.5/webbench.c	/^void build_request(const char *url)$/;"	f
byteorder	learn/5/5-1byteorder.cpp	/^void byteorder()$/;"	f
byteorder	version1/learn/5/5-1byteorder.cpp	/^void byteorder()$/;"	f
bytes	pressure/webbench-1.5/webbench.c	/^int bytes=0;$/;"	v
bytes	version1/pressure/webbench-1.5/webbench.c	/^int bytes=0;$/;"	v
capacity	learn/11/11-6time_heap.h	/^    int capacity;$/;"	m	class:time_heap
capacity	version1/learn/11/11-6time_heap.h	/^    int capacity;$/;"	m	class:time_heap
capacity_	logbq/blockqueue.h	/^	size_t capacity_;$/;"	m	class:BlockDeque
capacity_	version1/logbq/blockqueue.h	/^	size_t capacity_;$/;"	m	class:BlockDeque
cb	timer/heaptimer.h	/^	TimeoutCallBack cb;$/;"	m	struct:TimerNode
cb	version1/timer/heaptimer.h	/^	TimeoutCallBack cb;$/;"	m	struct:TimerNode
cb_func	learn/11/11-2lst_timer.h	/^   void (*cb_func)( client_data* );$/;"	m	class:util_timer
cb_func	learn/11/11-3nonactive_conn.cpp	/^void cb_func( client_data* user_data )$/;"	f
cb_func	learn/11/11-5tw_timer.h	/^    void (*cb_func)( client_data* );$/;"	m	class:tw_timer
cb_func	learn/11/11-6time_heap.h	/^   void (*cb_func)( client_data* );$/;"	m	class:heap_timer
cb_func	version1/learn/11/11-2lst_timer.h	/^   void (*cb_func)( client_data* );$/;"	m	class:util_timer
cb_func	version1/learn/11/11-3nonactive_conn.cpp	/^void cb_func( client_data* user_data )$/;"	f
cb_func	version1/learn/11/11-5tw_timer.h	/^    void (*cb_func)( client_data* );$/;"	m	class:tw_timer
cb_func	version1/learn/11/11-6time_heap.h	/^   void (*cb_func)( client_data* );$/;"	m	class:heap_timer
cgi_conn	learn/15/15_2_learn_processpool_cgi.cpp	/^	cgi_conn() {}$/;"	f	class:cgi_conn
cgi_conn	learn/15/15_2_learn_processpool_cgi.cpp	/^class cgi_conn {$/;"	c	file:
cgi_conn	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	cgi_conn() {}$/;"	f	class:cgi_conn
cgi_conn	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^class cgi_conn {$/;"	c	file:
child_child_handler	learn/15/15-2pool_cgi.cpp	/^void child_child_handler( int sig )$/;"	f
child_child_handler	version1/learn/15/15-2pool_cgi.cpp	/^void child_child_handler( int sig )$/;"	f
child_term_handler	learn/13/13-4shm_talk_server.cpp	/^void child_term_handler( int sig )$/;"	f
child_term_handler	learn/15/15-2pool_cgi.cpp	/^void child_term_handler( int sig )$/;"	f
child_term_handler	version1/learn/13/13-4shm_talk_server.cpp	/^void child_term_handler( int sig )$/;"	f
child_term_handler	version1/learn/15/15-2pool_cgi.cpp	/^void child_term_handler( int sig )$/;"	f
client_data	learn/11/11-2lst_timer.h	/^struct client_data$/;"	s
client_data	learn/11/11-5tw_timer.h	/^struct client_data$/;"	s
client_data	learn/11/11-6time_heap.h	/^struct client_data$/;"	s
client_data	learn/13/13-4shm_talk_server.cpp	/^struct client_data$/;"	s	file:
client_data	learn/15/15-2pool_cgi.cpp	/^struct client_data$/;"	s	file:
client_data	learn/9/9-7mytalk_server.cpp	/^struct client_data$/;"	s	file:
client_data	version1/learn/11/11-2lst_timer.h	/^struct client_data$/;"	s
client_data	version1/learn/11/11-5tw_timer.h	/^struct client_data$/;"	s
client_data	version1/learn/11/11-6time_heap.h	/^struct client_data$/;"	s
client_data	version1/learn/13/13-4shm_talk_server.cpp	/^struct client_data$/;"	s	file:
client_data	version1/learn/15/15-2pool_cgi.cpp	/^struct client_data$/;"	s	file:
client_data	version1/learn/9/9-7mytalk_server.cpp	/^struct client_data$/;"	s	file:
clients	pressure/webbench-1.5/webbench.c	/^int clients=1;$/;"	v
clients	version1/pressure/webbench-1.5/webbench.c	/^int clients=1;$/;"	v
close_conn	learn/15/15-5http_conn.cpp	/^void http_conn::close_conn( bool real_close )$/;"	f	class:http_conn
close_conn	learn/15/15_5_http_conn.cpp	/^void http_conn::close_conn(bool real_close) {$/;"	f	class:http_conn
close_conn	learn/15/http_conn.cpp	/^void http_conn::close_conn( bool real_close )$/;"	f	class:http_conn
close_conn	learn/16/16-4stress_client.cpp	/^void close_conn( int epoll_fd, int sockfd )$/;"	f
close_conn	version1/learn/15/15-5http_conn.cpp	/^void http_conn::close_conn( bool real_close )$/;"	f	class:http_conn
close_conn	version1/learn/15/15_5_http_conn.cpp	/^void http_conn::close_conn(bool real_close) {$/;"	f	class:http_conn
close_conn	version1/learn/15/http_conn.cpp	/^void http_conn::close_conn( bool real_close )$/;"	f	class:http_conn
close_conn	version1/learn/16/16-4stress_client.cpp	/^void close_conn( int epoll_fd, int sockfd )$/;"	f
closefd	learn/springsnail/fdwrapper.cpp	/^void closefd( int epollfd, int fd )$/;"	f
closefd	version1/learn/springsnail/fdwrapper.cpp	/^void closefd( int epollfd, int fd )$/;"	f
code_	http/httpresponse.h	/^	int code_;$/;"	m	class:HttpResponse
code_	version1/http/httpresponse.h	/^	int code_;$/;"	m	class:HttpResponse
cond	learn/14/14-2locker.h	/^    cond()$/;"	f	class:cond
cond	learn/14/14-2locker.h	/^class cond$/;"	c
cond	learn/15/14-2locker.h	/^    cond()$/;"	f	class:cond
cond	learn/15/14-2locker.h	/^class cond$/;"	c
cond	learn/15/locker.h	/^	cond() {$/;"	f	class:cond
cond	learn/15/locker.h	/^class cond {$/;"	c
cond	threadpool/threadpool.h	/^		std::condition_variable cond;$/;"	m	struct:ThreadPool::Pool
cond	version1/learn/14/14-2locker.h	/^    cond()$/;"	f	class:cond
cond	version1/learn/14/14-2locker.h	/^class cond$/;"	c
cond	version1/learn/15/14-2locker.h	/^    cond()$/;"	f	class:cond
cond	version1/learn/15/14-2locker.h	/^class cond$/;"	c
cond	version1/learn/15/locker.h	/^	cond() {$/;"	f	class:cond
cond	version1/learn/15/locker.h	/^class cond {$/;"	c
cond	version1/test.cpp	/^		std::condition_variable cond;$/;"	m	struct:ThreadPool::Pool	file:
cond	version1/test2.cpp	/^		std::condition_variable cond;$/;"	m	struct:ThreadPool::Pool	file:
cond	version1/threadpool/threadpool.h	/^		std::condition_variable cond;$/;"	m	struct:ThreadPool::Pool
condconsumer_	logbq/blockqueue.h	/^	std::condition_variable condconsumer_;$/;"	m	class:BlockDeque
condconsumer_	version1/logbq/blockqueue.h	/^	std::condition_variable condconsumer_;$/;"	m	class:BlockDeque
condproducer_	logbq/blockqueue.h	/^	std::condition_variable condproducer_;$/;"	m	class:BlockDeque
condproducer_	version1/logbq/blockqueue.h	/^	std::condition_variable condproducer_;$/;"	m	class:BlockDeque
conn	learn/springsnail/conn.cpp	/^conn::conn()$/;"	f	class:conn
conn	learn/springsnail/conn.h	/^class conn$/;"	c
conn	version1/learn/springsnail/conn.cpp	/^conn::conn()$/;"	f	class:conn
conn	version1/learn/springsnail/conn.h	/^class conn$/;"	c
conn2srv	learn/springsnail/mgr.cpp	/^int mgr::conn2srv( const sockaddr_in& address )$/;"	f	class:mgr
conn2srv	version1/learn/springsnail/mgr.cpp	/^int mgr::conn2srv( const sockaddr_in& address )$/;"	f	class:mgr
connevent_	server/webserver.h	/^	uint32_t connevent_;$/;"	m	class:WebServer
connevent_	version1/server/webserver.h	/^	uint32_t connevent_;$/;"	m	class:WebServer
connfd	learn/10/10-3sigurg.cpp	/^static int connfd;$/;"	v	file:
connfd	learn/13/13-4shm_talk_server.cpp	/^    int connfd;$/;"	m	struct:client_data	file:
connfd	version1/learn/10/10-3sigurg.cpp	/^static int connfd;$/;"	v	file:
connfd	version1/learn/13/13-4shm_talk_server.cpp	/^    int connfd;$/;"	m	struct:client_data	file:
create	learn/15/15-1processpool.h	/^    static processpool< T >* create( int listenfd, int process_number = 8 )$/;"	f	class:processpool
create	learn/15/15_1_learn_processpool.h	/^	static processpool<T> *create(int listenfd, int process_number = 8) {$/;"	f	class:processpool
create	learn/springsnail/processpool.h	/^    static processpool< C, H, M >* create( int listenfd, int process_number = 8 )$/;"	f	class:processpool
create	version1/learn/15/15-1processpool.h	/^    static processpool< T >* create( int listenfd, int process_number = 8 )$/;"	f	class:processpool
create	version1/learn/15/15_1_learn_processpool.h	/^	static processpool<T> *create(int listenfd, int process_number = 8) {$/;"	f	class:processpool
create	version1/learn/springsnail/processpool.h	/^    static processpool< C, H, M >* create( int listenfd, int process_number = 8 )$/;"	f	class:processpool
cur_size	learn/11/11-6time_heap.h	/^    int cur_size;$/;"	m	class:time_heap
cur_size	version1/learn/11/11-6time_heap.h	/^    int cur_size;$/;"	m	class:time_heap
cur_slot	learn/11/11-5tw_timer.h	/^    int cur_slot;$/;"	m	class:time_wheel
cur_slot	version1/learn/11/11-5tw_timer.h	/^    int cur_slot;$/;"	m	class:time_wheel
daemonize	learn/7/7-3daemonize.cpp	/^bool daemonize()$/;"	f
daemonize	version1/learn/7/7-3daemonize.cpp	/^bool daemonize()$/;"	f
del_resource	learn/13/13-4shm_talk_server.cpp	/^void del_resource()$/;"	f
del_resource	learn/15/15-2pool_cgi.cpp	/^void del_resource()$/;"	f
del_resource	version1/learn/13/13-4shm_talk_server.cpp	/^void del_resource()$/;"	f
del_resource	version1/learn/15/15-2pool_cgi.cpp	/^void del_resource()$/;"	f
del_timer	learn/11/11-2lst_timer.h	/^    void del_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
del_timer	learn/11/11-5tw_timer.h	/^    void del_timer( tw_timer* timer )$/;"	f	class:time_wheel
del_timer	learn/11/11-6time_heap.h	/^    void del_timer( heap_timer* timer )$/;"	f	class:time_heap
del_timer	version1/learn/11/11-2lst_timer.h	/^    void del_timer( util_timer* timer )$/;"	f	class:sort_timer_lst
del_timer	version1/learn/11/11-5tw_timer.h	/^    void del_timer( tw_timer* timer )$/;"	f	class:time_wheel
del_timer	version1/learn/11/11-6time_heap.h	/^    void del_timer( heap_timer* timer )$/;"	f	class:time_heap
deq_	logbq/blockqueue.h	/^	std::deque<T> deq_;$/;"	m	class:BlockDeque
deq_	version1/logbq/blockqueue.h	/^	std::deque<T> deq_;$/;"	m	class:BlockDeque
deque_	logbq/log.h	/^	std::unique_ptr<BlockDeque<std::string>> deque_;$/;"	m	class:Log
deque_	version1/logbq/log.h	/^	std::unique_ptr<BlockDeque<std::string>> deque_;$/;"	m	class:Log
do_request	learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request()$/;"	f	class:http_conn
do_request	learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request() {$/;"	f	class:http_conn
do_request	learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request()$/;"	f	class:http_conn
do_request	version1/learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request()$/;"	f	class:http_conn
do_request	version1/learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request() {$/;"	f	class:http_conn
do_request	version1/learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::do_request()$/;"	f	class:http_conn
doc_root	learn/15/15-5http_conn.cpp	/^const char* doc_root = "\/var\/www\/html";$/;"	v
doc_root	learn/15/15_5_http_conn.cpp	/^const char *doc_root = "\/var\/www\/html";$/;"	v
doc_root	learn/15/http_conn.cpp	/^const char* doc_root = "\/var\/www\/html";$/;"	v
doc_root	version1/learn/15/15-5http_conn.cpp	/^const char* doc_root = "\/var\/www\/html";$/;"	v
doc_root	version1/learn/15/15_5_http_conn.cpp	/^const char *doc_root = "\/var\/www\/html";$/;"	v
doc_root	version1/learn/15/http_conn.cpp	/^const char* doc_root = "\/var\/www\/html";$/;"	v
empty	learn/11/11-6time_heap.h	/^    bool empty() const { return cur_size == 0; }$/;"	f	class:time_heap
empty	version1/learn/11/11-6time_heap.h	/^    bool empty() const { return cur_size == 0; }$/;"	f	class:time_heap
end	learn/11/11-4io_timer.cpp	/^time_t end = time( NULL );$/;"	v
end	version1/learn/11/11-4io_timer.cpp	/^time_t end = time( NULL );$/;"	v
epoller_	server/webserver.h	/^	std::unique_ptr<Epoller> epoller_;$/;"	m	class:WebServer
epoller_	version1/server/webserver.h	/^	std::unique_ptr<Epoller> epoller_;$/;"	m	class:WebServer
epollfd	learn/11/11-3nonactive_conn.cpp	/^static int epollfd = 0;$/;"	v	file:
epollfd	learn/13/13-4shm_talk_server.cpp	/^int epollfd;$/;"	v
epollfd	learn/15/15-2pool_cgi.cpp	/^int epollfd;$/;"	v
epollfd	learn/9/9-4oneshot.cpp	/^   int epollfd;$/;"	m	struct:fds	file:
epollfd	version1/learn/11/11-3nonactive_conn.cpp	/^static int epollfd = 0;$/;"	v	file:
epollfd	version1/learn/13/13-4shm_talk_server.cpp	/^int epollfd;$/;"	v
epollfd	version1/learn/15/15-2pool_cgi.cpp	/^int epollfd;$/;"	v
epollfd	version1/learn/9/9-4oneshot.cpp	/^   int epollfd;$/;"	m	struct:fds	file:
epollfd_	server/epoller.h	/^	int epollfd_;$/;"	m	class:Epoller
epollfd_	version1/server/epoller.h	/^	int epollfd_;$/;"	m	class:Epoller
error_400_form	learn/15/15-5http_conn.cpp	/^const char* error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_form	learn/15/15_5_http_conn.cpp	/^const char *error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_form	learn/15/http_conn.cpp	/^const char* error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_form	version1/learn/15/15-5http_conn.cpp	/^const char* error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_form	version1/learn/15/15_5_http_conn.cpp	/^const char *error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_form	version1/learn/15/http_conn.cpp	/^const char* error_400_form = "Your request has bad syntax or is inherently impossible to satisfy.\\n";$/;"	v
error_400_title	learn/15/15-5http_conn.cpp	/^const char* error_400_title = "Bad Request";$/;"	v
error_400_title	learn/15/15_5_http_conn.cpp	/^const char *error_400_title = "Bad Request";$/;"	v
error_400_title	learn/15/http_conn.cpp	/^const char* error_400_title = "Bad Request";$/;"	v
error_400_title	version1/learn/15/15-5http_conn.cpp	/^const char* error_400_title = "Bad Request";$/;"	v
error_400_title	version1/learn/15/15_5_http_conn.cpp	/^const char *error_400_title = "Bad Request";$/;"	v
error_400_title	version1/learn/15/http_conn.cpp	/^const char* error_400_title = "Bad Request";$/;"	v
error_403_form	learn/15/15-5http_conn.cpp	/^const char* error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_form	learn/15/15_5_http_conn.cpp	/^const char *error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_form	learn/15/http_conn.cpp	/^const char* error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_form	version1/learn/15/15-5http_conn.cpp	/^const char* error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_form	version1/learn/15/15_5_http_conn.cpp	/^const char *error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_form	version1/learn/15/http_conn.cpp	/^const char* error_403_form = "You do not have permission to get file from this server.\\n";$/;"	v
error_403_title	learn/15/15-5http_conn.cpp	/^const char* error_403_title = "Forbidden";$/;"	v
error_403_title	learn/15/15_5_http_conn.cpp	/^const char *error_403_title = "Forbidden";$/;"	v
error_403_title	learn/15/http_conn.cpp	/^const char* error_403_title = "Forbidden";$/;"	v
error_403_title	version1/learn/15/15-5http_conn.cpp	/^const char* error_403_title = "Forbidden";$/;"	v
error_403_title	version1/learn/15/15_5_http_conn.cpp	/^const char *error_403_title = "Forbidden";$/;"	v
error_403_title	version1/learn/15/http_conn.cpp	/^const char* error_403_title = "Forbidden";$/;"	v
error_404_form	learn/15/15-5http_conn.cpp	/^const char* error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_form	learn/15/15_5_http_conn.cpp	/^const char *error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_form	learn/15/http_conn.cpp	/^const char* error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_form	version1/learn/15/15-5http_conn.cpp	/^const char* error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_form	version1/learn/15/15_5_http_conn.cpp	/^const char *error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_form	version1/learn/15/http_conn.cpp	/^const char* error_404_form = "The requested file was not found on this server.\\n";$/;"	v
error_404_title	learn/15/15-5http_conn.cpp	/^const char* error_404_title = "Not Found";$/;"	v
error_404_title	learn/15/15_5_http_conn.cpp	/^const char *error_404_title = "Not Found";$/;"	v
error_404_title	learn/15/http_conn.cpp	/^const char* error_404_title = "Not Found";$/;"	v
error_404_title	version1/learn/15/15-5http_conn.cpp	/^const char* error_404_title = "Not Found";$/;"	v
error_404_title	version1/learn/15/15_5_http_conn.cpp	/^const char *error_404_title = "Not Found";$/;"	v
error_404_title	version1/learn/15/http_conn.cpp	/^const char* error_404_title = "Not Found";$/;"	v
error_500_form	learn/15/15-5http_conn.cpp	/^const char* error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_form	learn/15/15_5_http_conn.cpp	/^const char *error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_form	learn/15/http_conn.cpp	/^const char* error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_form	version1/learn/15/15-5http_conn.cpp	/^const char* error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_form	version1/learn/15/15_5_http_conn.cpp	/^const char *error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_form	version1/learn/15/http_conn.cpp	/^const char* error_500_form = "There was an unusual problem serving the requested file.\\n";$/;"	v
error_500_title	learn/15/15-5http_conn.cpp	/^const char* error_500_title = "Internal Error";$/;"	v
error_500_title	learn/15/15_5_http_conn.cpp	/^const char *error_500_title = "Internal Error";$/;"	v
error_500_title	learn/15/http_conn.cpp	/^const char* error_500_title = "Internal Error";$/;"	v
error_500_title	version1/learn/15/15-5http_conn.cpp	/^const char* error_500_title = "Internal Error";$/;"	v
error_500_title	version1/learn/15/15_5_http_conn.cpp	/^const char *error_500_title = "Internal Error";$/;"	v
error_500_title	version1/learn/15/http_conn.cpp	/^const char* error_500_title = "Internal Error";$/;"	v
et	learn/9/9-3mtlt.cpp	/^void et( epoll_event* events, int number, int epollfd, int listenfd )$/;"	f
et	version1/learn/9/9-3mtlt.cpp	/^void et( epoll_event* events, int number, int epollfd, int listenfd )$/;"	f
events_	server/epoller.h	/^	std::vector<struct epoll_event> events_;$/;"	m	class:Epoller
events_	version1/server/epoller.h	/^	std::vector<struct epoll_event> events_;$/;"	m	class:Epoller
expire	learn/11/11-2lst_timer.h	/^   time_t expire; $/;"	m	class:util_timer
expire	learn/11/11-6time_heap.h	/^   time_t expire;$/;"	m	class:heap_timer
expire	version1/learn/11/11-2lst_timer.h	/^   time_t expire; $/;"	m	class:util_timer
expire	version1/learn/11/11-6time_heap.h	/^   time_t expire;$/;"	m	class:heap_timer
expires	timer/heaptimer.h	/^	TimeStamp expires;$/;"	m	struct:TimerNode
expires	version1/timer/heaptimer.h	/^	TimeStamp expires;$/;"	m	struct:TimerNode
failed	pressure/webbench-1.5/webbench.c	/^int failed=0;$/;"	v
failed	version1/pressure/webbench-1.5/webbench.c	/^int failed=0;$/;"	v
fd_	http/httpconn.h	/^	int fd_;$/;"	m	class:HttpConn
fd_	version1/http/httpconn.h	/^	int fd_;$/;"	m	class:HttpConn
fds	learn/9/9-4oneshot.cpp	/^struct fds$/;"	s	file:
fds	version1/learn/9/9-4oneshot.cpp	/^struct fds$/;"	s	file:
force	pressure/webbench-1.5/webbench.c	/^int force=0;$/;"	v
force	version1/pressure/webbench-1.5/webbench.c	/^int force=0;$/;"	v
force_reload	pressure/webbench-1.5/webbench.c	/^int force_reload=0;$/;"	v
force_reload	version1/pressure/webbench-1.5/webbench.c	/^int force_reload=0;$/;"	v
fp_	logbq/log.h	/^	FILE *fp_;$/;"	m	class:Log
fp_	version1/logbq/log.h	/^	FILE *fp_;$/;"	m	class:Log
free_conn	learn/springsnail/mgr.cpp	/^void mgr::free_conn( conn* connection )$/;"	f	class:mgr
free_conn	version1/learn/springsnail/mgr.cpp	/^void mgr::free_conn( conn* connection )$/;"	f	class:mgr
get_line	learn/15/15-4http_conn.h	/^    char* get_line() { return m_read_buf + m_start_line; }$/;"	f	class:http_conn
get_line	learn/15/15_4_http_conn.h	/^	char *get_line() {$/;"	f	class:http_conn
get_line	learn/15/http_conn.h	/^    char* get_line() { return m_read_buf + m_start_line; }$/;"	f	class:http_conn
get_line	version1/learn/15/15-4http_conn.h	/^    char* get_line() { return m_read_buf + m_start_line; }$/;"	f	class:http_conn
get_line	version1/learn/15/15_4_http_conn.h	/^	char *get_line() {$/;"	f	class:http_conn
get_line	version1/learn/15/http_conn.h	/^    char* get_line() { return m_read_buf + m_start_line; }$/;"	f	class:http_conn
get_most_free_srv	learn/springsnail/processpool.h	/^int processpool< C, H, M >::get_most_free_srv()$/;"	f	class:processpool
get_most_free_srv	version1/learn/springsnail/processpool.h	/^int processpool< C, H, M >::get_most_free_srv()$/;"	f	class:processpool
get_used_conn_cnt	learn/springsnail/mgr.cpp	/^int mgr::get_used_conn_cnt()$/;"	f	class:mgr
get_used_conn_cnt	version1/learn/springsnail/mgr.cpp	/^int mgr::get_used_conn_cnt()$/;"	f	class:mgr
handle_error_en	learn/14/14-5sigmask.c	10;"	d	file:
handle_error_en	version1/learn/14/14-5sigmask.c	10;"	d	file:
handle_term	learn/5/5-3testlisten.cpp	/^static void handle_term( int sig )$/;"	f	file:
handle_term	learn/test/testlisten.c	/^static void handle_term(int sig){$/;"	f	file:
handle_term	learn/testlisten.c	/^static void handle_term(int sig){$/;"	f	file:
handle_term	version1/learn/5/5-3testlisten.cpp	/^static void handle_term( int sig )$/;"	f	file:
handle_term	version1/learn/test/testlisten.c	/^static void handle_term(int sig){$/;"	f	file:
handle_term	version1/learn/testlisten.c	/^static void handle_term(int sig){$/;"	f	file:
handler	learn/14/14-5sigmask.c	/^static void handler( int arg )$/;"	f	file:
handler	version1/learn/14/14-5sigmask.c	/^static void handler( int arg )$/;"	f	file:
head	learn/11/11-2lst_timer.h	/^    util_timer* head;$/;"	m	class:sort_timer_lst
head	version1/learn/11/11-2lst_timer.h	/^    util_timer* head;$/;"	m	class:sort_timer_lst
header_	http/httprequest.h	/^	std::unordered_map<std::string, std::string> header_;$/;"	m	class:HttpRequest
header_	version1/http/httprequest.h	/^	std::unordered_map<std::string, std::string> header_;$/;"	m	class:HttpRequest
heap_	timer/heaptimer.h	/^	std::vector<TimerNode> heap_;$/;"	m	class:HeapTimer
heap_	version1/timer/heaptimer.h	/^	std::vector<TimerNode> heap_;$/;"	m	class:HeapTimer
heap_timer	learn/11/11-6time_heap.h	/^    heap_timer( int delay )$/;"	f	class:heap_timer
heap_timer	learn/11/11-6time_heap.h	/^class heap_timer$/;"	c
heap_timer	version1/learn/11/11-6time_heap.h	/^    heap_timer( int delay )$/;"	f	class:heap_timer
heap_timer	version1/learn/11/11-6time_heap.h	/^class heap_timer$/;"	c
host	learn/springsnail/mgr.h	/^class host$/;"	c
host	pressure/webbench-1.5/webbench.c	/^char host[MAXHOSTNAMELEN];$/;"	v
host	version1/learn/springsnail/mgr.h	/^class host$/;"	c
host	version1/pressure/webbench-1.5/webbench.c	/^char host[MAXHOSTNAMELEN];$/;"	v
http10	pressure/webbench-1.5/webbench.c	/^int http10=1; \/* 0 - http\/0.9, 1 - http\/1.0, 2 - http\/1.1 *\/$/;"	v
http10	version1/pressure/webbench-1.5/webbench.c	/^int http10=1; \/* 0 - http\/0.9, 1 - http\/1.0, 2 - http\/1.1 *\/$/;"	v
http_conn	learn/15/15-4http_conn.h	/^    http_conn(){}$/;"	f	class:http_conn
http_conn	learn/15/15-4http_conn.h	/^class http_conn$/;"	c
http_conn	learn/15/15_4_http_conn.h	/^	http_conn() {}$/;"	f	class:http_conn
http_conn	learn/15/15_4_http_conn.h	/^class http_conn {$/;"	c
http_conn	learn/15/http_conn.h	/^    http_conn(){}$/;"	f	class:http_conn
http_conn	learn/15/http_conn.h	/^class http_conn$/;"	c
http_conn	version1/learn/15/15-4http_conn.h	/^    http_conn(){}$/;"	f	class:http_conn
http_conn	version1/learn/15/15-4http_conn.h	/^class http_conn$/;"	c
http_conn	version1/learn/15/15_4_http_conn.h	/^	http_conn() {}$/;"	f	class:http_conn
http_conn	version1/learn/15/15_4_http_conn.h	/^class http_conn {$/;"	c
http_conn	version1/learn/15/http_conn.h	/^    http_conn(){}$/;"	f	class:http_conn
http_conn	version1/learn/15/http_conn.h	/^class http_conn$/;"	c
id	timer/heaptimer.h	/^	int id;$/;"	m	struct:TimerNode
id	version1/timer/heaptimer.h	/^	int id;$/;"	m	struct:TimerNode
infork	learn/14/14-3thread_atfork.c	/^void infork()$/;"	f
infork	version1/learn/14/14-3thread_atfork.c	/^void infork()$/;"	f
init	learn/15/15-5http_conn.cpp	/^void http_conn::init( int sockfd, const sockaddr_in& addr )$/;"	f	class:http_conn
init	learn/15/15-5http_conn.cpp	/^void http_conn::init()$/;"	f	class:http_conn
init	learn/15/15_2_learn_processpool_cgi.cpp	/^	void init(int epollfd, int sockfd, const  sockaddr_in &client_addr) {$/;"	f	class:cgi_conn
init	learn/15/15_5_http_conn.cpp	/^void http_conn::init() {$/;"	f	class:http_conn
init	learn/15/15_5_http_conn.cpp	/^void http_conn::init(int sockfd, const sockaddr_in &addr) {$/;"	f	class:http_conn
init	learn/15/http_conn.cpp	/^void http_conn::init( int sockfd, const sockaddr_in& addr )$/;"	f	class:http_conn
init	learn/15/http_conn.cpp	/^void http_conn::init()$/;"	f	class:http_conn
init	version1/learn/15/15-5http_conn.cpp	/^void http_conn::init( int sockfd, const sockaddr_in& addr )$/;"	f	class:http_conn
init	version1/learn/15/15-5http_conn.cpp	/^void http_conn::init()$/;"	f	class:http_conn
init	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	void init(int epollfd, int sockfd, const  sockaddr_in &client_addr) {$/;"	f	class:cgi_conn
init	version1/learn/15/15_5_http_conn.cpp	/^void http_conn::init() {$/;"	f	class:http_conn
init	version1/learn/15/15_5_http_conn.cpp	/^void http_conn::init(int sockfd, const sockaddr_in &addr) {$/;"	f	class:http_conn
init	version1/learn/15/http_conn.cpp	/^void http_conn::init( int sockfd, const sockaddr_in& addr )$/;"	f	class:http_conn
init	version1/learn/15/http_conn.cpp	/^void http_conn::init()$/;"	f	class:http_conn
init_clt	learn/springsnail/conn.cpp	/^void conn::init_clt( int sockfd, const sockaddr_in& client_addr )$/;"	f	class:conn
init_clt	version1/learn/springsnail/conn.cpp	/^void conn::init_clt( int sockfd, const sockaddr_in& client_addr )$/;"	f	class:conn
init_srv	learn/springsnail/conn.cpp	/^void conn::init_srv( int sockfd, const sockaddr_in& server_addr )$/;"	f	class:conn
init_srv	version1/learn/springsnail/conn.cpp	/^void conn::init_srv( int sockfd, const sockaddr_in& server_addr )$/;"	f	class:conn
intIME_HEAP	learn/11/11-6time_heap.h	2;"	d
intIME_HEAP	version1/learn/11/11-6time_heap.h	2;"	d
iov_	http/httpconn.h	/^	struct iovec iov_[2];$/;"	m	class:HttpConn	typeref:struct:HttpConn::iovec
iov_	version1/http/httpconn.h	/^	struct iovec iov_[2];$/;"	m	class:HttpConn	typeref:struct:HttpConn::iovec
iovcnt_	http/httpconn.h	/^	int iovcnt_;$/;"	m	class:HttpConn
iovcnt_	version1/http/httpconn.h	/^	int iovcnt_;$/;"	m	class:HttpConn
isET	http/httpconn.cpp	/^bool HttpConn::isET;$/;"	m	class:HttpConn	file:
isET	http/httpconn.h	/^	static bool isET;$/;"	m	class:HttpConn
isET	version1/http/httpconn.cpp	/^bool HttpConn::isET;$/;"	m	class:HttpConn	file:
isET	version1/http/httpconn.h	/^	static bool isET;$/;"	m	class:HttpConn
isasync_	logbq/log.h	/^	bool isasync_;$/;"	m	class:Log
isasync_	version1/logbq/log.h	/^	bool isasync_;$/;"	m	class:Log
isclose_	http/httpconn.h	/^	bool isclose_;$/;"	m	class:HttpConn
isclose_	logbq/blockqueue.h	/^	bool isclose_;$/;"	m	class:BlockDeque
isclose_	server/webserver.h	/^	bool isclose_;$/;"	m	class:WebServer
isclose_	version1/http/httpconn.h	/^	bool isclose_;$/;"	m	class:HttpConn
isclose_	version1/logbq/blockqueue.h	/^	bool isclose_;$/;"	m	class:BlockDeque
isclose_	version1/server/webserver.h	/^	bool isclose_;$/;"	m	class:WebServer
isclosed	threadpool/threadpool.h	/^		bool isclosed;$/;"	m	struct:ThreadPool::Pool
isclosed	version1/test.cpp	/^		bool isclosed;$/;"	m	struct:ThreadPool::Pool	file:
isclosed	version1/test2.cpp	/^		bool isclosed;$/;"	m	struct:ThreadPool::Pool	file:
isclosed	version1/threadpool/threadpool.h	/^		bool isclosed;$/;"	m	struct:ThreadPool::Pool
iskeepalive_	http/httpresponse.h	/^	bool iskeepalive_;$/;"	m	class:HttpResponse
iskeepalive_	version1/http/httpresponse.h	/^	bool iskeepalive_;$/;"	m	class:HttpResponse
isopen_	logbq/log.h	/^	bool isopen_;$/;"	m	class:Log
isopen_	version1/logbq/log.h	/^	bool isopen_;$/;"	m	class:Log
level	learn/springsnail/log.cpp	/^static int level = LOG_INFO;$/;"	v	file:
level	version1/learn/springsnail/log.cpp	/^static int level = LOG_INFO;$/;"	v	file:
level_	logbq/log.h	/^	int level_;$/;"	m	class:Log
level_	version1/logbq/log.h	/^	int level_;$/;"	m	class:Log
linecount_	logbq/log.h	/^	int linecount_;$/;"	m	class:Log
linecount_	version1/logbq/log.h	/^	int linecount_;$/;"	m	class:Log
listenevent_	server/webserver.h	/^	uint32_t listenevent_;$/;"	m	class:WebServer
listenevent_	version1/server/webserver.h	/^	uint32_t listenevent_;$/;"	m	class:WebServer
listenfd	learn/13/13-4shm_talk_server.cpp	/^int listenfd;$/;"	v
listenfd	learn/15/15-2pool_cgi.cpp	/^int listenfd;$/;"	v
listenfd	version1/learn/13/13-4shm_talk_server.cpp	/^int listenfd;$/;"	v
listenfd	version1/learn/15/15-2pool_cgi.cpp	/^int listenfd;$/;"	v
listenfd_	server/webserver.h	/^	int listenfd_;$/;"	m	class:WebServer
listenfd_	version1/server/webserver.h	/^	int listenfd_;$/;"	m	class:WebServer
lock	learn/14/14-2locker.h	/^    bool lock()$/;"	f	class:locker
lock	learn/15/14-2locker.h	/^    bool lock()$/;"	f	class:locker
lock	learn/15/locker.h	/^	bool lock() {$/;"	f	class:locker
lock	version1/learn/14/14-2locker.h	/^    bool lock()$/;"	f	class:locker
lock	version1/learn/15/14-2locker.h	/^    bool lock()$/;"	f	class:locker
lock	version1/learn/15/locker.h	/^	bool lock() {$/;"	f	class:locker
locker	learn/14/14-2locker.h	/^    locker()$/;"	f	class:locker
locker	learn/14/14-2locker.h	/^class locker$/;"	c
locker	learn/15/14-2locker.h	/^    locker()$/;"	f	class:locker
locker	learn/15/14-2locker.h	/^class locker$/;"	c
locker	learn/15/locker.h	/^	locker() {$/;"	f	class:locker
locker	learn/15/locker.h	/^class locker {$/;"	c
locker	version1/learn/14/14-2locker.h	/^    locker()$/;"	f	class:locker
locker	version1/learn/14/14-2locker.h	/^class locker$/;"	c
locker	version1/learn/15/14-2locker.h	/^    locker()$/;"	f	class:locker
locker	version1/learn/15/14-2locker.h	/^class locker$/;"	c
locker	version1/learn/15/locker.h	/^	locker() {$/;"	f	class:locker
locker	version1/learn/15/locker.h	/^class locker {$/;"	c
log	learn/springsnail/log.cpp	/^void log( int log_level,  const char* file_name, int line_num, const char* format, ... )$/;"	f
log	version1/learn/springsnail/log.cpp	/^void log( int log_level,  const char* file_name, int line_num, const char* format, ... )$/;"	f
loglevels	learn/springsnail/log.cpp	/^static const char* loglevels[] =$/;"	v	file:
loglevels	version1/learn/springsnail/log.cpp	/^static const char* loglevels[] =$/;"	v	file:
long_options	pressure/webbench-1.5/webbench.c	/^static const struct option long_options[]=$/;"	v	typeref:struct:option	file:
long_options	version1/pressure/webbench-1.5/webbench.c	/^static const struct option long_options[]=$/;"	v	typeref:struct:option	file:
lt	learn/9/9-3mtlt.cpp	/^void lt( epoll_event* events, int number, int epollfd, int listenfd )$/;"	f
lt	version1/learn/9/9-3mtlt.cpp	/^void lt( epoll_event* events, int number, int epollfd, int listenfd )$/;"	f
m_address	learn/15/15-4http_conn.h	/^    sockaddr_in m_address;$/;"	m	class:http_conn
m_address	learn/15/15_2_learn_processpool_cgi.cpp	/^	sockaddr_in m_address;$/;"	m	class:cgi_conn	file:
m_address	learn/15/15_4_http_conn.h	/^	sockaddr_in m_address;$/;"	m	class:http_conn
m_address	learn/15/http_conn.h	/^    sockaddr_in m_address;$/;"	m	class:http_conn
m_address	version1/learn/15/15-4http_conn.h	/^    sockaddr_in m_address;$/;"	m	class:http_conn
m_address	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	sockaddr_in m_address;$/;"	m	class:cgi_conn	file:
m_address	version1/learn/15/15_4_http_conn.h	/^	sockaddr_in m_address;$/;"	m	class:http_conn
m_address	version1/learn/15/http_conn.h	/^    sockaddr_in m_address;$/;"	m	class:http_conn
m_buf	learn/15/15_2_learn_processpool_cgi.cpp	/^	char m_buf[BUFFER_SIZE];$/;"	m	class:cgi_conn	file:
m_buf	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	char m_buf[BUFFER_SIZE];$/;"	m	class:cgi_conn	file:
m_busy_ratio	learn/springsnail/processpool.h	/^    int m_busy_ratio;$/;"	m	class:process
m_busy_ratio	version1/learn/springsnail/processpool.h	/^    int m_busy_ratio;$/;"	m	class:process
m_check_state	learn/15/15-4http_conn.h	/^    CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_check_state	learn/15/15_4_http_conn.h	/^	CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_check_state	learn/15/http_conn.h	/^    CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_check_state	version1/learn/15/15-4http_conn.h	/^    CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_check_state	version1/learn/15/15_4_http_conn.h	/^	CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_check_state	version1/learn/15/http_conn.h	/^    CHECK_STATE m_check_state;$/;"	m	class:http_conn
m_checked_idx	learn/15/15-4http_conn.h	/^    int m_checked_idx;$/;"	m	class:http_conn
m_checked_idx	learn/15/15_4_http_conn.h	/^	int m_checked_idx;$/;"	m	class:http_conn
m_checked_idx	learn/15/http_conn.h	/^    int m_checked_idx;$/;"	m	class:http_conn
m_checked_idx	version1/learn/15/15-4http_conn.h	/^    int m_checked_idx;$/;"	m	class:http_conn
m_checked_idx	version1/learn/15/15_4_http_conn.h	/^	int m_checked_idx;$/;"	m	class:http_conn
m_checked_idx	version1/learn/15/http_conn.h	/^    int m_checked_idx;$/;"	m	class:http_conn
m_clt_address	learn/springsnail/conn.h	/^    sockaddr_in m_clt_address;$/;"	m	class:conn
m_clt_address	version1/learn/springsnail/conn.h	/^    sockaddr_in m_clt_address;$/;"	m	class:conn
m_clt_buf	learn/springsnail/conn.h	/^    char* m_clt_buf;$/;"	m	class:conn
m_clt_buf	version1/learn/springsnail/conn.h	/^    char* m_clt_buf;$/;"	m	class:conn
m_clt_read_idx	learn/springsnail/conn.h	/^    int m_clt_read_idx;$/;"	m	class:conn
m_clt_read_idx	version1/learn/springsnail/conn.h	/^    int m_clt_read_idx;$/;"	m	class:conn
m_clt_write_idx	learn/springsnail/conn.h	/^    int m_clt_write_idx;$/;"	m	class:conn
m_clt_write_idx	version1/learn/springsnail/conn.h	/^    int m_clt_write_idx;$/;"	m	class:conn
m_cltfd	learn/springsnail/conn.h	/^    int m_cltfd;$/;"	m	class:conn
m_cltfd	version1/learn/springsnail/conn.h	/^    int m_cltfd;$/;"	m	class:conn
m_cond	learn/14/14-2locker.h	/^    pthread_cond_t m_cond;$/;"	m	class:cond
m_cond	learn/15/14-2locker.h	/^    pthread_cond_t m_cond;$/;"	m	class:cond
m_cond	learn/15/locker.h	/^	pthread_cond_t m_cond;$/;"	m	class:cond
m_cond	version1/learn/14/14-2locker.h	/^    pthread_cond_t m_cond;$/;"	m	class:cond
m_cond	version1/learn/15/14-2locker.h	/^    pthread_cond_t m_cond;$/;"	m	class:cond
m_cond	version1/learn/15/locker.h	/^	pthread_cond_t m_cond;$/;"	m	class:cond
m_conncnt	learn/springsnail/mgr.h	/^    int m_conncnt;$/;"	m	class:host
m_conncnt	version1/learn/springsnail/mgr.h	/^    int m_conncnt;$/;"	m	class:host
m_conns	learn/springsnail/mgr.h	/^    map< int, conn* > m_conns;$/;"	m	class:mgr
m_conns	version1/learn/springsnail/mgr.h	/^    map< int, conn* > m_conns;$/;"	m	class:mgr
m_content_length	learn/15/15-4http_conn.h	/^    int m_content_length;$/;"	m	class:http_conn
m_content_length	learn/15/15_4_http_conn.h	/^	int m_content_length;$/;"	m	class:http_conn
m_content_length	learn/15/http_conn.h	/^    int m_content_length;$/;"	m	class:http_conn
m_content_length	version1/learn/15/15-4http_conn.h	/^    int m_content_length;$/;"	m	class:http_conn
m_content_length	version1/learn/15/15_4_http_conn.h	/^	int m_content_length;$/;"	m	class:http_conn
m_content_length	version1/learn/15/http_conn.h	/^    int m_content_length;$/;"	m	class:http_conn
m_epollfd	learn/15/15-1processpool.h	/^    int m_epollfd;$/;"	m	class:processpool
m_epollfd	learn/15/15-4http_conn.h	/^    static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	learn/15/15-5http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	learn/15/15_1_learn_processpool.h	/^	int m_epollfd;$/;"	m	class:processpool
m_epollfd	learn/15/15_2_learn_processpool_cgi.cpp	/^	static int m_epollfd;$/;"	m	class:cgi_conn	file:
m_epollfd	learn/15/15_2_learn_processpool_cgi.cpp	/^int cgi_conn::m_epollfd = -1;$/;"	m	class:cgi_conn	file:
m_epollfd	learn/15/15_4_http_conn.h	/^	static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	learn/15/15_5_http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	learn/15/http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	learn/15/http_conn.h	/^    static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	learn/springsnail/mgr.cpp	/^int mgr::m_epollfd = -1;$/;"	m	class:mgr	file:
m_epollfd	learn/springsnail/mgr.h	/^    static int m_epollfd;$/;"	m	class:mgr
m_epollfd	learn/springsnail/processpool.h	/^    int m_epollfd;$/;"	m	class:processpool
m_epollfd	version1/learn/15/15-1processpool.h	/^    int m_epollfd;$/;"	m	class:processpool
m_epollfd	version1/learn/15/15-4http_conn.h	/^    static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	version1/learn/15/15-5http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	version1/learn/15/15_1_learn_processpool.h	/^	int m_epollfd;$/;"	m	class:processpool
m_epollfd	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	static int m_epollfd;$/;"	m	class:cgi_conn	file:
m_epollfd	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^int cgi_conn::m_epollfd = -1;$/;"	m	class:cgi_conn	file:
m_epollfd	version1/learn/15/15_4_http_conn.h	/^	static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	version1/learn/15/15_5_http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	version1/learn/15/http_conn.cpp	/^int http_conn::m_epollfd = -1;$/;"	m	class:http_conn	file:
m_epollfd	version1/learn/15/http_conn.h	/^    static int m_epollfd;$/;"	m	class:http_conn
m_epollfd	version1/learn/springsnail/mgr.cpp	/^int mgr::m_epollfd = -1;$/;"	m	class:mgr	file:
m_epollfd	version1/learn/springsnail/mgr.h	/^    static int m_epollfd;$/;"	m	class:mgr
m_epollfd	version1/learn/springsnail/processpool.h	/^    int m_epollfd;$/;"	m	class:processpool
m_file_address	learn/15/15-4http_conn.h	/^    char* m_file_address;$/;"	m	class:http_conn
m_file_address	learn/15/15_4_http_conn.h	/^	char *m_file_address;$/;"	m	class:http_conn
m_file_address	learn/15/http_conn.h	/^    char* m_file_address;$/;"	m	class:http_conn
m_file_address	version1/learn/15/15-4http_conn.h	/^    char* m_file_address;$/;"	m	class:http_conn
m_file_address	version1/learn/15/15_4_http_conn.h	/^	char *m_file_address;$/;"	m	class:http_conn
m_file_address	version1/learn/15/http_conn.h	/^    char* m_file_address;$/;"	m	class:http_conn
m_file_stat	learn/15/15-4http_conn.h	/^    struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_file_stat	learn/15/15_4_http_conn.h	/^	struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_file_stat	learn/15/http_conn.h	/^    struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_file_stat	version1/learn/15/15-4http_conn.h	/^    struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_file_stat	version1/learn/15/15_4_http_conn.h	/^	struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_file_stat	version1/learn/15/http_conn.h	/^    struct stat m_file_stat;$/;"	m	class:http_conn	typeref:struct:http_conn::stat
m_freed	learn/springsnail/mgr.h	/^    map< int, conn* > m_freed;$/;"	m	class:mgr
m_freed	version1/learn/springsnail/mgr.h	/^    map< int, conn* > m_freed;$/;"	m	class:mgr
m_host	learn/15/15-4http_conn.h	/^    char* m_host;$/;"	m	class:http_conn
m_host	learn/15/15_4_http_conn.h	/^	char *m_host;$/;"	m	class:http_conn
m_host	learn/15/http_conn.h	/^    char* m_host;$/;"	m	class:http_conn
m_host	version1/learn/15/15-4http_conn.h	/^    char* m_host;$/;"	m	class:http_conn
m_host	version1/learn/15/15_4_http_conn.h	/^	char *m_host;$/;"	m	class:http_conn
m_host	version1/learn/15/http_conn.h	/^    char* m_host;$/;"	m	class:http_conn
m_hostname	learn/springsnail/mgr.h	/^    char m_hostname[1024];$/;"	m	class:host
m_hostname	version1/learn/springsnail/mgr.h	/^    char m_hostname[1024];$/;"	m	class:host
m_idx	learn/15/15-1processpool.h	/^    int m_idx;$/;"	m	class:processpool
m_idx	learn/15/15_1_learn_processpool.h	/^	int m_idx;$/;"	m	class:processpool
m_idx	learn/springsnail/processpool.h	/^    int m_idx;$/;"	m	class:processpool
m_idx	version1/learn/15/15-1processpool.h	/^    int m_idx;$/;"	m	class:processpool
m_idx	version1/learn/15/15_1_learn_processpool.h	/^	int m_idx;$/;"	m	class:processpool
m_idx	version1/learn/springsnail/processpool.h	/^    int m_idx;$/;"	m	class:processpool
m_instance	learn/15/15-1processpool.h	/^    static processpool< T >* m_instance;$/;"	m	class:processpool
m_instance	learn/15/15-1processpool.h	/^processpool< T >* processpool< T >::m_instance = NULL;$/;"	m	class:processpool
m_instance	learn/15/15_1_learn_processpool.h	/^	static processpool<T> *m_instance;$/;"	m	class:processpool
m_instance	learn/15/15_1_learn_processpool.h	/^processpool<T> *processpool<T>::m_instance = NULL;$/;"	m	class:processpool
m_instance	learn/springsnail/processpool.h	/^    static processpool< C, H, M >* m_instance;$/;"	m	class:processpool
m_instance	learn/springsnail/processpool.h	/^processpool< C, H, M >* processpool< C, H, M >::m_instance = NULL;$/;"	m	class:processpool
m_instance	version1/learn/15/15-1processpool.h	/^    static processpool< T >* m_instance;$/;"	m	class:processpool
m_instance	version1/learn/15/15-1processpool.h	/^processpool< T >* processpool< T >::m_instance = NULL;$/;"	m	class:processpool
m_instance	version1/learn/15/15_1_learn_processpool.h	/^	static processpool<T> *m_instance;$/;"	m	class:processpool
m_instance	version1/learn/15/15_1_learn_processpool.h	/^processpool<T> *processpool<T>::m_instance = NULL;$/;"	m	class:processpool
m_instance	version1/learn/springsnail/processpool.h	/^    static processpool< C, H, M >* m_instance;$/;"	m	class:processpool
m_instance	version1/learn/springsnail/processpool.h	/^processpool< C, H, M >* processpool< C, H, M >::m_instance = NULL;$/;"	m	class:processpool
m_iv	learn/15/15-4http_conn.h	/^    struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv	learn/15/15_4_http_conn.h	/^	struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv	learn/15/http_conn.h	/^    struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv	version1/learn/15/15-4http_conn.h	/^    struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv	version1/learn/15/15_4_http_conn.h	/^	struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv	version1/learn/15/http_conn.h	/^    struct iovec m_iv[2];$/;"	m	class:http_conn	typeref:struct:http_conn::iovec
m_iv_count	learn/15/15-4http_conn.h	/^    int m_iv_count;$/;"	m	class:http_conn
m_iv_count	learn/15/15_4_http_conn.h	/^	int m_iv_count;$/;"	m	class:http_conn
m_iv_count	learn/15/http_conn.h	/^    int m_iv_count;$/;"	m	class:http_conn
m_iv_count	version1/learn/15/15-4http_conn.h	/^    int m_iv_count;$/;"	m	class:http_conn
m_iv_count	version1/learn/15/15_4_http_conn.h	/^	int m_iv_count;$/;"	m	class:http_conn
m_iv_count	version1/learn/15/http_conn.h	/^    int m_iv_count;$/;"	m	class:http_conn
m_linger	learn/15/15-4http_conn.h	/^    bool m_linger;$/;"	m	class:http_conn
m_linger	learn/15/15_4_http_conn.h	/^	bool m_linger;$/;"	m	class:http_conn
m_linger	learn/15/http_conn.h	/^    bool m_linger;$/;"	m	class:http_conn
m_linger	version1/learn/15/15-4http_conn.h	/^    bool m_linger;$/;"	m	class:http_conn
m_linger	version1/learn/15/15_4_http_conn.h	/^	bool m_linger;$/;"	m	class:http_conn
m_linger	version1/learn/15/http_conn.h	/^    bool m_linger;$/;"	m	class:http_conn
m_listenfd	learn/15/15-1processpool.h	/^    int m_listenfd;$/;"	m	class:processpool
m_listenfd	learn/15/15_1_learn_processpool.h	/^	int m_listenfd;$/;"	m	class:processpool
m_listenfd	learn/springsnail/processpool.h	/^    int m_listenfd;$/;"	m	class:processpool
m_listenfd	version1/learn/15/15-1processpool.h	/^    int m_listenfd;$/;"	m	class:processpool
m_listenfd	version1/learn/15/15_1_learn_processpool.h	/^	int m_listenfd;$/;"	m	class:processpool
m_listenfd	version1/learn/springsnail/processpool.h	/^    int m_listenfd;$/;"	m	class:processpool
m_logic_srv	learn/springsnail/mgr.h	/^    host m_logic_srv;$/;"	m	class:mgr
m_logic_srv	version1/learn/springsnail/mgr.h	/^    host m_logic_srv;$/;"	m	class:mgr
m_max_requests	learn/15/15-3threadpool.h	/^    int m_max_requests;$/;"	m	class:threadpool
m_max_requests	learn/15/15_3_threadpool.h	/^	int m_max_requests;$/;"	m	class:threadpool
m_max_requests	learn/15/threadpool.h	/^    int m_max_requests;$/;"	m	class:threadpool
m_max_requests	version1/learn/15/15-3threadpool.h	/^    int m_max_requests;$/;"	m	class:threadpool
m_max_requests	version1/learn/15/15_3_threadpool.h	/^	int m_max_requests;$/;"	m	class:threadpool
m_max_requests	version1/learn/15/threadpool.h	/^    int m_max_requests;$/;"	m	class:threadpool
m_method	learn/15/15-4http_conn.h	/^    METHOD m_method;$/;"	m	class:http_conn
m_method	learn/15/15_4_http_conn.h	/^	METHOD m_method;$/;"	m	class:http_conn
m_method	learn/15/http_conn.h	/^    METHOD m_method;$/;"	m	class:http_conn
m_method	version1/learn/15/15-4http_conn.h	/^    METHOD m_method;$/;"	m	class:http_conn
m_method	version1/learn/15/15_4_http_conn.h	/^	METHOD m_method;$/;"	m	class:http_conn
m_method	version1/learn/15/http_conn.h	/^    METHOD m_method;$/;"	m	class:http_conn
m_mutex	learn/14/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	learn/14/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:locker
m_mutex	learn/15/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	learn/15/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:locker
m_mutex	learn/15/locker.h	/^	pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	learn/15/locker.h	/^	pthread_mutex_t m_mutex;$/;"	m	class:locker
m_mutex	version1/learn/14/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	version1/learn/14/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:locker
m_mutex	version1/learn/15/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	version1/learn/15/14-2locker.h	/^    pthread_mutex_t m_mutex;$/;"	m	class:locker
m_mutex	version1/learn/15/locker.h	/^	pthread_mutex_t m_mutex;$/;"	m	class:cond
m_mutex	version1/learn/15/locker.h	/^	pthread_mutex_t m_mutex;$/;"	m	class:locker
m_pid	learn/15/15-1processpool.h	/^    pid_t m_pid;$/;"	m	class:process
m_pid	learn/15/15_1_learn_processpool.h	/^	pid_t m_pid;$/;"	m	class:process
m_pid	learn/springsnail/processpool.h	/^    pid_t m_pid;$/;"	m	class:process
m_pid	version1/learn/15/15-1processpool.h	/^    pid_t m_pid;$/;"	m	class:process
m_pid	version1/learn/15/15_1_learn_processpool.h	/^	pid_t m_pid;$/;"	m	class:process
m_pid	version1/learn/springsnail/processpool.h	/^    pid_t m_pid;$/;"	m	class:process
m_pipefd	learn/15/15-1processpool.h	/^    int m_pipefd[2];$/;"	m	class:process
m_pipefd	learn/15/15_1_learn_processpool.h	/^	int m_pipefd[2];$/;"	m	class:process
m_pipefd	learn/springsnail/processpool.h	/^    int m_pipefd[2];$/;"	m	class:process
m_pipefd	version1/learn/15/15-1processpool.h	/^    int m_pipefd[2];$/;"	m	class:process
m_pipefd	version1/learn/15/15_1_learn_processpool.h	/^	int m_pipefd[2];$/;"	m	class:process
m_pipefd	version1/learn/springsnail/processpool.h	/^    int m_pipefd[2];$/;"	m	class:process
m_port	learn/springsnail/mgr.h	/^    int m_port;$/;"	m	class:host
m_port	version1/learn/springsnail/mgr.h	/^    int m_port;$/;"	m	class:host
m_process_number	learn/15/15-1processpool.h	/^    int m_process_number;$/;"	m	class:processpool
m_process_number	learn/15/15_1_learn_processpool.h	/^	int m_process_number;$/;"	m	class:processpool
m_process_number	learn/springsnail/processpool.h	/^    int m_process_number;$/;"	m	class:processpool
m_process_number	version1/learn/15/15-1processpool.h	/^    int m_process_number;$/;"	m	class:processpool
m_process_number	version1/learn/15/15_1_learn_processpool.h	/^	int m_process_number;$/;"	m	class:processpool
m_process_number	version1/learn/springsnail/processpool.h	/^    int m_process_number;$/;"	m	class:processpool
m_queuelocker	learn/15/15-3threadpool.h	/^    locker m_queuelocker;$/;"	m	class:threadpool
m_queuelocker	learn/15/15_3_threadpool.h	/^	locker m_queuelocker;$/;"	m	class:threadpool
m_queuelocker	learn/15/threadpool.h	/^    locker m_queuelocker;$/;"	m	class:threadpool
m_queuelocker	version1/learn/15/15-3threadpool.h	/^    locker m_queuelocker;$/;"	m	class:threadpool
m_queuelocker	version1/learn/15/15_3_threadpool.h	/^	locker m_queuelocker;$/;"	m	class:threadpool
m_queuelocker	version1/learn/15/threadpool.h	/^    locker m_queuelocker;$/;"	m	class:threadpool
m_queuestat	learn/15/15-3threadpool.h	/^    sem m_queuestat;$/;"	m	class:threadpool
m_queuestat	learn/15/15_3_threadpool.h	/^	sem m_queuestat;$/;"	m	class:threadpool
m_queuestat	learn/15/threadpool.h	/^    sem m_queuestat;$/;"	m	class:threadpool
m_queuestat	version1/learn/15/15-3threadpool.h	/^    sem m_queuestat;$/;"	m	class:threadpool
m_queuestat	version1/learn/15/15_3_threadpool.h	/^	sem m_queuestat;$/;"	m	class:threadpool
m_queuestat	version1/learn/15/threadpool.h	/^    sem m_queuestat;$/;"	m	class:threadpool
m_read_buf	learn/15/15-4http_conn.h	/^    char m_read_buf[ READ_BUFFER_SIZE ];$/;"	m	class:http_conn
m_read_buf	learn/15/15_4_http_conn.h	/^	char m_read_buf[READ_BUFFER_SIZE];$/;"	m	class:http_conn
m_read_buf	learn/15/http_conn.h	/^    char m_read_buf[ READ_BUFFER_SIZE ];$/;"	m	class:http_conn
m_read_buf	version1/learn/15/15-4http_conn.h	/^    char m_read_buf[ READ_BUFFER_SIZE ];$/;"	m	class:http_conn
m_read_buf	version1/learn/15/15_4_http_conn.h	/^	char m_read_buf[READ_BUFFER_SIZE];$/;"	m	class:http_conn
m_read_buf	version1/learn/15/http_conn.h	/^    char m_read_buf[ READ_BUFFER_SIZE ];$/;"	m	class:http_conn
m_read_idx	learn/15/15-4http_conn.h	/^    int m_read_idx;$/;"	m	class:http_conn
m_read_idx	learn/15/15_2_learn_processpool_cgi.cpp	/^	int m_read_idx;$/;"	m	class:cgi_conn	file:
m_read_idx	learn/15/15_4_http_conn.h	/^	int m_read_idx;$/;"	m	class:http_conn
m_read_idx	learn/15/http_conn.h	/^    int m_read_idx;$/;"	m	class:http_conn
m_read_idx	version1/learn/15/15-4http_conn.h	/^    int m_read_idx;$/;"	m	class:http_conn
m_read_idx	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	int m_read_idx;$/;"	m	class:cgi_conn	file:
m_read_idx	version1/learn/15/15_4_http_conn.h	/^	int m_read_idx;$/;"	m	class:http_conn
m_read_idx	version1/learn/15/http_conn.h	/^    int m_read_idx;$/;"	m	class:http_conn
m_real_file	learn/15/15-4http_conn.h	/^    char m_real_file[ FILENAME_LEN ];$/;"	m	class:http_conn
m_real_file	learn/15/15_4_http_conn.h	/^	char m_real_file[FILENAME_LEN];$/;"	m	class:http_conn
m_real_file	learn/15/http_conn.h	/^    char m_real_file[ FILENAME_LEN ];$/;"	m	class:http_conn
m_real_file	version1/learn/15/15-4http_conn.h	/^    char m_real_file[ FILENAME_LEN ];$/;"	m	class:http_conn
m_real_file	version1/learn/15/15_4_http_conn.h	/^	char m_real_file[FILENAME_LEN];$/;"	m	class:http_conn
m_real_file	version1/learn/15/http_conn.h	/^    char m_real_file[ FILENAME_LEN ];$/;"	m	class:http_conn
m_sem	learn/14/14-2locker.h	/^    sem_t m_sem;$/;"	m	class:sem
m_sem	learn/15/14-2locker.h	/^    sem_t m_sem;$/;"	m	class:sem
m_sem	learn/15/locker.h	/^	sem_t m_sem;$/;"	m	class:sem
m_sem	version1/learn/14/14-2locker.h	/^    sem_t m_sem;$/;"	m	class:sem
m_sem	version1/learn/15/14-2locker.h	/^    sem_t m_sem;$/;"	m	class:sem
m_sem	version1/learn/15/locker.h	/^	sem_t m_sem;$/;"	m	class:sem
m_sockfd	learn/15/15-4http_conn.h	/^    int m_sockfd;$/;"	m	class:http_conn
m_sockfd	learn/15/15_2_learn_processpool_cgi.cpp	/^	int m_sockfd;$/;"	m	class:cgi_conn	file:
m_sockfd	learn/15/15_4_http_conn.h	/^	int m_sockfd;$/;"	m	class:http_conn
m_sockfd	learn/15/http_conn.h	/^    int m_sockfd;$/;"	m	class:http_conn
m_sockfd	version1/learn/15/15-4http_conn.h	/^    int m_sockfd;$/;"	m	class:http_conn
m_sockfd	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	int m_sockfd;$/;"	m	class:cgi_conn	file:
m_sockfd	version1/learn/15/15_4_http_conn.h	/^	int m_sockfd;$/;"	m	class:http_conn
m_sockfd	version1/learn/15/http_conn.h	/^    int m_sockfd;$/;"	m	class:http_conn
m_srv_address	learn/springsnail/conn.h	/^    sockaddr_in m_srv_address;$/;"	m	class:conn
m_srv_address	version1/learn/springsnail/conn.h	/^    sockaddr_in m_srv_address;$/;"	m	class:conn
m_srv_buf	learn/springsnail/conn.h	/^    char* m_srv_buf;$/;"	m	class:conn
m_srv_buf	version1/learn/springsnail/conn.h	/^    char* m_srv_buf;$/;"	m	class:conn
m_srv_closed	learn/springsnail/conn.h	/^    bool m_srv_closed;$/;"	m	class:conn
m_srv_closed	version1/learn/springsnail/conn.h	/^    bool m_srv_closed;$/;"	m	class:conn
m_srv_read_idx	learn/springsnail/conn.h	/^    int m_srv_read_idx;$/;"	m	class:conn
m_srv_read_idx	version1/learn/springsnail/conn.h	/^    int m_srv_read_idx;$/;"	m	class:conn
m_srv_write_idx	learn/springsnail/conn.h	/^    int m_srv_write_idx;$/;"	m	class:conn
m_srv_write_idx	version1/learn/springsnail/conn.h	/^    int m_srv_write_idx;$/;"	m	class:conn
m_srvfd	learn/springsnail/conn.h	/^    int m_srvfd;$/;"	m	class:conn
m_srvfd	version1/learn/springsnail/conn.h	/^    int m_srvfd;$/;"	m	class:conn
m_start_line	learn/15/15-4http_conn.h	/^    int m_start_line;$/;"	m	class:http_conn
m_start_line	learn/15/15_4_http_conn.h	/^	int m_start_line;$/;"	m	class:http_conn
m_start_line	learn/15/http_conn.h	/^    int m_start_line;$/;"	m	class:http_conn
m_start_line	version1/learn/15/15-4http_conn.h	/^    int m_start_line;$/;"	m	class:http_conn
m_start_line	version1/learn/15/15_4_http_conn.h	/^	int m_start_line;$/;"	m	class:http_conn
m_start_line	version1/learn/15/http_conn.h	/^    int m_start_line;$/;"	m	class:http_conn
m_stop	learn/15/15-1processpool.h	/^    int m_stop;$/;"	m	class:processpool
m_stop	learn/15/15-3threadpool.h	/^    bool m_stop;$/;"	m	class:threadpool
m_stop	learn/15/15_1_learn_processpool.h	/^	int m_stop;$/;"	m	class:processpool
m_stop	learn/15/15_3_threadpool.h	/^	bool m_stop;$/;"	m	class:threadpool
m_stop	learn/15/threadpool.h	/^    bool m_stop;$/;"	m	class:threadpool
m_stop	learn/springsnail/processpool.h	/^    int m_stop;$/;"	m	class:processpool
m_stop	version1/learn/15/15-1processpool.h	/^    int m_stop;$/;"	m	class:processpool
m_stop	version1/learn/15/15-3threadpool.h	/^    bool m_stop;$/;"	m	class:threadpool
m_stop	version1/learn/15/15_1_learn_processpool.h	/^	int m_stop;$/;"	m	class:processpool
m_stop	version1/learn/15/15_3_threadpool.h	/^	bool m_stop;$/;"	m	class:threadpool
m_stop	version1/learn/15/threadpool.h	/^    bool m_stop;$/;"	m	class:threadpool
m_stop	version1/learn/springsnail/processpool.h	/^    int m_stop;$/;"	m	class:processpool
m_sub_process	learn/15/15-1processpool.h	/^    process* m_sub_process;$/;"	m	class:processpool
m_sub_process	learn/15/15_1_learn_processpool.h	/^	process *m_sub_process;$/;"	m	class:processpool
m_sub_process	learn/springsnail/processpool.h	/^    process* m_sub_process;$/;"	m	class:processpool
m_sub_process	version1/learn/15/15-1processpool.h	/^    process* m_sub_process;$/;"	m	class:processpool
m_sub_process	version1/learn/15/15_1_learn_processpool.h	/^	process *m_sub_process;$/;"	m	class:processpool
m_sub_process	version1/learn/springsnail/processpool.h	/^    process* m_sub_process;$/;"	m	class:processpool
m_thread_number	learn/15/15-3threadpool.h	/^    int m_thread_number;$/;"	m	class:threadpool
m_thread_number	learn/15/15_3_threadpool.h	/^	int m_thread_number;$/;"	m	class:threadpool
m_thread_number	learn/15/threadpool.h	/^    int m_thread_number;$/;"	m	class:threadpool
m_thread_number	version1/learn/15/15-3threadpool.h	/^    int m_thread_number;$/;"	m	class:threadpool
m_thread_number	version1/learn/15/15_3_threadpool.h	/^	int m_thread_number;$/;"	m	class:threadpool
m_thread_number	version1/learn/15/threadpool.h	/^    int m_thread_number;$/;"	m	class:threadpool
m_threads	learn/15/15-3threadpool.h	/^    pthread_t* m_threads;$/;"	m	class:threadpool
m_threads	learn/15/15_3_threadpool.h	/^	pthread_t *m_threads;$/;"	m	class:threadpool
m_threads	learn/15/threadpool.h	/^    pthread_t* m_threads;$/;"	m	class:threadpool
m_threads	version1/learn/15/15-3threadpool.h	/^    pthread_t* m_threads;$/;"	m	class:threadpool
m_threads	version1/learn/15/15_3_threadpool.h	/^	pthread_t *m_threads;$/;"	m	class:threadpool
m_threads	version1/learn/15/threadpool.h	/^    pthread_t* m_threads;$/;"	m	class:threadpool
m_url	learn/15/15-4http_conn.h	/^    char* m_url;$/;"	m	class:http_conn
m_url	learn/15/15_4_http_conn.h	/^	char *m_url;$/;"	m	class:http_conn
m_url	learn/15/http_conn.h	/^    char* m_url;$/;"	m	class:http_conn
m_url	version1/learn/15/15-4http_conn.h	/^    char* m_url;$/;"	m	class:http_conn
m_url	version1/learn/15/15_4_http_conn.h	/^	char *m_url;$/;"	m	class:http_conn
m_url	version1/learn/15/http_conn.h	/^    char* m_url;$/;"	m	class:http_conn
m_used	learn/springsnail/mgr.h	/^    map< int, conn* > m_used;$/;"	m	class:mgr
m_used	version1/learn/springsnail/mgr.h	/^    map< int, conn* > m_used;$/;"	m	class:mgr
m_user_count	learn/15/15-4http_conn.h	/^    static int m_user_count;$/;"	m	class:http_conn
m_user_count	learn/15/15-5http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	learn/15/15_4_http_conn.h	/^	static int m_user_count;$/;"	m	class:http_conn
m_user_count	learn/15/15_5_http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	learn/15/http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	learn/15/http_conn.h	/^    static int m_user_count;$/;"	m	class:http_conn
m_user_count	version1/learn/15/15-4http_conn.h	/^    static int m_user_count;$/;"	m	class:http_conn
m_user_count	version1/learn/15/15-5http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	version1/learn/15/15_4_http_conn.h	/^	static int m_user_count;$/;"	m	class:http_conn
m_user_count	version1/learn/15/15_5_http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	version1/learn/15/http_conn.cpp	/^int http_conn::m_user_count = 0;$/;"	m	class:http_conn	file:
m_user_count	version1/learn/15/http_conn.h	/^    static int m_user_count;$/;"	m	class:http_conn
m_version	learn/15/15-4http_conn.h	/^    char* m_version;$/;"	m	class:http_conn
m_version	learn/15/15_4_http_conn.h	/^	char *m_version;$/;"	m	class:http_conn
m_version	learn/15/http_conn.h	/^    char* m_version;$/;"	m	class:http_conn
m_version	version1/learn/15/15-4http_conn.h	/^    char* m_version;$/;"	m	class:http_conn
m_version	version1/learn/15/15_4_http_conn.h	/^	char *m_version;$/;"	m	class:http_conn
m_version	version1/learn/15/http_conn.h	/^    char* m_version;$/;"	m	class:http_conn
m_workqueue	learn/15/15-3threadpool.h	/^    std::list< T* > m_workqueue;$/;"	m	class:threadpool
m_workqueue	learn/15/15_3_threadpool.h	/^	std::list<T*> m_workqueue;$/;"	m	class:threadpool
m_workqueue	learn/15/threadpool.h	/^    std::list< T* > m_workqueue;$/;"	m	class:threadpool
m_workqueue	version1/learn/15/15-3threadpool.h	/^    std::list< T* > m_workqueue;$/;"	m	class:threadpool
m_workqueue	version1/learn/15/15_3_threadpool.h	/^	std::list<T*> m_workqueue;$/;"	m	class:threadpool
m_workqueue	version1/learn/15/threadpool.h	/^    std::list< T* > m_workqueue;$/;"	m	class:threadpool
m_write_buf	learn/15/15-4http_conn.h	/^    char m_write_buf[ WRITE_BUFFER_SIZE ];$/;"	m	class:http_conn
m_write_buf	learn/15/15_4_http_conn.h	/^	char m_write_buf[WRITE_BUFFER_SIZE];$/;"	m	class:http_conn
m_write_buf	learn/15/http_conn.h	/^    char m_write_buf[ WRITE_BUFFER_SIZE ];$/;"	m	class:http_conn
m_write_buf	version1/learn/15/15-4http_conn.h	/^    char m_write_buf[ WRITE_BUFFER_SIZE ];$/;"	m	class:http_conn
m_write_buf	version1/learn/15/15_4_http_conn.h	/^	char m_write_buf[WRITE_BUFFER_SIZE];$/;"	m	class:http_conn
m_write_buf	version1/learn/15/http_conn.h	/^    char m_write_buf[ WRITE_BUFFER_SIZE ];$/;"	m	class:http_conn
m_write_idx	learn/15/15-4http_conn.h	/^    int m_write_idx;$/;"	m	class:http_conn
m_write_idx	learn/15/15_4_http_conn.h	/^	int m_write_idx;$/;"	m	class:http_conn
m_write_idx	learn/15/http_conn.h	/^    int m_write_idx;$/;"	m	class:http_conn
m_write_idx	version1/learn/15/15-4http_conn.h	/^    int m_write_idx;$/;"	m	class:http_conn
m_write_idx	version1/learn/15/15_4_http_conn.h	/^	int m_write_idx;$/;"	m	class:http_conn
m_write_idx	version1/learn/15/http_conn.h	/^    int m_write_idx;$/;"	m	class:http_conn
main	learn/10/10-1unievent.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/10/10-3sigurg.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/11/11-1connect_timeout.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/11/11-3nonactive_conn.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/12/12-1libevent_test.c	/^int main()  $/;"	f
main	learn/13/13-3sem.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/13/13-4shm_talk_server.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/13/13-5passfd.cpp	/^int main()$/;"	f
main	learn/14/14-1mutual_lock.c	/^int main()$/;"	f
main	learn/14/14-3thread_atfork.c	/^int main()$/;"	f
main	learn/14/14-5sigmask.c	/^       main(int argc, char *argv[])$/;"	f
main	learn/15/15-2pool_cgi.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/15/15-6main.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/15/15_2_learn_processpool_cgi.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	learn/15/15_6_main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	learn/16/16-4stress_client.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-10set_send_buffer.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-11set_recv_buffer.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-12access_daytime.cpp	/^int main( int argc, char *argv[] )$/;"	f
main	learn/5/5-3testlisten.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-5testaccept.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-6oobsend.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-7oobrecv.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/5/5-9reuse_address.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/6/6-1testdup.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/6/6-2testwritev.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/6/6-3testsendfile.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/6/6-4testsplice.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/6/6-5testtee.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/7/7-1testeuid.cpp	/^int main()$/;"	f
main	learn/8/8-3httpparser.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-1use_select.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-3mtlt.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-4oneshot.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-5unblockconnect.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-6mytalk_client.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-7mytalk_server.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/9/9-8multi_port.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/springsnail/main.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	learn/test/testlisten.c	/^int main(int argc, char** argv){$/;"	f
main	learn/testlisten.c	/^int main(int argc, char** argv){$/;"	f
main	main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	pressure/webbench-1.5/webbench.c	/^int main(int argc, char *argv[])$/;"	f
main	version1/learn/10/10-1unievent.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/10/10-3sigurg.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/11/11-1connect_timeout.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/11/11-3nonactive_conn.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/12/12-1libevent_test.c	/^int main()  $/;"	f
main	version1/learn/13/13-3sem.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/13/13-4shm_talk_server.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/13/13-5passfd.cpp	/^int main()$/;"	f
main	version1/learn/14/14-1mutual_lock.c	/^int main()$/;"	f
main	version1/learn/14/14-3thread_atfork.c	/^int main()$/;"	f
main	version1/learn/14/14-5sigmask.c	/^       main(int argc, char *argv[])$/;"	f
main	version1/learn/15/15-2pool_cgi.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/15/15-6main.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	version1/learn/15/15_6_main.cpp	/^int main(int argc, char *argv[]) {$/;"	f
main	version1/learn/16/16-4stress_client.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-10set_send_buffer.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-11set_recv_buffer.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-12access_daytime.cpp	/^int main( int argc, char *argv[] )$/;"	f
main	version1/learn/5/5-3testlisten.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-5testaccept.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-6oobsend.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-7oobrecv.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/5/5-9reuse_address.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/6/6-1testdup.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/6/6-2testwritev.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/6/6-3testsendfile.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/6/6-4testsplice.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/6/6-5testtee.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/7/7-1testeuid.cpp	/^int main()$/;"	f
main	version1/learn/8/8-3httpparser.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-1use_select.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-3mtlt.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-4oneshot.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-5unblockconnect.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-6mytalk_client.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-7mytalk_server.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/9/9-8multi_port.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/springsnail/main.cpp	/^int main( int argc, char* argv[] )$/;"	f
main	version1/learn/test/testlisten.c	/^int main(int argc, char** argv){$/;"	f
main	version1/learn/testlisten.c	/^int main(int argc, char** argv){$/;"	f
main	version1/main.cpp	/^int main(int argc, char **argv) {$/;"	f
main	version1/pressure/webbench-1.5/webbench.c	/^int main(int argc, char *argv[])$/;"	f
method	pressure/webbench-1.5/webbench.c	/^int method=METHOD_GET;$/;"	v
method	version1/pressure/webbench-1.5/webbench.c	/^int method=METHOD_GET;$/;"	v
method_	http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
method_	version1/http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
mgr	learn/springsnail/mgr.cpp	/^mgr::mgr( int epollfd, const host& srv ) : m_logic_srv( srv )$/;"	f	class:mgr
mgr	learn/springsnail/mgr.h	/^class mgr$/;"	c
mgr	version1/learn/springsnail/mgr.cpp	/^mgr::mgr( int epollfd, const host& srv ) : m_logic_srv( srv )$/;"	f	class:mgr
mgr	version1/learn/springsnail/mgr.h	/^class mgr$/;"	c
mmfile_	http/httpresponse.h	/^	char *mmfile_;$/;"	m	class:HttpResponse
mmfile_	version1/http/httpresponse.h	/^	char *mmfile_;$/;"	m	class:HttpResponse
mmfilestat_	http/httpresponse.h	/^	struct stat mmfilestat_;$/;"	m	class:HttpResponse	typeref:struct:HttpResponse::stat
mmfilestat_	version1/http/httpresponse.h	/^	struct stat mmfilestat_;$/;"	m	class:HttpResponse	typeref:struct:HttpResponse::stat
modfd	learn/15/15-5http_conn.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
modfd	learn/15/15_5_http_conn.cpp	/^void modfd(int epollfd, int fd, int ev) {$/;"	f
modfd	learn/15/http_conn.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
modfd	learn/springsnail/fdwrapper.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
modfd	version1/learn/15/15-5http_conn.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
modfd	version1/learn/15/15_5_http_conn.cpp	/^void modfd(int epollfd, int fd, int ev) {$/;"	f
modfd	version1/learn/15/http_conn.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
modfd	version1/learn/springsnail/fdwrapper.cpp	/^void modfd( int epollfd, int fd, int ev )$/;"	f
mtx	threadpool/threadpool.h	/^		std::mutex mtx;$/;"	m	struct:ThreadPool::Pool
mtx	version1/test.cpp	/^		std::mutex mtx;$/;"	m	struct:ThreadPool::Pool	file:
mtx	version1/test2.cpp	/^		std::mutex mtx;$/;"	m	struct:ThreadPool::Pool	file:
mtx	version1/threadpool/threadpool.h	/^		std::mutex mtx;$/;"	m	struct:ThreadPool::Pool
mtx_	logbq/blockqueue.h	/^	std::mutex mtx_;$/;"	m	class:BlockDeque
mtx_	logbq/log.h	/^	std::mutex mtx_;$/;"	m	class:Log
mtx_	version1/logbq/blockqueue.h	/^	std::mutex mtx_;$/;"	m	class:BlockDeque
mtx_	version1/logbq/log.h	/^	std::mutex mtx_;$/;"	m	class:Log
mutex	learn/14/14-3thread_atfork.c	/^pthread_mutex_t mutex;$/;"	v
mutex	version1/learn/14/14-3thread_atfork.c	/^pthread_mutex_t mutex;$/;"	v
mutex_a	learn/14/14-1mutual_lock.c	/^pthread_mutex_t mutex_a;$/;"	v
mutex_a	version1/learn/14/14-1mutual_lock.c	/^pthread_mutex_t mutex_a;$/;"	v
mutex_b	learn/14/14-1mutual_lock.c	/^pthread_mutex_t mutex_b;$/;"	v
mutex_b	version1/learn/14/14-1mutual_lock.c	/^pthread_mutex_t mutex_b;$/;"	v
mypipe	pressure/webbench-1.5/webbench.c	/^int mypipe[2];$/;"	v
mypipe	version1/pressure/webbench-1.5/webbench.c	/^int mypipe[2];$/;"	v
next	learn/11/11-2lst_timer.h	/^   util_timer* next;$/;"	m	class:util_timer
next	learn/11/11-5tw_timer.h	/^    tw_timer* next;$/;"	m	class:tw_timer
next	version1/learn/11/11-2lst_timer.h	/^   util_timer* next;$/;"	m	class:util_timer
next	version1/learn/11/11-5tw_timer.h	/^    tw_timer* next;$/;"	m	class:tw_timer
notify_parent_busy_ratio	learn/springsnail/processpool.h	/^void processpool< C, H, M >::notify_parent_busy_ratio( int pipefd, M* manager )$/;"	f	class:processpool
notify_parent_busy_ratio	version1/learn/springsnail/processpool.h	/^void processpool< C, H, M >::notify_parent_busy_ratio( int pipefd, M* manager )$/;"	f	class:processpool
ok_200_title	learn/15/15-5http_conn.cpp	/^const char* ok_200_title = "OK";$/;"	v
ok_200_title	learn/15/15_5_http_conn.cpp	/^const char *ok_200_title = "OK";$/;"	v
ok_200_title	learn/15/http_conn.cpp	/^const char* ok_200_title = "OK";$/;"	v
ok_200_title	version1/learn/15/15-5http_conn.cpp	/^const char* ok_200_title = "OK";$/;"	v
ok_200_title	version1/learn/15/15_5_http_conn.cpp	/^const char *ok_200_title = "OK";$/;"	v
ok_200_title	version1/learn/15/http_conn.cpp	/^const char* ok_200_title = "OK";$/;"	v
openlinger_	server/webserver.h	/^	bool openlinger_;$/;"	m	class:WebServer
openlinger_	version1/server/webserver.h	/^	bool openlinger_;$/;"	m	class:WebServer
operator <	timer/heaptimer.h	/^	bool operator<(const TimerNode &t) {$/;"	f	struct:TimerNode
operator <	version1/timer/heaptimer.h	/^	bool operator<(const TimerNode &t) {$/;"	f	struct:TimerNode
parse_arg	config/config.cpp	/^void Config::parse_arg(int argc, char **argv) {$/;"	f	class:Config
parse_arg	version1/config/config.cpp	/^void Config::parse_arg(int argc, char **argv) {$/;"	f	class:Config
parse_content	learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content( char* text )$/;"	f	class:http_conn
parse_content	learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content(char *text) {$/;"	f	class:http_conn
parse_content	learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content( char* text )$/;"	f	class:http_conn
parse_content	learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_content( char* buffer, int& checked_index, CHECK_STATE& checkstate, int& read_index, int& start_line )$/;"	f
parse_content	version1/learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content( char* text )$/;"	f	class:http_conn
parse_content	version1/learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content(char *text) {$/;"	f	class:http_conn
parse_content	version1/learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_content( char* text )$/;"	f	class:http_conn
parse_content	version1/learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_content( char* buffer, int& checked_index, CHECK_STATE& checkstate, int& read_index, int& start_line )$/;"	f
parse_headers	learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers( char* text )$/;"	f	class:http_conn
parse_headers	learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers(char *text) {$/;"	f	class:http_conn
parse_headers	learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers( char* text )$/;"	f	class:http_conn
parse_headers	learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_headers( char* szTemp )$/;"	f
parse_headers	version1/learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers( char* text )$/;"	f	class:http_conn
parse_headers	version1/learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers(char *text) {$/;"	f	class:http_conn
parse_headers	version1/learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_headers( char* text )$/;"	f	class:http_conn
parse_headers	version1/learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_headers( char* szTemp )$/;"	f
parse_line	learn/15/15-5http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line()$/;"	f	class:http_conn
parse_line	learn/15/15_5_http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line() {$/;"	f	class:http_conn
parse_line	learn/15/http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line()$/;"	f	class:http_conn
parse_line	learn/8/8-3httpparser.cpp	/^LINE_STATUS parse_line( char* buffer, int& checked_index, int& read_index )$/;"	f
parse_line	version1/learn/15/15-5http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line()$/;"	f	class:http_conn
parse_line	version1/learn/15/15_5_http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line() {$/;"	f	class:http_conn
parse_line	version1/learn/15/http_conn.cpp	/^http_conn::LINE_STATUS http_conn::parse_line()$/;"	f	class:http_conn
parse_line	version1/learn/8/8-3httpparser.cpp	/^LINE_STATUS parse_line( char* buffer, int& checked_index, int& read_index )$/;"	f
parse_request_line	learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line( char* text )$/;"	f	class:http_conn
parse_request_line	learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line(char *text) {$/;"	f	class:http_conn
parse_request_line	learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line( char* text )$/;"	f	class:http_conn
parse_request_line	version1/learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line( char* text )$/;"	f	class:http_conn
parse_request_line	version1/learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line(char *text) {$/;"	f	class:http_conn
parse_request_line	version1/learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::parse_request_line( char* text )$/;"	f	class:http_conn
parse_requestline	learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_requestline( char* szTemp, CHECK_STATE& checkstate )$/;"	f
parse_requestline	version1/learn/8/8-3httpparser.cpp	/^HTTP_CODE parse_requestline( char* szTemp, CHECK_STATE& checkstate )$/;"	f
path_	http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
path_	http/httpresponse.h	/^	std::string path_;$/;"	m	class:HttpResponse
path_	logbq/log.h	/^	const char *path_;$/;"	m	class:Log
path_	version1/http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
path_	version1/http/httpresponse.h	/^	std::string path_;$/;"	m	class:HttpResponse
path_	version1/logbq/log.h	/^	const char *path_;$/;"	m	class:Log
percolate_down	learn/11/11-6time_heap.h	/^    void percolate_down( int hole )$/;"	f	class:time_heap
percolate_down	version1/learn/11/11-6time_heap.h	/^    void percolate_down( int hole )$/;"	f	class:time_heap
pick_conn	learn/springsnail/mgr.cpp	/^conn* mgr::pick_conn( int cltfd  )$/;"	f	class:mgr
pick_conn	version1/learn/springsnail/mgr.cpp	/^conn* mgr::pick_conn( int cltfd  )$/;"	f	class:mgr
pid	learn/13/13-4shm_talk_server.cpp	/^    pid_t pid;$/;"	m	struct:client_data	file:
pid	learn/15/15-2pool_cgi.cpp	/^    pid_t pid;$/;"	m	struct:process_in_pool	file:
pid	version1/learn/13/13-4shm_talk_server.cpp	/^    pid_t pid;$/;"	m	struct:client_data	file:
pid	version1/learn/15/15-2pool_cgi.cpp	/^    pid_t pid;$/;"	m	struct:process_in_pool	file:
pipefd	learn/10/10-1unievent.cpp	/^static int pipefd[2];$/;"	v	file:
pipefd	learn/11/11-3nonactive_conn.cpp	/^static int pipefd[2];$/;"	v	file:
pipefd	learn/13/13-4shm_talk_server.cpp	/^    int pipefd[2];$/;"	m	struct:client_data	file:
pipefd	learn/15/15-2pool_cgi.cpp	/^    int pipefd[2];$/;"	m	struct:process_in_pool	file:
pipefd	version1/learn/10/10-1unievent.cpp	/^static int pipefd[2];$/;"	v	file:
pipefd	version1/learn/11/11-3nonactive_conn.cpp	/^static int pipefd[2];$/;"	v	file:
pipefd	version1/learn/13/13-4shm_talk_server.cpp	/^    int pipefd[2];$/;"	m	struct:client_data	file:
pipefd	version1/learn/15/15-2pool_cgi.cpp	/^    int pipefd[2];$/;"	m	struct:process_in_pool	file:
pool_	threadpool/threadpool.h	/^	std::shared_ptr<Pool> pool_;$/;"	m	class:ThreadPool
pool_	version1/test.cpp	/^	std::shared_ptr<Pool> pool_;$/;"	m	class:ThreadPool	file:
pool_	version1/test2.cpp	/^	std::shared_ptr<Pool> pool_;$/;"	m	class:ThreadPool	file:
pool_	version1/threadpool/threadpool.h	/^	std::shared_ptr<Pool> pool_;$/;"	m	class:ThreadPool
pop_timer	learn/11/11-6time_heap.h	/^    void pop_timer()$/;"	f	class:time_heap
pop_timer	version1/learn/11/11-6time_heap.h	/^    void pop_timer()$/;"	f	class:time_heap
port_	server/webserver.h	/^	int port_;$/;"	m	class:WebServer
port_	version1/server/webserver.h	/^	int port_;$/;"	m	class:WebServer
post	learn/14/14-2locker.h	/^    bool post()$/;"	f	class:sem
post	learn/15/14-2locker.h	/^    bool post()$/;"	f	class:sem
post	learn/15/locker.h	/^	bool post() {$/;"	f	class:sem
post	version1/learn/14/14-2locker.h	/^    bool post()$/;"	f	class:sem
post	version1/learn/15/14-2locker.h	/^    bool post()$/;"	f	class:sem
post	version1/learn/15/locker.h	/^	bool post() {$/;"	f	class:sem
prepare	learn/14/14-3thread_atfork.c	/^void prepare()$/;"	f
prepare	version1/learn/14/14-3thread_atfork.c	/^void prepare()$/;"	f
prev	learn/11/11-2lst_timer.h	/^   util_timer* prev;$/;"	m	class:util_timer
prev	learn/11/11-5tw_timer.h	/^    tw_timer* prev;$/;"	m	class:tw_timer
prev	version1/learn/11/11-2lst_timer.h	/^   util_timer* prev;$/;"	m	class:util_timer
prev	version1/learn/11/11-5tw_timer.h	/^    tw_timer* prev;$/;"	m	class:tw_timer
process	learn/15/15-1processpool.h	/^    process() : m_pid( -1 ){}$/;"	f	class:process
process	learn/15/15-1processpool.h	/^class process$/;"	c
process	learn/15/15-5http_conn.cpp	/^void http_conn::process()$/;"	f	class:http_conn
process	learn/15/15_1_learn_processpool.h	/^	process() : m_pid(-1) {}$/;"	f	class:process
process	learn/15/15_1_learn_processpool.h	/^class process {$/;"	c
process	learn/15/15_2_learn_processpool_cgi.cpp	/^	void process() {$/;"	f	class:cgi_conn
process	learn/15/15_5_http_conn.cpp	/^void http_conn::process() {$/;"	f	class:http_conn
process	learn/15/http_conn.cpp	/^void http_conn::process()$/;"	f	class:http_conn
process	learn/springsnail/mgr.cpp	/^RET_CODE mgr::process( int fd, OP_TYPE type )$/;"	f	class:mgr
process	learn/springsnail/processpool.h	/^    process() : m_pid( -1 ){}$/;"	f	class:process
process	learn/springsnail/processpool.h	/^class process$/;"	c
process	version1/learn/15/15-1processpool.h	/^    process() : m_pid( -1 ){}$/;"	f	class:process
process	version1/learn/15/15-1processpool.h	/^class process$/;"	c
process	version1/learn/15/15-5http_conn.cpp	/^void http_conn::process()$/;"	f	class:http_conn
process	version1/learn/15/15_1_learn_processpool.h	/^	process() : m_pid(-1) {}$/;"	f	class:process
process	version1/learn/15/15_1_learn_processpool.h	/^class process {$/;"	c
process	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	void process() {$/;"	f	class:cgi_conn
process	version1/learn/15/15_5_http_conn.cpp	/^void http_conn::process() {$/;"	f	class:http_conn
process	version1/learn/15/http_conn.cpp	/^void http_conn::process()$/;"	f	class:http_conn
process	version1/learn/springsnail/mgr.cpp	/^RET_CODE mgr::process( int fd, OP_TYPE type )$/;"	f	class:mgr
process	version1/learn/springsnail/processpool.h	/^    process() : m_pid( -1 ){}$/;"	f	class:process
process	version1/learn/springsnail/processpool.h	/^class process$/;"	c
process_in_pool	learn/15/15-2pool_cgi.cpp	/^struct process_in_pool$/;"	s	file:
process_in_pool	version1/learn/15/15-2pool_cgi.cpp	/^struct process_in_pool$/;"	s	file:
process_read	learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read()$/;"	f	class:http_conn
process_read	learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read() {$/;"	f	class:http_conn
process_read	learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read()$/;"	f	class:http_conn
process_read	version1/learn/15/15-5http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read()$/;"	f	class:http_conn
process_read	version1/learn/15/15_5_http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read() {$/;"	f	class:http_conn
process_read	version1/learn/15/http_conn.cpp	/^http_conn::HTTP_CODE http_conn::process_read()$/;"	f	class:http_conn
process_write	learn/15/15-5http_conn.cpp	/^bool http_conn::process_write( HTTP_CODE ret )$/;"	f	class:http_conn
process_write	learn/15/15_5_http_conn.cpp	/^bool http_conn::process_write(HTTP_CODE ret) {$/;"	f	class:http_conn
process_write	learn/15/http_conn.cpp	/^bool http_conn::process_write( HTTP_CODE ret )$/;"	f	class:http_conn
process_write	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::process_write( HTTP_CODE ret )$/;"	f	class:http_conn
process_write	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::process_write(HTTP_CODE ret) {$/;"	f	class:http_conn
process_write	version1/learn/15/http_conn.cpp	/^bool http_conn::process_write( HTTP_CODE ret )$/;"	f	class:http_conn
processpool	learn/15/15-1processpool.h	/^class processpool$/;"	c
processpool	learn/15/15-1processpool.h	/^processpool< T >::processpool( int listenfd, int process_number ) $/;"	f	class:processpool
processpool	learn/15/15_1_learn_processpool.h	/^class processpool {$/;"	c
processpool	learn/15/15_1_learn_processpool.h	/^processpool<T>::processpool(int listenfd, int process_number) $/;"	f	class:processpool
processpool	learn/springsnail/processpool.h	/^class processpool$/;"	c
processpool	learn/springsnail/processpool.h	/^processpool< C, H, M >::processpool( int listenfd, int process_number ) $/;"	f	class:processpool
processpool	version1/learn/15/15-1processpool.h	/^class processpool$/;"	c
processpool	version1/learn/15/15-1processpool.h	/^processpool< T >::processpool( int listenfd, int process_number ) $/;"	f	class:processpool
processpool	version1/learn/15/15_1_learn_processpool.h	/^class processpool {$/;"	c
processpool	version1/learn/15/15_1_learn_processpool.h	/^processpool<T>::processpool(int listenfd, int process_number) $/;"	f	class:processpool
processpool	version1/learn/springsnail/processpool.h	/^class processpool$/;"	c
processpool	version1/learn/springsnail/processpool.h	/^processpool< C, H, M >::processpool( int listenfd, int process_number ) $/;"	f	class:processpool
proxyhost	pressure/webbench-1.5/webbench.c	/^char *proxyhost=NULL;$/;"	v
proxyhost	version1/pressure/webbench-1.5/webbench.c	/^char *proxyhost=NULL;$/;"	v
proxyport	pressure/webbench-1.5/webbench.c	/^int proxyport=80;$/;"	v
proxyport	version1/pressure/webbench-1.5/webbench.c	/^int proxyport=80;$/;"	v
pv	learn/13/13-3sem.cpp	/^void pv( int sem_id, int op )$/;"	f
pv	version1/learn/13/13-3sem.cpp	/^void pv( int sem_id, int op )$/;"	f
read	learn/15/15-5http_conn.cpp	/^bool http_conn::read()$/;"	f	class:http_conn
read	learn/15/15_5_http_conn.cpp	/^bool http_conn::read() {$/;"	f	class:http_conn
read	learn/15/http_conn.cpp	/^bool http_conn::read()$/;"	f	class:http_conn
read	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::read()$/;"	f	class:http_conn
read	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::read() {$/;"	f	class:http_conn
read	version1/learn/15/http_conn.cpp	/^bool http_conn::read()$/;"	f	class:http_conn
read_clt	learn/springsnail/conn.cpp	/^RET_CODE conn::read_clt()$/;"	f	class:conn
read_clt	version1/learn/springsnail/conn.cpp	/^RET_CODE conn::read_clt()$/;"	f	class:conn
read_idx	learn/15/15-2pool_cgi.cpp	/^    int read_idx;$/;"	m	struct:client_data	file:
read_idx	version1/learn/15/15-2pool_cgi.cpp	/^    int read_idx;$/;"	m	struct:client_data	file:
read_once	learn/16/16-4stress_client.cpp	/^bool read_once( int sockfd, char* buffer, int len )$/;"	f
read_once	version1/learn/16/16-4stress_client.cpp	/^bool read_once( int sockfd, char* buffer, int len )$/;"	f
read_srv	learn/springsnail/conn.cpp	/^RET_CODE conn::read_srv()$/;"	f	class:conn
read_srv	version1/learn/springsnail/conn.cpp	/^RET_CODE conn::read_srv()$/;"	f	class:conn
readbuff_	http/httpconn.h	/^	Buffer readbuff_;$/;"	m	class:HttpConn
readbuff_	version1/http/httpconn.h	/^	Buffer readbuff_;$/;"	m	class:HttpConn
readpos_	buffer/buffer.h	/^	std::atomic<std::size_t> readpos_;$/;"	m	class:Buffer
readpos_	version1/buffer/buffer.h	/^	std::atomic<std::size_t> readpos_;$/;"	m	class:Buffer
recv_fd	learn/13/13-5passfd.cpp	/^int recv_fd( int fd )$/;"	f
recv_fd	version1/learn/13/13-5passfd.cpp	/^int recv_fd( int fd )$/;"	f
recycle_conns	learn/springsnail/mgr.cpp	/^void mgr::recycle_conns()$/;"	f	class:mgr
recycle_conns	version1/learn/springsnail/mgr.cpp	/^void mgr::recycle_conns()$/;"	f	class:mgr
ref_	timer/heaptimer.h	/^	std::unordered_map<int, size_t> ref_;$/;"	m	class:HeapTimer
ref_	version1/timer/heaptimer.h	/^	std::unordered_map<int, size_t> ref_;$/;"	m	class:HeapTimer
removefd	learn/15/15-1processpool.h	/^static void removefd( int epollfd, int fd )$/;"	f
removefd	learn/15/15-5http_conn.cpp	/^void removefd( int epollfd, int fd )$/;"	f
removefd	learn/15/15_1_learn_processpool.h	/^static void removefd(int epollfd, int fd) {$/;"	f
removefd	learn/15/15_5_http_conn.cpp	/^void removefd(int epollfd, int fd) {$/;"	f
removefd	learn/15/http_conn.cpp	/^void removefd( int epollfd, int fd )$/;"	f
removefd	learn/springsnail/fdwrapper.cpp	/^void removefd( int epollfd, int fd )$/;"	f
removefd	version1/learn/15/15-1processpool.h	/^static void removefd( int epollfd, int fd )$/;"	f
removefd	version1/learn/15/15-5http_conn.cpp	/^void removefd( int epollfd, int fd )$/;"	f
removefd	version1/learn/15/15_1_learn_processpool.h	/^static void removefd(int epollfd, int fd) {$/;"	f
removefd	version1/learn/15/15_5_http_conn.cpp	/^void removefd(int epollfd, int fd) {$/;"	f
removefd	version1/learn/15/http_conn.cpp	/^void removefd( int epollfd, int fd )$/;"	f
removefd	version1/learn/springsnail/fdwrapper.cpp	/^void removefd( int epollfd, int fd )$/;"	f
request	learn/16/16-4stress_client.cpp	/^static const char* request = "GET http:\/\/localhost\/index.html HTTP\/1.1\\r\\nConnection: keep-alive\\r\\n\\r\\nxxxxxxxxxxxx";$/;"	v	file:
request	pressure/webbench-1.5/webbench.c	/^char request[REQUEST_SIZE];$/;"	v
request	version1/learn/16/16-4stress_client.cpp	/^static const char* request = "GET http:\/\/localhost\/index.html HTTP\/1.1\\r\\nConnection: keep-alive\\r\\n\\r\\nxxxxxxxxxxxx";$/;"	v	file:
request	version1/pressure/webbench-1.5/webbench.c	/^char request[REQUEST_SIZE];$/;"	v
request_	http/httpconn.h	/^	HttpRequest request_;$/;"	m	class:HttpConn
request_	version1/http/httpconn.h	/^	HttpRequest request_;$/;"	m	class:HttpConn
reset	learn/springsnail/conn.cpp	/^void conn::reset()$/;"	f	class:conn
reset	version1/learn/springsnail/conn.cpp	/^void conn::reset()$/;"	f	class:conn
reset_oneshot	learn/9/9-4oneshot.cpp	/^void reset_oneshot( int epollfd, int fd )$/;"	f
reset_oneshot	version1/learn/9/9-4oneshot.cpp	/^void reset_oneshot( int epollfd, int fd )$/;"	f
resize	learn/11/11-6time_heap.h	/^    void resize() throw ( std::exception )$/;"	f	class:time_heap
resize	version1/learn/11/11-6time_heap.h	/^    void resize() throw ( std::exception )$/;"	f	class:time_heap
response_	http/httpconn.h	/^	HttpResponse response_;$/;"	m	class:HttpConn
response_	version1/http/httpconn.h	/^	HttpResponse response_;$/;"	m	class:HttpConn
rotation	learn/11/11-5tw_timer.h	/^    int rotation;$/;"	m	class:tw_timer
rotation	version1/learn/11/11-5tw_timer.h	/^    int rotation;$/;"	m	class:tw_timer
run	learn/15/15-1processpool.h	/^void processpool< T >::run()$/;"	f	class:processpool
run	learn/15/15-3threadpool.h	/^void threadpool< T >::run()$/;"	f	class:threadpool
run	learn/15/15_1_learn_processpool.h	/^void processpool<T>::run() {$/;"	f	class:processpool
run	learn/15/15_3_threadpool.h	/^void threadpool<T>::run() {$/;"	f	class:threadpool
run	learn/15/threadpool.h	/^void threadpool< T >::run()$/;"	f	class:threadpool
run	learn/springsnail/processpool.h	/^void processpool< C, H, M >::run( const vector<H>& arg )$/;"	f	class:processpool
run	version1/learn/15/15-1processpool.h	/^void processpool< T >::run()$/;"	f	class:processpool
run	version1/learn/15/15-3threadpool.h	/^void threadpool< T >::run()$/;"	f	class:threadpool
run	version1/learn/15/15_1_learn_processpool.h	/^void processpool<T>::run() {$/;"	f	class:processpool
run	version1/learn/15/15_3_threadpool.h	/^void threadpool<T>::run() {$/;"	f	class:threadpool
run	version1/learn/15/threadpool.h	/^void threadpool< T >::run()$/;"	f	class:threadpool
run	version1/learn/springsnail/processpool.h	/^void processpool< C, H, M >::run( const vector<H>& arg )$/;"	f	class:processpool
run_child	learn/13/13-4shm_talk_server.cpp	/^int run_child( int idx, client_data* users, char* share_mem )$/;"	f
run_child	learn/15/15-1processpool.h	/^void processpool< T >::run_child()$/;"	f	class:processpool
run_child	learn/15/15-2pool_cgi.cpp	/^int run_child( int idx )$/;"	f
run_child	learn/15/15_1_learn_processpool.h	/^void processpool<T>::run_child() {$/;"	f	class:processpool
run_child	learn/springsnail/processpool.h	/^void processpool< C, H, M >::run_child( const vector<H>& arg )$/;"	f	class:processpool
run_child	version1/learn/13/13-4shm_talk_server.cpp	/^int run_child( int idx, client_data* users, char* share_mem )$/;"	f
run_child	version1/learn/15/15-1processpool.h	/^void processpool< T >::run_child()$/;"	f	class:processpool
run_child	version1/learn/15/15-2pool_cgi.cpp	/^int run_child( int idx )$/;"	f
run_child	version1/learn/15/15_1_learn_processpool.h	/^void processpool<T>::run_child() {$/;"	f	class:processpool
run_child	version1/learn/springsnail/processpool.h	/^void processpool< C, H, M >::run_child( const vector<H>& arg )$/;"	f	class:processpool
run_parent	learn/15/15-1processpool.h	/^void processpool< T >::run_parent()$/;"	f	class:processpool
run_parent	learn/15/15_1_learn_processpool.h	/^void processpool<T>::run_parent() {$/;"	f	class:processpool
run_parent	learn/springsnail/processpool.h	/^void processpool< C, H, M >::run_parent()$/;"	f	class:processpool
run_parent	version1/learn/15/15-1processpool.h	/^void processpool< T >::run_parent()$/;"	f	class:processpool
run_parent	version1/learn/15/15_1_learn_processpool.h	/^void processpool<T>::run_parent() {$/;"	f	class:processpool
run_parent	version1/learn/springsnail/processpool.h	/^void processpool< C, H, M >::run_parent()$/;"	f	class:processpool
sem	learn/14/14-2locker.h	/^    sem()$/;"	f	class:sem
sem	learn/14/14-2locker.h	/^class sem$/;"	c
sem	learn/15/14-2locker.h	/^    sem()$/;"	f	class:sem
sem	learn/15/14-2locker.h	/^class sem$/;"	c
sem	learn/15/locker.h	/^	sem() {$/;"	f	class:sem
sem	learn/15/locker.h	/^class sem {$/;"	c
sem	version1/learn/14/14-2locker.h	/^    sem()$/;"	f	class:sem
sem	version1/learn/14/14-2locker.h	/^class sem$/;"	c
sem	version1/learn/15/14-2locker.h	/^    sem()$/;"	f	class:sem
sem	version1/learn/15/14-2locker.h	/^class sem$/;"	c
sem	version1/learn/15/locker.h	/^	sem() {$/;"	f	class:sem
sem	version1/learn/15/locker.h	/^class sem {$/;"	c
semun	learn/13/13-3sem.cpp	/^union semun$/;"	u	file:
semun	version1/learn/13/13-3sem.cpp	/^union semun$/;"	u	file:
send_fd	learn/13/13-5passfd.cpp	/^void send_fd( int fd, int fd_to_send )$/;"	f
send_fd	version1/learn/13/13-5passfd.cpp	/^void send_fd( int fd, int fd_to_send )$/;"	f
set_loglevel	learn/springsnail/log.cpp	/^void set_loglevel( int log_level )$/;"	f
set_loglevel	version1/learn/springsnail/log.cpp	/^void set_loglevel( int log_level )$/;"	f
setnonblocking	learn/10/10-1unievent.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/11/11-3nonactive_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/13/13-4shm_talk_server.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/15/15-1processpool.h	/^static int setnonblocking( int fd )$/;"	f
setnonblocking	learn/15/15-2pool_cgi.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/15/15-5http_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/15/15_1_learn_processpool.h	/^static int setnonblocking(int fd) {$/;"	f
setnonblocking	learn/15/15_5_http_conn.cpp	/^int setnonblocking(int fd) {$/;"	f
setnonblocking	learn/15/http_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/16/16-4stress_client.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/9/9-3mtlt.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/9/9-4oneshot.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/9/9-5unblockconnect.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/9/9-7mytalk_server.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/9/9-8multi_port.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	learn/springsnail/fdwrapper.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/10/10-1unievent.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/11/11-3nonactive_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/13/13-4shm_talk_server.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/15/15-1processpool.h	/^static int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/15/15-2pool_cgi.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/15/15-5http_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/15/15_1_learn_processpool.h	/^static int setnonblocking(int fd) {$/;"	f
setnonblocking	version1/learn/15/15_5_http_conn.cpp	/^int setnonblocking(int fd) {$/;"	f
setnonblocking	version1/learn/15/http_conn.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/16/16-4stress_client.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/9/9-3mtlt.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/9/9-4oneshot.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/9/9-5unblockconnect.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/9/9-7mytalk_server.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/9/9-8multi_port.cpp	/^int setnonblocking( int fd )$/;"	f
setnonblocking	version1/learn/springsnail/fdwrapper.cpp	/^int setnonblocking( int fd )$/;"	f
setup_sig_pipe	learn/15/15-1processpool.h	/^void processpool< T >::setup_sig_pipe()$/;"	f	class:processpool
setup_sig_pipe	learn/15/15_1_learn_processpool.h	/^void processpool<T>::setup_sig_pipe() {$/;"	f	class:processpool
setup_sig_pipe	learn/springsnail/processpool.h	/^void processpool< C, H, M >::setup_sig_pipe()$/;"	f	class:processpool
setup_sig_pipe	version1/learn/15/15-1processpool.h	/^void processpool< T >::setup_sig_pipe()$/;"	f	class:processpool
setup_sig_pipe	version1/learn/15/15_1_learn_processpool.h	/^void processpool<T>::setup_sig_pipe() {$/;"	f	class:processpool
setup_sig_pipe	version1/learn/springsnail/processpool.h	/^void processpool< C, H, M >::setup_sig_pipe()$/;"	f	class:processpool
share_mem	learn/13/13-4shm_talk_server.cpp	/^char* share_mem = 0;$/;"	v
share_mem	version1/learn/13/13-4shm_talk_server.cpp	/^char* share_mem = 0;$/;"	v
shm_name	learn/13/13-4shm_talk_server.cpp	/^static const char* shm_name = "\/my_shm";$/;"	v	file:
shm_name	version1/learn/13/13-4shm_talk_server.cpp	/^static const char* shm_name = "\/my_shm";$/;"	v	file:
shmfd	learn/13/13-4shm_talk_server.cpp	/^int shmfd;$/;"	v
shmfd	version1/learn/13/13-4shm_talk_server.cpp	/^int shmfd;$/;"	v
show_error	learn/15/15-6main.cpp	/^void show_error( int connfd, const char* info )$/;"	f
show_error	learn/15/15_6_main.cpp	/^void show_error(int connfd, const char *info) {$/;"	f
show_error	version1/learn/15/15-6main.cpp	/^void show_error( int connfd, const char* info )$/;"	f
show_error	version1/learn/15/15_6_main.cpp	/^void show_error(int connfd, const char *info) {$/;"	f
sig_handler	learn/10/10-1unievent.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	learn/11/11-3nonactive_conn.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	learn/13/13-4shm_talk_server.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	learn/15/15-1processpool.h	/^static void sig_handler( int sig )$/;"	f
sig_handler	learn/15/15-2pool_cgi.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	learn/15/15_1_learn_processpool.h	/^static void sig_handler(int sig) {$/;"	f
sig_handler	learn/springsnail/processpool.h	/^static void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/10/10-1unievent.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/11/11-3nonactive_conn.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/13/13-4shm_talk_server.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/15/15-1processpool.h	/^static void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/15/15-2pool_cgi.cpp	/^void sig_handler( int sig )$/;"	f
sig_handler	version1/learn/15/15_1_learn_processpool.h	/^static void sig_handler(int sig) {$/;"	f
sig_handler	version1/learn/springsnail/processpool.h	/^static void sig_handler( int sig )$/;"	f
sig_pipefd	learn/13/13-4shm_talk_server.cpp	/^int sig_pipefd[2];$/;"	v
sig_pipefd	learn/15/15-1processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_pipefd	learn/15/15-2pool_cgi.cpp	/^int sig_pipefd[2];$/;"	v
sig_pipefd	learn/15/15_1_learn_processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_pipefd	learn/springsnail/processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_pipefd	version1/learn/13/13-4shm_talk_server.cpp	/^int sig_pipefd[2];$/;"	v
sig_pipefd	version1/learn/15/15-1processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_pipefd	version1/learn/15/15-2pool_cgi.cpp	/^int sig_pipefd[2];$/;"	v
sig_pipefd	version1/learn/15/15_1_learn_processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_pipefd	version1/learn/springsnail/processpool.h	/^static int sig_pipefd[2];$/;"	v
sig_thread	learn/14/14-5sigmask.c	/^       sig_thread(void *arg)$/;"	f	file:
sig_thread	version1/learn/14/14-5sigmask.c	/^       sig_thread(void *arg)$/;"	f	file:
sig_urg	learn/10/10-3sigurg.cpp	/^void sig_urg( int sig )$/;"	f
sig_urg	version1/learn/10/10-3sigurg.cpp	/^void sig_urg( int sig )$/;"	f
signal	learn/14/14-2locker.h	/^    bool signal()$/;"	f	class:cond
signal	learn/15/14-2locker.h	/^    bool signal()$/;"	f	class:cond
signal	learn/15/locker.h	/^	bool signal() {$/;"	f	class:cond
signal	version1/learn/14/14-2locker.h	/^    bool signal()$/;"	f	class:cond
signal	version1/learn/15/14-2locker.h	/^    bool signal()$/;"	f	class:cond
signal	version1/learn/15/locker.h	/^	bool signal() {$/;"	f	class:cond
signal_cb	learn/12/12-1libevent_test.c	/^void signal_cb( int fd, short event, void* argc )$/;"	f
signal_cb	version1/learn/12/12-1libevent_test.c	/^void signal_cb( int fd, short event, void* argc )$/;"	f
slots	learn/11/11-5tw_timer.h	/^    tw_timer* slots[N];$/;"	m	class:time_wheel
slots	version1/learn/11/11-5tw_timer.h	/^    tw_timer* slots[N];$/;"	m	class:time_wheel
sockfd	learn/11/11-2lst_timer.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	learn/11/11-5tw_timer.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	learn/11/11-6time_heap.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	learn/9/9-4oneshot.cpp	/^   int sockfd;$/;"	m	struct:fds	file:
sockfd	version1/learn/11/11-2lst_timer.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	version1/learn/11/11-5tw_timer.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	version1/learn/11/11-6time_heap.h	/^    int sockfd;$/;"	m	struct:client_data
sockfd	version1/learn/9/9-4oneshot.cpp	/^   int sockfd;$/;"	m	struct:fds	file:
sort_timer_lst	learn/11/11-2lst_timer.h	/^    sort_timer_lst() : head( NULL ), tail( NULL ) {}$/;"	f	class:sort_timer_lst
sort_timer_lst	learn/11/11-2lst_timer.h	/^class sort_timer_lst$/;"	c
sort_timer_lst	version1/learn/11/11-2lst_timer.h	/^    sort_timer_lst() : head( NULL ), tail( NULL ) {}$/;"	f	class:sort_timer_lst
sort_timer_lst	version1/learn/11/11-2lst_timer.h	/^class sort_timer_lst$/;"	c
speed	pressure/webbench-1.5/webbench.c	/^int speed=0;$/;"	v
speed	version1/pressure/webbench-1.5/webbench.c	/^int speed=0;$/;"	v
srcdir	http/httpconn.cpp	/^const char *HttpConn::srcdir;$/;"	m	class:HttpConn	file:
srcdir	http/httpconn.h	/^	static const char *srcdir;$/;"	m	class:HttpConn
srcdir	version1/http/httpconn.cpp	/^const char *HttpConn::srcdir;$/;"	m	class:HttpConn	file:
srcdir	version1/http/httpconn.h	/^	static const char *srcdir;$/;"	m	class:HttpConn
srcdir_	http/httpresponse.h	/^	std::string srcdir_;$/;"	m	class:HttpResponse
srcdir_	server/webserver.h	/^	char *srcdir_;$/;"	m	class:WebServer
srcdir_	version1/http/httpresponse.h	/^	std::string srcdir_;$/;"	m	class:HttpResponse
srcdir_	version1/server/webserver.h	/^	char *srcdir_;$/;"	m	class:WebServer
start	learn/11/11-4io_timer.cpp	/^time_t start = time( NULL );$/;"	v
start	version1/learn/11/11-4io_timer.cpp	/^time_t start = time( NULL );$/;"	v
start_conn	learn/16/16-4stress_client.cpp	/^void start_conn( int epoll_fd, int num, const char* ip, int port )$/;"	f
start_conn	version1/learn/16/16-4stress_client.cpp	/^void start_conn( int epoll_fd, int num, const char* ip, int port )$/;"	f
state_	http/httprequest.h	/^	PARSE_STATE state_;$/;"	m	class:HttpRequest
state_	version1/http/httprequest.h	/^	PARSE_STATE state_;$/;"	m	class:HttpRequest
status_line	learn/6/6-2testwritev.cpp	/^static const char* status_line[2] = { "200 OK", "500 Internal server error" };$/;"	v	file:
status_line	version1/learn/6/6-2testwritev.cpp	/^static const char* status_line[2] = { "200 OK", "500 Internal server error" };$/;"	v	file:
stop	learn/5/5-3testlisten.cpp	/^static bool stop = false;$/;"	v	file:
stop	learn/test/testlisten.c	/^static bool stop = false;$/;"	v	file:
stop	learn/testlisten.c	/^static bool stop = false;$/;"	v	file:
stop	version1/learn/5/5-3testlisten.cpp	/^static bool stop = false;$/;"	v	file:
stop	version1/learn/test/testlisten.c	/^static bool stop = false;$/;"	v	file:
stop	version1/learn/testlisten.c	/^static bool stop = false;$/;"	v	file:
stop_child	learn/13/13-4shm_talk_server.cpp	/^bool stop_child = false;$/;"	v
stop_child	learn/15/15-2pool_cgi.cpp	/^bool stop_child = false;$/;"	v
stop_child	version1/learn/13/13-4shm_talk_server.cpp	/^bool stop_child = false;$/;"	v
stop_child	version1/learn/15/15-2pool_cgi.cpp	/^bool stop_child = false;$/;"	v
sub_process	learn/13/13-4shm_talk_server.cpp	/^int* sub_process = 0;$/;"	v
sub_process	learn/15/15-2pool_cgi.cpp	/^process_in_pool sub_process[ PROCESS_COUNT ];$/;"	v
sub_process	version1/learn/13/13-4shm_talk_server.cpp	/^int* sub_process = 0;$/;"	v
sub_process	version1/learn/15/15-2pool_cgi.cpp	/^process_in_pool sub_process[ PROCESS_COUNT ];$/;"	v
suffix_	logbq/log.h	/^	const char *suffix_;$/;"	m	class:Log
suffix_	version1/logbq/log.h	/^	const char *suffix_;$/;"	m	class:Log
switch_to_user	learn/7/7-2switchuser.cpp	/^static bool switch_to_user( uid_t user_id, gid_t gp_id )$/;"	f	file:
switch_to_user	version1/learn/7/7-2switchuser.cpp	/^static bool switch_to_user( uid_t user_id, gid_t gp_id )$/;"	f	file:
szret	learn/8/8-3httpparser.cpp	/^static const char* szret[] = { "I get a correct result\\n", "Something wrong\\n" };$/;"	v	file:
szret	version1/learn/8/8-3httpparser.cpp	/^static const char* szret[] = { "I get a correct result\\n", "Something wrong\\n" };$/;"	v	file:
tail	learn/11/11-2lst_timer.h	/^    util_timer* tail;$/;"	m	class:sort_timer_lst
tail	version1/learn/11/11-2lst_timer.h	/^    util_timer* tail;$/;"	m	class:sort_timer_lst
tasks	threadpool/threadpool.h	/^		std::queue<std::function<void()>> tasks;$/;"	m	struct:ThreadPool::Pool
tasks	version1/test.cpp	/^		std::queue<std::function<void()>> tasks;$/;"	m	struct:ThreadPool::Pool	file:
tasks	version1/test2.cpp	/^		std::queue<std::function<void()>> tasks;$/;"	m	struct:ThreadPool::Pool	file:
tasks	version1/threadpool/threadpool.h	/^		std::queue<std::function<void()>> tasks;$/;"	m	struct:ThreadPool::Pool
threadpool	learn/15/15-3threadpool.h	/^class threadpool$/;"	c
threadpool	learn/15/15-3threadpool.h	/^threadpool< T >::threadpool( int thread_number, int max_requests ) : $/;"	f	class:threadpool
threadpool	learn/15/15_3_threadpool.h	/^class threadpool {$/;"	c
threadpool	learn/15/15_3_threadpool.h	/^threadpool<T>::threadpool(int thread_number, int max_requests) :$/;"	f	class:threadpool
threadpool	learn/15/threadpool.h	/^class threadpool$/;"	c
threadpool	learn/15/threadpool.h	/^threadpool< T >::threadpool( int thread_number, int max_requests ) : $/;"	f	class:threadpool
threadpool	version1/learn/15/15-3threadpool.h	/^class threadpool$/;"	c
threadpool	version1/learn/15/15-3threadpool.h	/^threadpool< T >::threadpool( int thread_number, int max_requests ) : $/;"	f	class:threadpool
threadpool	version1/learn/15/15_3_threadpool.h	/^class threadpool {$/;"	c
threadpool	version1/learn/15/15_3_threadpool.h	/^threadpool<T>::threadpool(int thread_number, int max_requests) :$/;"	f	class:threadpool
threadpool	version1/learn/15/threadpool.h	/^class threadpool$/;"	c
threadpool	version1/learn/15/threadpool.h	/^threadpool< T >::threadpool( int thread_number, int max_requests ) : $/;"	f	class:threadpool
threadpool_	server/webserver.h	/^	std::unique_ptr<ThreadPool> threadpool_;$/;"	m	class:WebServer
threadpool_	version1/server/webserver.h	/^	std::unique_ptr<ThreadPool> threadpool_;$/;"	m	class:WebServer
tick	learn/11/11-2lst_timer.h	/^    void tick()$/;"	f	class:sort_timer_lst
tick	learn/11/11-5tw_timer.h	/^    void tick()$/;"	f	class:time_wheel
tick	learn/11/11-6time_heap.h	/^    void tick()$/;"	f	class:time_heap
tick	version1/learn/11/11-2lst_timer.h	/^    void tick()$/;"	f	class:sort_timer_lst
tick	version1/learn/11/11-5tw_timer.h	/^    void tick()$/;"	f	class:time_wheel
tick	version1/learn/11/11-6time_heap.h	/^    void tick()$/;"	f	class:time_heap
time_heap	learn/11/11-6time_heap.h	/^    time_heap( heap_timer** init_array, int size, int capacity ) throw ( std::exception )$/;"	f	class:time_heap
time_heap	learn/11/11-6time_heap.h	/^    time_heap( int cap ) throw ( std::exception )$/;"	f	class:time_heap
time_heap	learn/11/11-6time_heap.h	/^class time_heap$/;"	c
time_heap	version1/learn/11/11-6time_heap.h	/^    time_heap( heap_timer** init_array, int size, int capacity ) throw ( std::exception )$/;"	f	class:time_heap
time_heap	version1/learn/11/11-6time_heap.h	/^    time_heap( int cap ) throw ( std::exception )$/;"	f	class:time_heap
time_heap	version1/learn/11/11-6time_heap.h	/^class time_heap$/;"	c
time_slot	learn/11/11-5tw_timer.h	/^    int time_slot;$/;"	m	class:tw_timer
time_slot	version1/learn/11/11-5tw_timer.h	/^    int time_slot;$/;"	m	class:tw_timer
time_wheel	learn/11/11-5tw_timer.h	/^    time_wheel() : cur_slot( 0 )$/;"	f	class:time_wheel
time_wheel	learn/11/11-5tw_timer.h	/^class time_wheel$/;"	c
time_wheel	version1/learn/11/11-5tw_timer.h	/^    time_wheel() : cur_slot( 0 )$/;"	f	class:time_wheel
time_wheel	version1/learn/11/11-5tw_timer.h	/^class time_wheel$/;"	c
timeout	learn/11/11-4io_timer.cpp	/^int timeout = TIMEOUT;$/;"	v
timeout	version1/learn/11/11-4io_timer.cpp	/^int timeout = TIMEOUT;$/;"	v
timeout_cb	learn/12/12-1libevent_test.c	/^void timeout_cb( int fd, short event, void* argc )$/;"	f
timeout_cb	version1/learn/12/12-1libevent_test.c	/^void timeout_cb( int fd, short event, void* argc )$/;"	f
timeout_connect	learn/11/11-1connect_timeout.cpp	/^int timeout_connect( const char* ip, int port, int time )$/;"	f
timeout_connect	version1/learn/11/11-1connect_timeout.cpp	/^int timeout_connect( const char* ip, int port, int time )$/;"	f
timeoutms_	server/webserver.h	/^	int timeoutms_;$/;"	m	class:WebServer
timeoutms_	version1/server/webserver.h	/^	int timeoutms_;$/;"	m	class:WebServer
timer	learn/11/11-2lst_timer.h	/^    util_timer* timer;$/;"	m	struct:client_data
timer	learn/11/11-5tw_timer.h	/^    tw_timer* timer;$/;"	m	struct:client_data
timer	learn/11/11-6time_heap.h	/^    heap_timer* timer;$/;"	m	struct:client_data
timer	version1/learn/11/11-2lst_timer.h	/^    util_timer* timer;$/;"	m	struct:client_data
timer	version1/learn/11/11-5tw_timer.h	/^    tw_timer* timer;$/;"	m	struct:client_data
timer	version1/learn/11/11-6time_heap.h	/^    heap_timer* timer;$/;"	m	struct:client_data
timer_	server/webserver.h	/^	std::unique_ptr<HeapTimer> timer_;$/;"	m	class:WebServer
timer_	version1/server/webserver.h	/^	std::unique_ptr<HeapTimer> timer_;$/;"	m	class:WebServer
timer_handler	learn/11/11-3nonactive_conn.cpp	/^void timer_handler()$/;"	f
timer_handler	version1/learn/11/11-3nonactive_conn.cpp	/^void timer_handler()$/;"	f
timer_lst	learn/11/11-3nonactive_conn.cpp	/^static sort_timer_lst timer_lst;$/;"	v	file:
timer_lst	version1/learn/11/11-3nonactive_conn.cpp	/^static sort_timer_lst timer_lst;$/;"	v	file:
timerexpired	pressure/webbench-1.5/webbench.c	/^volatile int timerexpired=0;$/;"	v
timerexpired	version1/pressure/webbench-1.5/webbench.c	/^volatile int timerexpired=0;$/;"	v
today_	logbq/log.h	/^	int today_;$/;"	m	class:Log
today_	version1/logbq/log.h	/^	int today_;$/;"	m	class:Log
top	learn/11/11-6time_heap.h	/^    heap_timer* top() const$/;"	f	class:time_heap
top	version1/learn/11/11-6time_heap.h	/^    heap_timer* top() const$/;"	f	class:time_heap
tw_timer	learn/11/11-5tw_timer.h	/^    tw_timer( int rot, int ts ) $/;"	f	class:tw_timer
tw_timer	learn/11/11-5tw_timer.h	/^class tw_timer$/;"	c
tw_timer	version1/learn/11/11-5tw_timer.h	/^    tw_timer( int rot, int ts ) $/;"	f	class:tw_timer
tw_timer	version1/learn/11/11-5tw_timer.h	/^class tw_timer$/;"	c
unblock_connect	learn/9/9-5unblockconnect.cpp	/^int unblock_connect( const char* ip, int port, int time )$/;"	f
unblock_connect	version1/learn/9/9-5unblockconnect.cpp	/^int unblock_connect( const char* ip, int port, int time )$/;"	f
unlock	learn/14/14-2locker.h	/^    bool unlock()$/;"	f	class:locker
unlock	learn/15/14-2locker.h	/^    bool unlock()$/;"	f	class:locker
unlock	learn/15/locker.h	/^	bool unlock() {$/;"	f	class:locker
unlock	version1/learn/14/14-2locker.h	/^    bool unlock()$/;"	f	class:locker
unlock	version1/learn/15/14-2locker.h	/^    bool unlock()$/;"	f	class:locker
unlock	version1/learn/15/locker.h	/^	bool unlock() {$/;"	f	class:locker
unmap	learn/15/15-5http_conn.cpp	/^void http_conn::unmap()$/;"	f	class:http_conn
unmap	learn/15/15_5_http_conn.cpp	/^void http_conn::unmap() {$/;"	f	class:http_conn
unmap	learn/15/http_conn.cpp	/^void http_conn::unmap()$/;"	f	class:http_conn
unmap	version1/learn/15/15-5http_conn.cpp	/^void http_conn::unmap()$/;"	f	class:http_conn
unmap	version1/learn/15/15_5_http_conn.cpp	/^void http_conn::unmap() {$/;"	f	class:http_conn
unmap	version1/learn/15/http_conn.cpp	/^void http_conn::unmap()$/;"	f	class:http_conn
usage	learn/springsnail/main.cpp	/^static void usage( const char* prog )$/;"	f	file:
usage	pressure/webbench-1.5/webbench.c	/^static void usage(void)$/;"	f	file:
usage	version1/learn/springsnail/main.cpp	/^static void usage( const char* prog )$/;"	f	file:
usage	version1/pressure/webbench-1.5/webbench.c	/^static void usage(void)$/;"	f	file:
user_count	learn/13/13-4shm_talk_server.cpp	/^int user_count = 0;$/;"	v
user_count	version1/learn/13/13-4shm_talk_server.cpp	/^int user_count = 0;$/;"	v
user_data	learn/11/11-2lst_timer.h	/^   client_data* user_data;$/;"	m	class:util_timer
user_data	learn/11/11-5tw_timer.h	/^    client_data* user_data;$/;"	m	class:tw_timer
user_data	learn/11/11-6time_heap.h	/^   client_data* user_data;$/;"	m	class:heap_timer
user_data	version1/learn/11/11-2lst_timer.h	/^   client_data* user_data;$/;"	m	class:util_timer
user_data	version1/learn/11/11-5tw_timer.h	/^    client_data* user_data;$/;"	m	class:tw_timer
user_data	version1/learn/11/11-6time_heap.h	/^   client_data* user_data;$/;"	m	class:heap_timer
usercount	http/httpconn.cpp	/^std::atomic<int> HttpConn::usercount;$/;"	m	class:HttpConn	file:
usercount	http/httpconn.h	/^	static std::atomic<int> usercount;$/;"	m	class:HttpConn
usercount	version1/http/httpconn.cpp	/^std::atomic<int> HttpConn::usercount;$/;"	m	class:HttpConn	file:
usercount	version1/http/httpconn.h	/^	static std::atomic<int> usercount;$/;"	m	class:HttpConn
users	learn/13/13-4shm_talk_server.cpp	/^client_data* users = 0;$/;"	v
users	version1/learn/13/13-4shm_talk_server.cpp	/^client_data* users = 0;$/;"	v
users_	server/webserver.h	/^	std::unordered_map<int, HttpConn> users_;$/;"	m	class:WebServer
users_	version1/server/webserver.h	/^	std::unordered_map<int, HttpConn> users_;$/;"	m	class:WebServer
util_timer	learn/11/11-2lst_timer.h	/^    util_timer() : prev( NULL ), next( NULL ){}$/;"	f	class:util_timer
util_timer	learn/11/11-2lst_timer.h	/^class util_timer$/;"	c
util_timer	version1/learn/11/11-2lst_timer.h	/^    util_timer() : prev( NULL ), next( NULL ){}$/;"	f	class:util_timer
util_timer	version1/learn/11/11-2lst_timer.h	/^class util_timer$/;"	c
val	learn/13/13-3sem.cpp	/^     int val;                  $/;"	m	union:semun	file:
val	version1/learn/13/13-3sem.cpp	/^     int val;                  $/;"	m	union:semun	file:
version	learn/springsnail/main.cpp	/^static const char* version = "1.0";$/;"	v	file:
version	version1/learn/springsnail/main.cpp	/^static const char* version = "1.0";$/;"	v	file:
version_	http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
version_	version1/http/httprequest.h	/^	std::string method_, path_, version_, body_;$/;"	m	class:HttpRequest
wait	learn/14/14-2locker.h	/^    bool wait()$/;"	f	class:cond
wait	learn/14/14-2locker.h	/^    bool wait()$/;"	f	class:sem
wait	learn/15/14-2locker.h	/^    bool wait()$/;"	f	class:cond
wait	learn/15/14-2locker.h	/^    bool wait()$/;"	f	class:sem
wait	learn/15/locker.h	/^	bool wait() {$/;"	f	class:cond
wait	learn/15/locker.h	/^	bool wait() {$/;"	f	class:sem
wait	version1/learn/14/14-2locker.h	/^    bool wait()$/;"	f	class:cond
wait	version1/learn/14/14-2locker.h	/^    bool wait()$/;"	f	class:sem
wait	version1/learn/15/14-2locker.h	/^    bool wait()$/;"	f	class:cond
wait	version1/learn/15/14-2locker.h	/^    bool wait()$/;"	f	class:sem
wait	version1/learn/15/locker.h	/^	bool wait() {$/;"	f	class:cond
wait	version1/learn/15/locker.h	/^	bool wait() {$/;"	f	class:sem
worker	learn/15/15-3threadpool.h	/^void* threadpool< T >::worker( void* arg )$/;"	f	class:threadpool
worker	learn/15/15_3_threadpool.h	/^void *threadpool<T>::worker(void *arg) {$/;"	f	class:threadpool
worker	learn/15/threadpool.h	/^void* threadpool< T >::worker( void* arg )$/;"	f	class:threadpool
worker	learn/9/9-4oneshot.cpp	/^void* worker( void* arg )$/;"	f
worker	version1/learn/15/15-3threadpool.h	/^void* threadpool< T >::worker( void* arg )$/;"	f	class:threadpool
worker	version1/learn/15/15_3_threadpool.h	/^void *threadpool<T>::worker(void *arg) {$/;"	f	class:threadpool
worker	version1/learn/15/threadpool.h	/^void* threadpool< T >::worker( void* arg )$/;"	f	class:threadpool
worker	version1/learn/9/9-4oneshot.cpp	/^void* worker( void* arg )$/;"	f
write	learn/15/15-5http_conn.cpp	/^bool http_conn::write()$/;"	f	class:http_conn
write	learn/15/15_5_http_conn.cpp	/^bool http_conn::write() {$/;"	f	class:http_conn
write	learn/15/http_conn.cpp	/^bool http_conn::write()$/;"	f	class:http_conn
write	version1/learn/15/15-5http_conn.cpp	/^bool http_conn::write()$/;"	f	class:http_conn
write	version1/learn/15/15_5_http_conn.cpp	/^bool http_conn::write() {$/;"	f	class:http_conn
write	version1/learn/15/http_conn.cpp	/^bool http_conn::write()$/;"	f	class:http_conn
write_buf	learn/9/9-7mytalk_server.cpp	/^    char* write_buf;$/;"	m	struct:client_data	file:
write_buf	version1/learn/9/9-7mytalk_server.cpp	/^    char* write_buf;$/;"	m	struct:client_data	file:
write_clt	learn/springsnail/conn.cpp	/^RET_CODE conn::write_clt()$/;"	f	class:conn
write_clt	version1/learn/springsnail/conn.cpp	/^RET_CODE conn::write_clt()$/;"	f	class:conn
write_nbytes	learn/16/16-4stress_client.cpp	/^bool write_nbytes( int sockfd, const char* buffer, int len )$/;"	f
write_nbytes	version1/learn/16/16-4stress_client.cpp	/^bool write_nbytes( int sockfd, const char* buffer, int len )$/;"	f
write_srv	learn/springsnail/conn.cpp	/^RET_CODE conn::write_srv()$/;"	f	class:conn
write_srv	version1/learn/springsnail/conn.cpp	/^RET_CODE conn::write_srv()$/;"	f	class:conn
writebuff_	http/httpconn.h	/^	Buffer writebuff_;$/;"	m	class:HttpConn
writebuff_	version1/http/httpconn.h	/^	Buffer writebuff_;$/;"	m	class:HttpConn
writepos_	buffer/buffer.h	/^	std::atomic<std::size_t> writepos_;$/;"	m	class:Buffer
writepos_	version1/buffer/buffer.h	/^	std::atomic<std::size_t> writepos_;$/;"	m	class:Buffer
writethread_	logbq/log.h	/^	std::unique_ptr<std::thread> writethread_;$/;"	m	class:Log
writethread_	version1/logbq/log.h	/^	std::unique_ptr<std::thread> writethread_;$/;"	m	class:Log
~BlockDeque	logbq/blockqueue.h	/^BlockDeque<T>::~BlockDeque() {$/;"	f	class:BlockDeque
~BlockDeque	version1/logbq/blockqueue.h	/^BlockDeque<T>::~BlockDeque() {$/;"	f	class:BlockDeque
~Config	config/config.h	/^	~Config() {}$/;"	f	class:Config
~Config	version1/config/config.h	/^	~Config() {}$/;"	f	class:Config
~Epoller	server/epoller.cpp	/^Epoller::~Epoller() {$/;"	f	class:Epoller
~Epoller	version1/server/epoller.cpp	/^Epoller::~Epoller() {$/;"	f	class:Epoller
~HeapTimer	timer/heaptimer.h	/^	~HeapTimer() {$/;"	f	class:HeapTimer
~HeapTimer	version1/timer/heaptimer.h	/^	~HeapTimer() {$/;"	f	class:HeapTimer
~HttpConn	http/httpconn.cpp	/^HttpConn::~HttpConn() {$/;"	f	class:HttpConn
~HttpConn	version1/http/httpconn.cpp	/^HttpConn::~HttpConn() {$/;"	f	class:HttpConn
~HttpResponse	http/httpresponse.cpp	/^HttpResponse::~HttpResponse() {$/;"	f	class:HttpResponse
~HttpResponse	version1/http/httpresponse.cpp	/^HttpResponse::~HttpResponse() {$/;"	f	class:HttpResponse
~Log	logbq/log.cpp	/^Log::~Log() {$/;"	f	class:Log
~Log	version1/logbq/log.cpp	/^Log::~Log() {$/;"	f	class:Log
~ThreadPool	threadpool/threadpool.h	/^	~ThreadPool() {$/;"	f	class:ThreadPool
~ThreadPool	version1/test.cpp	/^	~ThreadPool() {$/;"	f	class:ThreadPool
~ThreadPool	version1/test2.cpp	/^	~ThreadPool() {$/;"	f	class:ThreadPool
~ThreadPool	version1/threadpool/threadpool.h	/^	~ThreadPool() {$/;"	f	class:ThreadPool
~WebServer	server/webserver.cpp	/^WebServer::~WebServer() {$/;"	f	class:WebServer
~WebServer	test.cpp	/^WebServer::~WebServer() {$/;"	f	class:WebServer
~WebServer	version1/server/webserver.cpp	/^WebServer::~WebServer() {$/;"	f	class:WebServer
~cgi_conn	learn/15/15_2_learn_processpool_cgi.cpp	/^	~cgi_conn() {}$/;"	f	class:cgi_conn
~cgi_conn	version1/learn/15/15_2_learn_processpool_cgi.cpp	/^	~cgi_conn() {}$/;"	f	class:cgi_conn
~cond	learn/14/14-2locker.h	/^    ~cond()$/;"	f	class:cond
~cond	learn/15/14-2locker.h	/^    ~cond()$/;"	f	class:cond
~cond	learn/15/locker.h	/^	~cond() {$/;"	f	class:cond
~cond	version1/learn/14/14-2locker.h	/^    ~cond()$/;"	f	class:cond
~cond	version1/learn/15/14-2locker.h	/^    ~cond()$/;"	f	class:cond
~cond	version1/learn/15/locker.h	/^	~cond() {$/;"	f	class:cond
~conn	learn/springsnail/conn.cpp	/^conn::~conn()$/;"	f	class:conn
~conn	version1/learn/springsnail/conn.cpp	/^conn::~conn()$/;"	f	class:conn
~http_conn	learn/15/15-4http_conn.h	/^    ~http_conn(){}$/;"	f	class:http_conn
~http_conn	learn/15/15_4_http_conn.h	/^	~http_conn() {}$/;"	f	class:http_conn
~http_conn	learn/15/http_conn.h	/^    ~http_conn(){}$/;"	f	class:http_conn
~http_conn	version1/learn/15/15-4http_conn.h	/^    ~http_conn(){}$/;"	f	class:http_conn
~http_conn	version1/learn/15/15_4_http_conn.h	/^	~http_conn() {}$/;"	f	class:http_conn
~http_conn	version1/learn/15/http_conn.h	/^    ~http_conn(){}$/;"	f	class:http_conn
~locker	learn/14/14-2locker.h	/^    ~locker()$/;"	f	class:locker
~locker	learn/15/14-2locker.h	/^    ~locker()$/;"	f	class:locker
~locker	learn/15/locker.h	/^	~locker() {$/;"	f	class:locker
~locker	version1/learn/14/14-2locker.h	/^    ~locker()$/;"	f	class:locker
~locker	version1/learn/15/14-2locker.h	/^    ~locker()$/;"	f	class:locker
~locker	version1/learn/15/locker.h	/^	~locker() {$/;"	f	class:locker
~mgr	learn/springsnail/mgr.cpp	/^mgr::~mgr()$/;"	f	class:mgr
~mgr	version1/learn/springsnail/mgr.cpp	/^mgr::~mgr()$/;"	f	class:mgr
~processpool	learn/15/15-1processpool.h	/^    ~processpool()$/;"	f	class:processpool
~processpool	learn/15/15_1_learn_processpool.h	/^	~processpool() {$/;"	f	class:processpool
~processpool	learn/springsnail/processpool.h	/^    ~processpool()$/;"	f	class:processpool
~processpool	version1/learn/15/15-1processpool.h	/^    ~processpool()$/;"	f	class:processpool
~processpool	version1/learn/15/15_1_learn_processpool.h	/^	~processpool() {$/;"	f	class:processpool
~processpool	version1/learn/springsnail/processpool.h	/^    ~processpool()$/;"	f	class:processpool
~sem	learn/14/14-2locker.h	/^    ~sem()$/;"	f	class:sem
~sem	learn/15/14-2locker.h	/^    ~sem()$/;"	f	class:sem
~sem	learn/15/locker.h	/^	~sem() {$/;"	f	class:sem
~sem	version1/learn/14/14-2locker.h	/^    ~sem()$/;"	f	class:sem
~sem	version1/learn/15/14-2locker.h	/^    ~sem()$/;"	f	class:sem
~sem	version1/learn/15/locker.h	/^	~sem() {$/;"	f	class:sem
~sort_timer_lst	learn/11/11-2lst_timer.h	/^    ~sort_timer_lst()$/;"	f	class:sort_timer_lst
~sort_timer_lst	version1/learn/11/11-2lst_timer.h	/^    ~sort_timer_lst()$/;"	f	class:sort_timer_lst
~threadpool	learn/15/15-3threadpool.h	/^threadpool< T >::~threadpool()$/;"	f	class:threadpool
~threadpool	learn/15/15_3_threadpool.h	/^threadpool<T>::~threadpool() {$/;"	f	class:threadpool
~threadpool	learn/15/threadpool.h	/^threadpool< T >::~threadpool()$/;"	f	class:threadpool
~threadpool	version1/learn/15/15-3threadpool.h	/^threadpool< T >::~threadpool()$/;"	f	class:threadpool
~threadpool	version1/learn/15/15_3_threadpool.h	/^threadpool<T>::~threadpool() {$/;"	f	class:threadpool
~threadpool	version1/learn/15/threadpool.h	/^threadpool< T >::~threadpool()$/;"	f	class:threadpool
~time_heap	learn/11/11-6time_heap.h	/^    ~time_heap()$/;"	f	class:time_heap
~time_heap	version1/learn/11/11-6time_heap.h	/^    ~time_heap()$/;"	f	class:time_heap
~time_wheel	learn/11/11-5tw_timer.h	/^    ~time_wheel()$/;"	f	class:time_wheel
~time_wheel	version1/learn/11/11-5tw_timer.h	/^    ~time_wheel()$/;"	f	class:time_wheel
